{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Convex's blog For full documentation visit convex .","title":"Home"},{"location":"#welcome-to-convexs-blog","text":"For full documentation visit convex .","title":"Welcome to Convex's blog"},{"location":"about/","text":"Testing.","title":"About"},{"location":"namespaces/","text":"NameSpaces A namespace wraps a global system resource in an abstraction that makes it appear to the processes within the namespace that they have their own isolated instance of the global resource. Changes to the global resource are visible to other processes that are members of the namespace, but are invisible to other processes. One use of namespaces is to implement containers. Linux provides the following namespaces: Namespace Constant Isolates Cgroup CLONE_NEWCGROUP Cgroup root directory IPC CLONE_NEWIPC System V IPC, POSIX message queues Network CLONE_NEWNET Network devices, stacks, ports, etc. Mount CLONE_NEWNS Mount points PID CLONE_NEWPID Process IDs User CLONE_NEWUSER User and group IDs UTS CLONE_NEWUTS Hostname and NIS domain name cgroup namespace cgroup Linux control groups. Control cgroups, usually referred to as cgroups, are a Linux kernel feature which allow processes to be organized into hierarchical groups whose usage of various types of resources can then be limited and monitored. The kernel's cgroup interface is provided through a pseudo-filesystem called cgroupfs. Grouping is implemented in the core cgroup kernel code, while resource tracking and limits are implemented in a set of per-resource-type subsystems (memory, CPU, and so on). IPC namespaces IPC namespaces isolate certain IPC resources, namely, System V IPC objects (see svipc(7)) and (since Linux 2.6.30) POSIX message queues (see mq_overview(7)). The common characteristic of these IPC mechanisms is that IPC objects are identified by mechanisms other than filesystem pathnames. Each IPC namespace has its own set of System V IPC identifiers and its own POSIX message queue filesystem. Objects created in an IPC namespace are visible to all other processes that are members of that namespace, but are not visible to processes in other IPC namespaces. Network namespaces Network namespaces provide isolation of the system resources associated with networking: network devices, IPv4 and IPv6 protocol stacks, IP routing tables, firewall rules, the /proc/net directory (which is a symbolic link to /proc/PID/net), the /sys/class/net directory, various files under /proc/sys/net, port numbers (sockets), and so on. In addition, network namespaces isolate the UNIX domain abstract socket namespace (see unix(7)). A physical network device can live in exactly one network namespace. When a network namespace is freed (i.e., when the last process in the namespace terminates), its physical network devices are moved back to the initial network namespace (not to the parent of the process). A virtual network (veth(4)) device pair provides a pipe-like abstraction that can be used to create tunnels between network namespaces, and can be used to create a bridge to a physical network device in another namespace. When a namespace is freed, the veth(4) devices that it contains are destroyed. Use of network namespaces requires a kernel that is configured with the CONFIG_NET_NS option. Mount namespaces Mount namespaces provide isolation of the list of mount points seen by the processes in each namespace instance. Thus, the processes in each of the mount namespace instances will see distinct single-directory hierarchies. The views provided by the /proc/[pid]/mounts, /proc/[pid]/mountinfo, and /proc/[pid]/mountstats files (all described in proc(5)) correspond to the mount namespace in which the process with the PID [pid] resides. (All of the processes that reside in the same mount namespace will see the same view in these files.) When a process creates a new mount namespace using clone(2) or unshare(2) with the CLONE_NEWNS flag, the mount point list for the new namespace is a copy of the caller's mount point list. Subsequent modifications to the mount point list (mount(2) and umount(2)) in either mount namespace will not (by default) affect the mount point list seen in the other namespace (but see the following discussion of shared subtrees). PID namespaces PID namespaces isolate the process ID number space, meaning that processes in different PID namespaces can have the same PID. PID namespaces allow containers to provide func tionality such as suspending/resuming the set of processes in the container and migrating the container to a new host while the processes inside the container maintain the same PIDs. PIDs in a new PID namespace start at 1, somewhat like a standalone system, and calls to fork(2), vfork(2), or clone(2) will produce processes with PIDs that are unique within the namespace. Use of PID namespaces requires a kernel that is configured with the CONFIG_PID_NS option. User namespaces User namespaces isolate security-related identifiers and attributes, in particular, user IDs and group IDs (see credentials(7)), the root directory, keys (see keyrings(7)), and capabilities (see capabilities(7)). A process's user and group IDs can be different inside and outside a user namespace. In particular, a process can have a normal unprivileged user ID outside a user namespace while at the same time having a user ID of 0 inside the namespace; in other words, the process has full privileges for operations inside the user namespace, but is unprivileged for operations outside the namespace. UTS namespaces UTS namespaces provide isolation of two system identifiers: the hostname and the NIS domain name. These identifiers are set using sethostname(2) and setdomainname(2), and can be retrieved using uname(2), gethostname(2), and getdomainname(2).","title":"Namespaces"},{"location":"namespaces/#namespaces","text":"A namespace wraps a global system resource in an abstraction that makes it appear to the processes within the namespace that they have their own isolated instance of the global resource. Changes to the global resource are visible to other processes that are members of the namespace, but are invisible to other processes. One use of namespaces is to implement containers. Linux provides the following namespaces: Namespace Constant Isolates Cgroup CLONE_NEWCGROUP Cgroup root directory IPC CLONE_NEWIPC System V IPC, POSIX message queues Network CLONE_NEWNET Network devices, stacks, ports, etc. Mount CLONE_NEWNS Mount points PID CLONE_NEWPID Process IDs User CLONE_NEWUSER User and group IDs UTS CLONE_NEWUTS Hostname and NIS domain name","title":"NameSpaces"},{"location":"namespaces/#cgroup-namespace","text":"","title":"cgroup namespace"},{"location":"namespaces/#cgroup","text":"Linux control groups. Control cgroups, usually referred to as cgroups, are a Linux kernel feature which allow processes to be organized into hierarchical groups whose usage of various types of resources can then be limited and monitored. The kernel's cgroup interface is provided through a pseudo-filesystem called cgroupfs. Grouping is implemented in the core cgroup kernel code, while resource tracking and limits are implemented in a set of per-resource-type subsystems (memory, CPU, and so on).","title":"cgroup"},{"location":"namespaces/#ipc-namespaces","text":"IPC namespaces isolate certain IPC resources, namely, System V IPC objects (see svipc(7)) and (since Linux 2.6.30) POSIX message queues (see mq_overview(7)). The common characteristic of these IPC mechanisms is that IPC objects are identified by mechanisms other than filesystem pathnames. Each IPC namespace has its own set of System V IPC identifiers and its own POSIX message queue filesystem. Objects created in an IPC namespace are visible to all other processes that are members of that namespace, but are not visible to processes in other IPC namespaces.","title":"IPC namespaces"},{"location":"namespaces/#network-namespaces","text":"Network namespaces provide isolation of the system resources associated with networking: network devices, IPv4 and IPv6 protocol stacks, IP routing tables, firewall rules, the /proc/net directory (which is a symbolic link to /proc/PID/net), the /sys/class/net directory, various files under /proc/sys/net, port numbers (sockets), and so on. In addition, network namespaces isolate the UNIX domain abstract socket namespace (see unix(7)). A physical network device can live in exactly one network namespace. When a network namespace is freed (i.e., when the last process in the namespace terminates), its physical network devices are moved back to the initial network namespace (not to the parent of the process). A virtual network (veth(4)) device pair provides a pipe-like abstraction that can be used to create tunnels between network namespaces, and can be used to create a bridge to a physical network device in another namespace. When a namespace is freed, the veth(4) devices that it contains are destroyed. Use of network namespaces requires a kernel that is configured with the CONFIG_NET_NS option.","title":"Network namespaces"},{"location":"namespaces/#mount-namespaces","text":"Mount namespaces provide isolation of the list of mount points seen by the processes in each namespace instance. Thus, the processes in each of the mount namespace instances will see distinct single-directory hierarchies. The views provided by the /proc/[pid]/mounts, /proc/[pid]/mountinfo, and /proc/[pid]/mountstats files (all described in proc(5)) correspond to the mount namespace in which the process with the PID [pid] resides. (All of the processes that reside in the same mount namespace will see the same view in these files.) When a process creates a new mount namespace using clone(2) or unshare(2) with the CLONE_NEWNS flag, the mount point list for the new namespace is a copy of the caller's mount point list. Subsequent modifications to the mount point list (mount(2) and umount(2)) in either mount namespace will not (by default) affect the mount point list seen in the other namespace (but see the following discussion of shared subtrees).","title":"Mount namespaces"},{"location":"namespaces/#pid-namespaces","text":"PID namespaces isolate the process ID number space, meaning that processes in different PID namespaces can have the same PID. PID namespaces allow containers to provide func tionality such as suspending/resuming the set of processes in the container and migrating the container to a new host while the processes inside the container maintain the same PIDs. PIDs in a new PID namespace start at 1, somewhat like a standalone system, and calls to fork(2), vfork(2), or clone(2) will produce processes with PIDs that are unique within the namespace. Use of PID namespaces requires a kernel that is configured with the CONFIG_PID_NS option.","title":"PID namespaces"},{"location":"namespaces/#user-namespaces","text":"User namespaces isolate security-related identifiers and attributes, in particular, user IDs and group IDs (see credentials(7)), the root directory, keys (see keyrings(7)), and capabilities (see capabilities(7)). A process's user and group IDs can be different inside and outside a user namespace. In particular, a process can have a normal unprivileged user ID outside a user namespace while at the same time having a user ID of 0 inside the namespace; in other words, the process has full privileges for operations inside the user namespace, but is unprivileged for operations outside the namespace.","title":"User namespaces"},{"location":"namespaces/#uts-namespaces","text":"UTS namespaces provide isolation of two system identifiers: the hostname and the NIS domain name. These identifiers are set using sethostname(2) and setdomainname(2), and can be retrieved using uname(2), gethostname(2), and getdomainname(2).","title":"UTS namespaces"},{"location":"AI/DeepinMind/","text":"\u591a\u5c42\u611f\u77e5\u5668 MLP Neural network \u795e\u7ecf(\u5143)\u7f51\u7edc What are the neurons? Thing that holds a number(0 - 1) \u88c5\u6709\u4e00\u4e2a\u6570\u5b57\u7684\u5bb9\u5668 (\u5b9e\u9645\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u7684\u8f93\u5165\u662f\u4e0a\u4e00\u5c42\u6240\u6709\u795e\u7ecf\u5143\u7684\u8f93\u51fa\uff0c\u800c\u5b83\u7684\u8f93\u51fa\u662f\u4e00\u4e2a0\u52301\u4e4b\u95f4\u7684\u503c) The number 's name is Activation. \u6fc0\u6d3b\u503c \u795e\u7ecf\u7f51\u7edc\u5206\u5c42 \u795e\u7ecf\u7f51\u7edc\u8fd0\u4f5c\u7684\u65f6\u5019\uff0c\u4e0a\u4e00\u5c42\u7684\u6fc0\u6d3b\u503c\u5c06\u51b3\u5b9a\u4e0b\u4e00\u5c42\u7684\u6fc0\u6d3b\u503c \u795e\u7ecf\u7f51\u7edc\u5904\u7406\u4fe1\u606f\u7684\u6838\u5fc3\u673a\u5236\u6b63\u662f\u4e00\u5c42\u7684\u6fc0\u6d3b\u503c\u662f\u901a\u8fc7\u600e\u6837\u7684\u8fd0\u7b97\uff0c\u7b97\u51fa\u4e0b\u4e00\u5c42\u7684\u6fc0\u6d3b\u503c\u7684 How are they connnected? sigmoid/logistic/\u903b\u8f91\u65af\u8482\u66f2\u7ebf $$ \\sigma(x)=\\frac{1}{1+e^{-x}} $$ \u80fd\u628a\u975e\u5e38\u5927\u7684\u8d1f\u503c\u53d8\u6210\u63a5\u8fd10,\u975e\u5e38\u5927\u7684\u6b63\u503c\u53d8\u6210\u63a5\u8fd11 $$ \\sigma(w_1a_1+w_2a_2+w_3a_3+\\cdot\\cdot\\cdot+w_na_n-bias) $$ \u6743\u91cdw\u544a\u8bc9\u4f60\u795e\u5f84\u5143\u5173\u6ce8\u4ec0\u4e48\uff0c\u6743\u91cd\u4f5c\u7528\u4e8e\u67d0\u6761\u7f51\u7edc\u8fde\u63a5 \u504f\u7f6e\u544a\u8bc9\u4f60\u52a0\u6743\u548c\u6709\u624d\u80fd\u8ba9\u795e\u5f84\u5143\u6fc0\u53d1\u53d8\u5f97\u6709\u610f\u4e49\u3002\u504f\u7f6e\u4f5c\u7528\u4e8e\u67d0\u4e2a\u795e\u5f84\u5143 \u795e\u7ecf\u7f51\u7edc\u7684\u89c4\u6a21\uff1a(784,16,16,10)\u65f6,\u53ef\u8c03\u6574\u7684\u53c2\u6570\u4e2a\u6570\uff1a $$ \\text{weights:}786\\times16+16\\times16+16\\times10 $$ $$ \\text{biases:}16+16+10 $$ \u77e9\u9635\u5f62\u5f0f\uff1a $$ \\sigma \\begin{pmatrix} \\begin{bmatrix} w_{0,0} & w_{0,1} & \\cdots & w_{0,n}\\ w_{1,0} & w_{1,1} & \\cdots & w_{1,n}\\ \\vdots & \\vdots & \\ddots & \\vdots\\ w_{k,0} & w_{k,1} & \\cdots & w_{k,n} \\end{bmatrix} \\begin{bmatrix} a_0^{(0)}\\ a_1^{(0)}\\ \\vdots\\ a_n^{(0)}\\ \\end{bmatrix} + \\begin{bmatrix} b_0\\ b_1\\ \\vdots\\ b_k \\end{bmatrix} \\end{pmatrix} $$ k\u8868\u793a\u4e0b\u4e00\u5c42\u795e\u7ecf\u5143\u6570\u91cf n\u8868\u793a\u6b64\u5c42\u7684\u795e\u7ecf\u5143\u6570\u91cf $$ a^{(0)}\\text{\uff1a\u8868\u793a\u7b2c\u4e00\u5c42\u795e\u7ecf\u5143\u7684\u96c6\u5408} $$ $$ a^{(1)}=\\sigma(W\\cdot a^{(0)}+b) $$ Really stands for Rectified Linear Unit(ReLU):\u7ebf\u6027\u6574\u6d41\u51fd\u6570 $$ ReLU(a)=max(0,a) $$ Gradient descent \u68af\u5ea6\u4e0b\u964d","title":"DeepinMind"},{"location":"AI/DeepinMind/#gradient-descent","text":"","title":"Gradient descent \u68af\u5ea6\u4e0b\u964d"},{"location":"AI/neuron/","text":"neuron \u795e\u7ecf\u5143 \u795e\u7ecf\u5143\uff08\u82f1\u8bed\uff1aneuron\uff09\uff0c\u53c8\u540d\u795e\u7ecf\u539f\u6216\u795e\u7ecf\u7ec6\u80de\uff08\u82f1\u8bed\uff1anerve cell\uff09\uff0c\u662f\u795e\u7ecf\u7cfb\u7edf\u6700\u57fa\u672c\u7684\u7ed3\u6784\u548c\u529f\u80fd\u5355\u4f4d\u3002 \u795e\u7ecf\u5143\u80fd\u611f\u77e5\u73af\u5883\u7684\u53d8\u5316\uff0c\u518d\u5c06\u4fe1\u606f\u4f20\u9012\u7ed9\u5176\u4ed6\u7684\u795e\u7ecf\u5143\uff0c\u5e76\u6307\u4ee4\u96c6\u4f53\u505a\u51fa\u53cd\u5e94\u3002 \u5206\u4e3a\u7ec6\u80de\u4f53\u548c\u7a81\u8d77\u4e24\u90e8\u5206\u3002 \u7ec6\u80de\u4f53\u7531\u7ec6\u80de\u6838\u3001\u7ec6\u80de\u819c\u3001\u7ec6\u80de\u8d28\u7ec4\u6210\uff0c\u5177\u6709\u8054\u7edc\u548c\u6574\u5408\u8f93\u5165\u4fe1\u606f\u5e76\u4f20\u51fa\u4fe1\u606f\u7684\u4f5c\u7528\u3002 \u7a81\u8d77\u6709\u6811\u7a81\u548c\u8f74\u7a81\u4e24\u79cd\u3002 \u6811\u7a81\u77ed\u800c\u5206\u679d\u591a\uff0c\u76f4\u63a5\u7531\u7ec6\u80de\u4f53\u6269\u5f20\u7a81\u51fa\uff0c\u5f62\u6210\u6811\u679d\u72b6\uff0c\u5176\u4f5c\u7528\u662f\u63a5\u53d7\u5176\u4ed6\u795e\u7ecf\u5143\u8f74\u7a81\u4f20\u6765\u7684\u51b2\u52a8\u5e76\u4f20\u7ed9\u7ec6\u80de\u4f53\u3002 \u8f74\u7a81\u957f\u800c\u5206\u679d\u5c11\uff0c\u4e3a\u7c97\u7ec6\u5747\u5300\u7684\u7ec6\u957f\u7a81\u8d77\uff0c\u5e38\u8d77\u4e8e\u8f74\u4e18\uff0c\u5176\u4f5c\u7528\u662f\u63a5\u53d7\u5916\u6765\u523a\u6fc0\uff0c\u518d\u7531\u7ec6\u80de\u4f53\u4f20\u51fa\u3002 \u636e\u795e\u7ecf\u5143\u7684\u673a\u80fd\u5206\u7c7b: \u611f\u89c9\uff08\u4f20\u5165\uff09\u795e\u7ecf\u5143\uff1a \u63a5\u53d7\u6765\u81ea\u4f53\u5185\u5916\u7684\u523a\u6fc0\uff0c\u5c06\u795e\u7ecf\u51b2\u52a8\u4f20\u5230\u4e2d\u67a2\u795e\u7ecf\u3002\u795e\u7ecf\u5143\u7684\u672b\u68a2\uff0c\u6709\u7684\u5448\u6e38\u79bb\u72b6\uff0c\u6709\u7684\u5206\u5316\u51fa\u4e13\u95e8\u63a5\u53d7\u7279\u5b9a\u523a\u6fc0\u7684\u7ec6\u80de\u6216\u7ec4\u7ec7\u3002\u5206\u5e03\u4e8e\u5168\u8eab\u3002\u5728\u53cd\u5c04\u5f27\u4e2d\uff0c\u4e00\u822c\u4e0e\u4e2d\u95f4\u795e\u7ecf\u5143\u8fde\u63a5\u3002\u5728\u6700\u7b80\u5355\u7684\u53cd\u5c04\u5f27\u4e2d\uff0c\u5982\u7ef4\u6301\u9aa8\u9abc\u808c\u7d27\u5f20\u6027\u7684\u808c\u7275\u5f20\u53cd\u5c04\uff0c\u4e5f\u53ef\u76f4\u63a5\u5728\u4e2d\u67a2\u5185\u4e0e\u4f20\u51fa\u795e\u7ecf\u5143\u76f8\u7a81\u89e6\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u4f20\u5165\u795e\u7ecf\u5143\u7684\u795e\u7ecf\u7ea4\u7ef4\uff0c\u8fdb\u5165\u4e2d\u67a2\u795e\u7ecf\u7cfb\u7edf\u540e\u4e0e\u5176\u5b83\u795e\u7ecf\u5143\u53d1\u751f\u7a81\u89e6\u8054\u7cfb\u4ee5\u8f90\u6563\u4e3a\u4e3b\uff0c\u5373\u901a\u8fc7\u8f74\u7a81\u672b\u68a2\u7684\u5206\u652f\u4e0e\u8bb8\u591a\u795e\u7ecf\u5143\u5efa\u7acb\u7a81\u89e6\u8054\u7cfb\uff0c\u53ef\u5f15\u8d77\u8bb8\u591a\u795e\u7ecf\u5143\u540c\u65f6\u5174\u594b\u6216\u6291\u5236\uff0c\u4ee5\u6269\u5927\u5f71\u54cd\u8303\u56f4\u3002 \u8fd0\u52a8\uff08\u4f20\u51fa\uff09\u795e\u7ecf\u5143\uff1a \u795e\u7ecf\u51b2\u52a8\u7531\u80de\u4f53\u7ecf\u8f74\u7a81\u4f20\u81f3\u672b\u68a2\uff0c\u4f7f\u808c\u8089\u6536\u7f29\u6216\u817a\u4f53\u5206\u6ccc\u3002\u4f20\u51fa\u795e\u7ecf\u7ea4\u7ef4\u672b\u68a2\u5206\u5e03\u5230\u9aa8\u9abc\u808c\u7ec4\u6210\u8fd0\u52a8\u7ec8\u677f\uff1b\u5206\u5e03\u5230\u5185\u810f\u5e73\u6ed1\u808c\u548c\u817a\u4e0a\u76ae\u65f6\uff0c\u5305\u7ed5\u808c\u7ea4\u7ef4\u6216\u7a7f\u884c\u4e8e\u817a\u7ec6\u80de\u4e4b\u95f4\u3002\u5728\u53cd\u5c04\u5f27\u4e2d\uff0c\u4e00\u822c\u4e0e\u4e2d\u95f4\u795e\u7ecf\u5143\u8054\u7cfb\u7684\u65b9\u5f0f\u4e3a\u805a\u5408\u5f0f\uff0c\u5373\u8bb8\u591a\u4f20\u5165\u795e\u7ecf\u5143\u548c\u540c\u4e00\u4e2a\u795e\u7ecf\u5143\u6784\u6210\u7a81\u89e6\uff0c\u4f7f\u8bb8\u591a\u4e0d\u540c\u6765\u6e90\u7684\u51b2\u52a8\u540c\u65f6\u6216\u5148\u540e\u4f5c\u7528\u4e8e\u540c\u4e00\u4e2a\u795e\u7ecf\u5143\u3002\u5373\u4e3a\u4e2d\u67a2\u7684\u6574\u5408\u4f5c\u7528\uff0c\u4f7f\u53cd\u5e94\u66f4\u7cbe\u786e\u3001\u534f\u8c03\u3002 \u8054\u7edc\uff08\u4e2d\u95f4\uff09\u795e\u7ecf\u5143\uff1a \u63a5\u53d7\u5176\u4ed6\u795e\u7ecf\u5143\u4f20\u6765\u7684\u795e\u7ecf\u51b2\u52a8\uff0c\u7136\u540e\u518d\u5c06\u51b2\u52a8\u4f20\u9012\u5230\u53e6\u4e00\u795e\u7ecf\u5143\u3002\u4e2d\u95f4\u795e\u7ecf\u5143\u5206\u5e03\u5728\u8111\u548c\u810a\u9ad3\u7b49\u4e2d\u67a2\u795e\u7ecf\u5185\u3002\u5b83\u662f\u4e09\u7c7b\u795e\u7ecf\u5143\u4e2d\u6570\u91cf\u6700\u591a\u7684\u3002\u5176\u6392\u5217\u65b9\u5f0f\u5f88\u590d\u6742\uff0c\u6709\u8f90\u6563\u5f0f\u3001\u805a\u5408\u5f0f\u3001\u94fe\u9501\u72b6\u3001\u73af\u72b6\u7b49\u3002\u795e\u7ecf\u5143\u95f4\u4fe1\u606f\u4f20\u9012\u7684\u63a5\u89e6\u70b9\u662f\u7a81\u89e6\u3002\u590d\u6742\u7684\u53cd\u5c04\u6d3b\u52a8\u662f\u7531\u4f20\u5165\u795e\u7ecf\u5143\u3001\u4e2d\u95f4\u795e\u7ecf\u5143\u548c\u4f20\u51fa\u795e\u7ecf\u5143\u4e92\u76f8\u501f\u7a81\u89e6\u8fde\u63a5\u800c\u6210\u7684\u795e\u7ecf\u5143\u94fe\u3002\u5728\u53cd\u5c04\u4e2d\u6d89\u53ca\u7684\u4e2d\u95f4\u795e\u7ecf\u5143\u8d8a\u591a\uff0c\u5f15\u8d77\u7684\u53cd\u5c04\u6d3b\u52a8\u8d8a\u590d\u6742\u3002\u4eba\u7c7b\u5927\u8111\u76ae\u8d28\u7684\u601d\u7ef4\u6d3b\u52a8\u5c31\u662f\u901a\u8fc7\u5927\u91cf\u4e2d\u95f4\u795e\u7ecf\u5143\u7684\u6781\u5176\u590d\u6742\u7684\u53cd\u5c04\u6d3b\u52a8\u3002\u4e2d\u95f4\u795e\u7ecf\u5143\u7684\u590d\u6742\u8054\u7cfb\uff0c\u662f\u795e\u7ecf\u7cfb\u7edf\u9ad8\u5ea6\u590d\u6742\u5316\u7684\u7ed3\u6784\u57fa\u7840\u3002","title":"Neuron"},{"location":"AI/neuron/#neuron","text":"\u795e\u7ecf\u5143\uff08\u82f1\u8bed\uff1aneuron\uff09\uff0c\u53c8\u540d\u795e\u7ecf\u539f\u6216\u795e\u7ecf\u7ec6\u80de\uff08\u82f1\u8bed\uff1anerve cell\uff09\uff0c\u662f\u795e\u7ecf\u7cfb\u7edf\u6700\u57fa\u672c\u7684\u7ed3\u6784\u548c\u529f\u80fd\u5355\u4f4d\u3002 \u795e\u7ecf\u5143\u80fd\u611f\u77e5\u73af\u5883\u7684\u53d8\u5316\uff0c\u518d\u5c06\u4fe1\u606f\u4f20\u9012\u7ed9\u5176\u4ed6\u7684\u795e\u7ecf\u5143\uff0c\u5e76\u6307\u4ee4\u96c6\u4f53\u505a\u51fa\u53cd\u5e94\u3002 \u5206\u4e3a\u7ec6\u80de\u4f53\u548c\u7a81\u8d77\u4e24\u90e8\u5206\u3002 \u7ec6\u80de\u4f53\u7531\u7ec6\u80de\u6838\u3001\u7ec6\u80de\u819c\u3001\u7ec6\u80de\u8d28\u7ec4\u6210\uff0c\u5177\u6709\u8054\u7edc\u548c\u6574\u5408\u8f93\u5165\u4fe1\u606f\u5e76\u4f20\u51fa\u4fe1\u606f\u7684\u4f5c\u7528\u3002 \u7a81\u8d77\u6709\u6811\u7a81\u548c\u8f74\u7a81\u4e24\u79cd\u3002 \u6811\u7a81\u77ed\u800c\u5206\u679d\u591a\uff0c\u76f4\u63a5\u7531\u7ec6\u80de\u4f53\u6269\u5f20\u7a81\u51fa\uff0c\u5f62\u6210\u6811\u679d\u72b6\uff0c\u5176\u4f5c\u7528\u662f\u63a5\u53d7\u5176\u4ed6\u795e\u7ecf\u5143\u8f74\u7a81\u4f20\u6765\u7684\u51b2\u52a8\u5e76\u4f20\u7ed9\u7ec6\u80de\u4f53\u3002 \u8f74\u7a81\u957f\u800c\u5206\u679d\u5c11\uff0c\u4e3a\u7c97\u7ec6\u5747\u5300\u7684\u7ec6\u957f\u7a81\u8d77\uff0c\u5e38\u8d77\u4e8e\u8f74\u4e18\uff0c\u5176\u4f5c\u7528\u662f\u63a5\u53d7\u5916\u6765\u523a\u6fc0\uff0c\u518d\u7531\u7ec6\u80de\u4f53\u4f20\u51fa\u3002","title":"neuron \u795e\u7ecf\u5143"},{"location":"AI/neuron/#_1","text":"\u611f\u89c9\uff08\u4f20\u5165\uff09\u795e\u7ecf\u5143\uff1a \u63a5\u53d7\u6765\u81ea\u4f53\u5185\u5916\u7684\u523a\u6fc0\uff0c\u5c06\u795e\u7ecf\u51b2\u52a8\u4f20\u5230\u4e2d\u67a2\u795e\u7ecf\u3002\u795e\u7ecf\u5143\u7684\u672b\u68a2\uff0c\u6709\u7684\u5448\u6e38\u79bb\u72b6\uff0c\u6709\u7684\u5206\u5316\u51fa\u4e13\u95e8\u63a5\u53d7\u7279\u5b9a\u523a\u6fc0\u7684\u7ec6\u80de\u6216\u7ec4\u7ec7\u3002\u5206\u5e03\u4e8e\u5168\u8eab\u3002\u5728\u53cd\u5c04\u5f27\u4e2d\uff0c\u4e00\u822c\u4e0e\u4e2d\u95f4\u795e\u7ecf\u5143\u8fde\u63a5\u3002\u5728\u6700\u7b80\u5355\u7684\u53cd\u5c04\u5f27\u4e2d\uff0c\u5982\u7ef4\u6301\u9aa8\u9abc\u808c\u7d27\u5f20\u6027\u7684\u808c\u7275\u5f20\u53cd\u5c04\uff0c\u4e5f\u53ef\u76f4\u63a5\u5728\u4e2d\u67a2\u5185\u4e0e\u4f20\u51fa\u795e\u7ecf\u5143\u76f8\u7a81\u89e6\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u4f20\u5165\u795e\u7ecf\u5143\u7684\u795e\u7ecf\u7ea4\u7ef4\uff0c\u8fdb\u5165\u4e2d\u67a2\u795e\u7ecf\u7cfb\u7edf\u540e\u4e0e\u5176\u5b83\u795e\u7ecf\u5143\u53d1\u751f\u7a81\u89e6\u8054\u7cfb\u4ee5\u8f90\u6563\u4e3a\u4e3b\uff0c\u5373\u901a\u8fc7\u8f74\u7a81\u672b\u68a2\u7684\u5206\u652f\u4e0e\u8bb8\u591a\u795e\u7ecf\u5143\u5efa\u7acb\u7a81\u89e6\u8054\u7cfb\uff0c\u53ef\u5f15\u8d77\u8bb8\u591a\u795e\u7ecf\u5143\u540c\u65f6\u5174\u594b\u6216\u6291\u5236\uff0c\u4ee5\u6269\u5927\u5f71\u54cd\u8303\u56f4\u3002 \u8fd0\u52a8\uff08\u4f20\u51fa\uff09\u795e\u7ecf\u5143\uff1a \u795e\u7ecf\u51b2\u52a8\u7531\u80de\u4f53\u7ecf\u8f74\u7a81\u4f20\u81f3\u672b\u68a2\uff0c\u4f7f\u808c\u8089\u6536\u7f29\u6216\u817a\u4f53\u5206\u6ccc\u3002\u4f20\u51fa\u795e\u7ecf\u7ea4\u7ef4\u672b\u68a2\u5206\u5e03\u5230\u9aa8\u9abc\u808c\u7ec4\u6210\u8fd0\u52a8\u7ec8\u677f\uff1b\u5206\u5e03\u5230\u5185\u810f\u5e73\u6ed1\u808c\u548c\u817a\u4e0a\u76ae\u65f6\uff0c\u5305\u7ed5\u808c\u7ea4\u7ef4\u6216\u7a7f\u884c\u4e8e\u817a\u7ec6\u80de\u4e4b\u95f4\u3002\u5728\u53cd\u5c04\u5f27\u4e2d\uff0c\u4e00\u822c\u4e0e\u4e2d\u95f4\u795e\u7ecf\u5143\u8054\u7cfb\u7684\u65b9\u5f0f\u4e3a\u805a\u5408\u5f0f\uff0c\u5373\u8bb8\u591a\u4f20\u5165\u795e\u7ecf\u5143\u548c\u540c\u4e00\u4e2a\u795e\u7ecf\u5143\u6784\u6210\u7a81\u89e6\uff0c\u4f7f\u8bb8\u591a\u4e0d\u540c\u6765\u6e90\u7684\u51b2\u52a8\u540c\u65f6\u6216\u5148\u540e\u4f5c\u7528\u4e8e\u540c\u4e00\u4e2a\u795e\u7ecf\u5143\u3002\u5373\u4e3a\u4e2d\u67a2\u7684\u6574\u5408\u4f5c\u7528\uff0c\u4f7f\u53cd\u5e94\u66f4\u7cbe\u786e\u3001\u534f\u8c03\u3002 \u8054\u7edc\uff08\u4e2d\u95f4\uff09\u795e\u7ecf\u5143\uff1a \u63a5\u53d7\u5176\u4ed6\u795e\u7ecf\u5143\u4f20\u6765\u7684\u795e\u7ecf\u51b2\u52a8\uff0c\u7136\u540e\u518d\u5c06\u51b2\u52a8\u4f20\u9012\u5230\u53e6\u4e00\u795e\u7ecf\u5143\u3002\u4e2d\u95f4\u795e\u7ecf\u5143\u5206\u5e03\u5728\u8111\u548c\u810a\u9ad3\u7b49\u4e2d\u67a2\u795e\u7ecf\u5185\u3002\u5b83\u662f\u4e09\u7c7b\u795e\u7ecf\u5143\u4e2d\u6570\u91cf\u6700\u591a\u7684\u3002\u5176\u6392\u5217\u65b9\u5f0f\u5f88\u590d\u6742\uff0c\u6709\u8f90\u6563\u5f0f\u3001\u805a\u5408\u5f0f\u3001\u94fe\u9501\u72b6\u3001\u73af\u72b6\u7b49\u3002\u795e\u7ecf\u5143\u95f4\u4fe1\u606f\u4f20\u9012\u7684\u63a5\u89e6\u70b9\u662f\u7a81\u89e6\u3002\u590d\u6742\u7684\u53cd\u5c04\u6d3b\u52a8\u662f\u7531\u4f20\u5165\u795e\u7ecf\u5143\u3001\u4e2d\u95f4\u795e\u7ecf\u5143\u548c\u4f20\u51fa\u795e\u7ecf\u5143\u4e92\u76f8\u501f\u7a81\u89e6\u8fde\u63a5\u800c\u6210\u7684\u795e\u7ecf\u5143\u94fe\u3002\u5728\u53cd\u5c04\u4e2d\u6d89\u53ca\u7684\u4e2d\u95f4\u795e\u7ecf\u5143\u8d8a\u591a\uff0c\u5f15\u8d77\u7684\u53cd\u5c04\u6d3b\u52a8\u8d8a\u590d\u6742\u3002\u4eba\u7c7b\u5927\u8111\u76ae\u8d28\u7684\u601d\u7ef4\u6d3b\u52a8\u5c31\u662f\u901a\u8fc7\u5927\u91cf\u4e2d\u95f4\u795e\u7ecf\u5143\u7684\u6781\u5176\u590d\u6742\u7684\u53cd\u5c04\u6d3b\u52a8\u3002\u4e2d\u95f4\u795e\u7ecf\u5143\u7684\u590d\u6742\u8054\u7cfb\uff0c\u662f\u795e\u7ecf\u7cfb\u7edf\u9ad8\u5ea6\u590d\u6742\u5316\u7684\u7ed3\u6784\u57fa\u7840\u3002","title":"\u636e\u795e\u7ecf\u5143\u7684\u673a\u80fd\u5206\u7c7b:"},{"location":"Daily/2017/0831/","text":"Daily_20170831 Linux \u8fdb\u884c\u67d0\u7528\u6237\u7684\u5bb6\u76ee\u5f55\uff1acd ~username umask \u200b \u521b\u5efa\u76ee\u5f55\u6216\u6587\u4ef6\u65f6\uff0c\u5047\u8bbe\u6839\u636e\u9884\u8bbe\u6743\u9650x\uff1a\u76ee\u5f55777 \u6216 \u6587\u4ef6666 \u200b umask \u4e3a y \u200b x AND !y ls \u200b -t \u6309\u4fee\u6539\u65f6\u95f4\u6392\u5e8f \u200b --time {atime,ctime} \u663e\u793a\u4e0a\u6b21\u8bbf\u95ee\u65f6\u95f4\u6216\u521b\u5efa\u65f6\u95f4 find \u200b find PATH [OPTION] \u200b OPTION: -name , -uid , -gid , -user , -group , nouser , nogroup , -atime , -ctime , -mtime \u200b -exec {} \\; \u7ffb\u8bd1 OpenStack clouds run on platforms that differ greatly in the capabilities that they provide. By default, the Compute service seeks to abstract the underlying hardware that it runs on, rather than exposing specifics about the underlying host platforms. This abstraction manifests itself in many ways. For example, rather than exposing the types and topologies of CPUs running on hosts, the service exposes a number of generic CPUs (virtual CPUs, or vCPUs) and allows for overcommitting of these. In a similar manner, rather than exposing the individual types of network devices available on hosts, generic software-powered network ports are provided. These features are designed to allow high resource utilization and allows the service to provide a generic cost-effective and highly scalable cloud upon which to build applications. This abstraction is beneficial for most workloads. However, there are some workloads where determinism and per-instance performance are important, if not vital. In these cases, instances can be expected to deliver near-native performance. The Compute service provides features to improve individual instance for these kind of workloads. Openstack\u4e91\u8fd0\u884c\u5728\u5c5e\u6027\u5dee\u5f02\u5f88\u5927\u7684\u5e73\u53f0\u4e0a\u3002\u901a\u5e38\uff0c\u8ba1\u7b97\u670d\u52a1\u62bd\u50cf\u51fa\u5e95\u5c42\u7684\u786c\u4ef6\uff0c\u800c\u4e0d\u4f1a\u66b4\u9732\u5e95\u5c42\u4e3b\u673a\u5e73\u53f0\u7684\u7ec6\u8282\u3002\u8fd9\u4e2a\u62bd\u50cf\u5728\u5f88\u591a\u65b9\u9762\u90fd\u6709\u4f53\u73b0\u3002\u4f8b\u5982\uff0c\u4e0d\u4f1a\u66b4\u9732\u51fa\u8fd0\u884c\u5728\u4e3b\u673a\u4e0a\u7684CPU\u7684\u7c7b\u578b\u6216\u62d3\u6251\uff0c\u670d\u52a1\u66b4\u9732\u51fa\u901a\u7528CPU\u7684\u6570\u91cf\uff08\u865a\u62dfCPU\u6216vCPU\uff09\u548c\u5141\u8bb8\u8d85\u5206\u914d\u3002\u7c7b\u4f3c\u7684\u65b9\u5f0f\uff0c\u4e0d\u4f1a\u66b4\u9732\u4e3b\u673a\u4e0a\u53ef\u4ee5\u7684\u4e2a\u522b\u7c7b\u578b\uff0c\u901a\u7528\u8f6f\u4ef6\u63d0\u4f9b\u7f51\u7edc\u7aef\u53e3\u3002\u8fd9\u4e9b\u529f\u80fd\u88ab\u8bbe\u8ba1\u6210\u80fd\u591f\u5141\u8bb8\u9ad8\u8d44\u6e90\u5229\u7528\u7387\u548c\u5141\u8bb8\u670d\u52a1\u4e91\u63d0\u4f9b\u901a\u7528\u9ad8\u6210\u672c\u5229\u7528\u7387\u53ca\u9ad8\u6269\u5c55\u4e91\u7528\u4e8e\u521b\u5efa\u5e94\u7528\u3002 \u8fd9\u79cd\u62bd\u8c61\u5bf9\u4e8e\u83b7\u5f97\u66f4\u5927\u7684\u5de5\u4f5c\u91cf\u662f\u6709\u76ca\u7684\u3002\u7136\u800c\uff0c\u6709\u4e00\u4e9b\u786e\u5b9a\u6027\u7684\u5de5\u4f5c\u91cf\u548c\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u6027\u80fd\u662f\u5f88\u91cd\u8981 \uff0c\u5982\u679c\u5b83\u4e0d\u662f\u81f3\u5173\u91cd\u8981\u7684\u8bdd\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5b9e\u4f8b\u88ab\u8981\u6c42\u5b9e\u73b0\u63a5\u8fd1\u7269\u7406\u7684\u6027\u80fd\u3002\u8ba1\u7b97\u670d\u52a1\u63d0\u4f9b\u529f\u80fd\u7528\u4e8e\u63d0\u5347\u4e2a\u522b\u4e3a\u4e86\u66f4\u9ad8\u7684\u5de5\u4f5c\u91cf\u7684\u865a\u62df\u673a\u3002 greatly .adv \u5f88\uff0c\u5927\u5927\u5730\uff1b\u975e\u5e38 capability n. \u80fd\u529b\uff1b\u529f\u80fd\uff1b\u6027\u80fd seek vt. vi. \u5bfb\u6c42\uff1b\u5bfb\u627e abstract n. \u62bd\u8c61 specific n. \u7279\u6027\uff1b\u7ec6\u8282 abstraction n. \u62bd\u8c61 manifest vt. \u8bc1\u660e generic adj. \u4e00\u822c\u7684 similar adj \u7c7b\u4f3c\u7684 manner n. \u65b9\u5f0f individual adj. \u4e2a\u522b\u7684 utilization n. \u5229\u7528\u7387 upon prep. \u6839\u636e beneficial adj. \u6709\u76ca\u7684 workload n. \u5de5\u4f5c\u91cf determinism n. \u786e\u5b9a\u6027 vital adj. \u81f3\u5173\u91cd\u8981\u7684 expect vt. vi. \u671f\u5f85 deliver vi. \u5b9e\u73b0 improve vt. \u6539\u5584\uff0c\u63d0\u5347","title":"0831"},{"location":"Daily/2017/0831/#daily_20170831","text":"","title":"Daily_20170831"},{"location":"Daily/2017/0831/#linux","text":"","title":"Linux"},{"location":"Daily/2017/0831/#cd-username","text":"","title":"\u8fdb\u884c\u67d0\u7528\u6237\u7684\u5bb6\u76ee\u5f55\uff1acd ~username"},{"location":"Daily/2017/0831/#umask","text":"\u200b \u521b\u5efa\u76ee\u5f55\u6216\u6587\u4ef6\u65f6\uff0c\u5047\u8bbe\u6839\u636e\u9884\u8bbe\u6743\u9650x\uff1a\u76ee\u5f55777 \u6216 \u6587\u4ef6666 \u200b umask \u4e3a y \u200b x AND !y","title":"umask"},{"location":"Daily/2017/0831/#ls","text":"\u200b -t \u6309\u4fee\u6539\u65f6\u95f4\u6392\u5e8f \u200b --time {atime,ctime} \u663e\u793a\u4e0a\u6b21\u8bbf\u95ee\u65f6\u95f4\u6216\u521b\u5efa\u65f6\u95f4","title":"ls"},{"location":"Daily/2017/0831/#find","text":"\u200b find PATH [OPTION] \u200b OPTION: -name , -uid , -gid , -user , -group , nouser , nogroup , -atime , -ctime , -mtime \u200b -exec {} \\;","title":"find"},{"location":"Daily/2017/0831/#_1","text":"OpenStack clouds run on platforms that differ greatly in the capabilities that they provide. By default, the Compute service seeks to abstract the underlying hardware that it runs on, rather than exposing specifics about the underlying host platforms. This abstraction manifests itself in many ways. For example, rather than exposing the types and topologies of CPUs running on hosts, the service exposes a number of generic CPUs (virtual CPUs, or vCPUs) and allows for overcommitting of these. In a similar manner, rather than exposing the individual types of network devices available on hosts, generic software-powered network ports are provided. These features are designed to allow high resource utilization and allows the service to provide a generic cost-effective and highly scalable cloud upon which to build applications. This abstraction is beneficial for most workloads. However, there are some workloads where determinism and per-instance performance are important, if not vital. In these cases, instances can be expected to deliver near-native performance. The Compute service provides features to improve individual instance for these kind of workloads. Openstack\u4e91\u8fd0\u884c\u5728\u5c5e\u6027\u5dee\u5f02\u5f88\u5927\u7684\u5e73\u53f0\u4e0a\u3002\u901a\u5e38\uff0c\u8ba1\u7b97\u670d\u52a1\u62bd\u50cf\u51fa\u5e95\u5c42\u7684\u786c\u4ef6\uff0c\u800c\u4e0d\u4f1a\u66b4\u9732\u5e95\u5c42\u4e3b\u673a\u5e73\u53f0\u7684\u7ec6\u8282\u3002\u8fd9\u4e2a\u62bd\u50cf\u5728\u5f88\u591a\u65b9\u9762\u90fd\u6709\u4f53\u73b0\u3002\u4f8b\u5982\uff0c\u4e0d\u4f1a\u66b4\u9732\u51fa\u8fd0\u884c\u5728\u4e3b\u673a\u4e0a\u7684CPU\u7684\u7c7b\u578b\u6216\u62d3\u6251\uff0c\u670d\u52a1\u66b4\u9732\u51fa\u901a\u7528CPU\u7684\u6570\u91cf\uff08\u865a\u62dfCPU\u6216vCPU\uff09\u548c\u5141\u8bb8\u8d85\u5206\u914d\u3002\u7c7b\u4f3c\u7684\u65b9\u5f0f\uff0c\u4e0d\u4f1a\u66b4\u9732\u4e3b\u673a\u4e0a\u53ef\u4ee5\u7684\u4e2a\u522b\u7c7b\u578b\uff0c\u901a\u7528\u8f6f\u4ef6\u63d0\u4f9b\u7f51\u7edc\u7aef\u53e3\u3002\u8fd9\u4e9b\u529f\u80fd\u88ab\u8bbe\u8ba1\u6210\u80fd\u591f\u5141\u8bb8\u9ad8\u8d44\u6e90\u5229\u7528\u7387\u548c\u5141\u8bb8\u670d\u52a1\u4e91\u63d0\u4f9b\u901a\u7528\u9ad8\u6210\u672c\u5229\u7528\u7387\u53ca\u9ad8\u6269\u5c55\u4e91\u7528\u4e8e\u521b\u5efa\u5e94\u7528\u3002 \u8fd9\u79cd\u62bd\u8c61\u5bf9\u4e8e\u83b7\u5f97\u66f4\u5927\u7684\u5de5\u4f5c\u91cf\u662f\u6709\u76ca\u7684\u3002\u7136\u800c\uff0c\u6709\u4e00\u4e9b\u786e\u5b9a\u6027\u7684\u5de5\u4f5c\u91cf\u548c\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u6027\u80fd\u662f\u5f88\u91cd\u8981 \uff0c\u5982\u679c\u5b83\u4e0d\u662f\u81f3\u5173\u91cd\u8981\u7684\u8bdd\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5b9e\u4f8b\u88ab\u8981\u6c42\u5b9e\u73b0\u63a5\u8fd1\u7269\u7406\u7684\u6027\u80fd\u3002\u8ba1\u7b97\u670d\u52a1\u63d0\u4f9b\u529f\u80fd\u7528\u4e8e\u63d0\u5347\u4e2a\u522b\u4e3a\u4e86\u66f4\u9ad8\u7684\u5de5\u4f5c\u91cf\u7684\u865a\u62df\u673a\u3002 greatly .adv \u5f88\uff0c\u5927\u5927\u5730\uff1b\u975e\u5e38 capability n. \u80fd\u529b\uff1b\u529f\u80fd\uff1b\u6027\u80fd seek vt. vi. \u5bfb\u6c42\uff1b\u5bfb\u627e abstract n. \u62bd\u8c61 specific n. \u7279\u6027\uff1b\u7ec6\u8282 abstraction n. \u62bd\u8c61 manifest vt. \u8bc1\u660e generic adj. \u4e00\u822c\u7684 similar adj \u7c7b\u4f3c\u7684 manner n. \u65b9\u5f0f individual adj. \u4e2a\u522b\u7684 utilization n. \u5229\u7528\u7387 upon prep. \u6839\u636e beneficial adj. \u6709\u76ca\u7684 workload n. \u5de5\u4f5c\u91cf determinism n. \u786e\u5b9a\u6027 vital adj. \u81f3\u5173\u91cd\u8981\u7684 expect vt. vi. \u671f\u5f85 deliver vi. \u5b9e\u73b0 improve vt. \u6539\u5584\uff0c\u63d0\u5347","title":"\u7ffb\u8bd1"},{"location":"Daily/2017/0904/","text":"Overview The OpenStack project is an open source cloud computing platform that supports all types of cloud environments. The project aims for simple implementation, massive scalability, and a rich set of features. Cloud computing experts from around the world contribute to the project. OpenStack provides an Infrastructure-as-a-Service (IaaS) solution through a variety of complementary services. Each service offers an Application Programming Interface (API) that facilitates this integration. This guide covers step-by-step deployment of the major OpenStack services using a functional example architecture suitable for new users of OpenStack with sufficient Linux experience. This guide is not intended to be used for production system installations, but to create a minimum proof-of-concept for the purpose of learning about OpenStack. After becoming familiar with basic installation, configuration, operation, and troubleshooting of these OpenStack services, you should consider the following steps toward deployment using a production architecture: Determine and implement the necessary core and optional services to meet performance and redundancy requirements. Increase security using methods such as firewalls, encryption, and service policies. Implement a deployment tool such as Ansible, Chef, Puppet, or Salt to automate deployment and management of the production environment. \u6982\u89c8 Openstack\u9879\u76ee\u662f\u4e00\u4e2a\u652f\u6301\u6240\u6709\u4e91\u73af\u5883\u7c7b\u578b\u7684\u5f00\u6e90\u7684\u4e91\u8ba1\u7b97\u5e73\u53f0\u3002\u8fd9\u4e2a\u9879\u76ee\u7684\u76ee\u6807\u662f\u7b80\u5355\u5b9e\u73b0\u3001\u5de8\u5927\u7684\u53ef\u6269\u5c55\u6027\u548c\u4e30\u5bcc\u7684\u529f\u80fd\u8bbe\u7f6e\u3002\u6765\u81ea\u5168\u4e16\u754c\u7684\u4e91\u8ba1\u7b97\u4e13\u5bb6\u4e3a\u8fd9\u4e2a\u9879\u76ee\u4f5c\u51fa\u8d21\u732e\u3002 Openstack\u901a\u8fc7\u4e00\u4e2a\u591a\u79cd\u8865\u5145\u670d\u52a1\u63d0\u4f9b\u57fa\u7840\u8bbe\u65bd\u5373\u670d\u52a1\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6bcf\u4e2a\u670d\u52a1\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4fc3\u8fdb\u96c6\u6210\u7684\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3\u3002 \u8fd9\u4e2a\u6307\u5357\u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u529f\u80fd\u5b9e\u4f8b\u67b6\u6784\u4e00\u6b65\u6b65\u90e8\u7f72\u4e3b\u8981\u7684Openstack\u670d\u52a1\u9002\u5408\u4e8e\u5177\u5907\u8db3\u591fLinux\u7ecf\u9a8c\u7684Openstack\u7684\u65b0\u7528\u6237\u3002\u8fd9\u4e2a\u6307\u5357\u4e0d\u662f\u610f\u5728\u7528\u4e8e\u751f\u4ea7\u7cfb\u7edf\u7684\u5b89\u88c5\uff0c\u800c\u662f\u4e3a\u4e86\u7ed9\u6253\u7b97\u5b66\u4e60\u5173\u4e8eOpenstack\u7684\u4eba\u521b\u5efa\u6700\u5c0f\u7684\u6982\u5ff5\u6027\u8bc1\u660e\u3002 \u5355\u8bcd implementation[n.] \u5b9e\u73b0 massive[adj.] \u5927\u91cf\u7684 variety[n.] \u591a\u6837 complementary[adj.] \u8865\u5145\u7684 offer[v] \u63d0\u4f9b facilitate[v] \u4fc3\u8fdb integration[n.] \u96c6\u6210 guide[n.] \u6307\u5357\uff0c\u5411\u5bfc cover[v]\u5305\u542b suitable[adj.] \u9002\u5f53\u7684 sufficient[adj.] \u8db3\u591f\u7684 experience[n.] \u7ecf\u9a8c intended[adj.] \u6709\u610f\u7684 proof of concept \u6982\u5ff5\u6027\u8bc1\u660e purpose[vt.] \u51b3\u5fc3\uff0c\u4f01\u56fe\uff0c\u6253\u7b97 become[vt.]\u6210\u4e3a familiar[adj.]\u719f\u6089\u7684\uff0c\u5e38\u89c1\u7684","title":"0904"},{"location":"Daily/2017/0904/#overview","text":"The OpenStack project is an open source cloud computing platform that supports all types of cloud environments. The project aims for simple implementation, massive scalability, and a rich set of features. Cloud computing experts from around the world contribute to the project. OpenStack provides an Infrastructure-as-a-Service (IaaS) solution through a variety of complementary services. Each service offers an Application Programming Interface (API) that facilitates this integration. This guide covers step-by-step deployment of the major OpenStack services using a functional example architecture suitable for new users of OpenStack with sufficient Linux experience. This guide is not intended to be used for production system installations, but to create a minimum proof-of-concept for the purpose of learning about OpenStack. After becoming familiar with basic installation, configuration, operation, and troubleshooting of these OpenStack services, you should consider the following steps toward deployment using a production architecture: Determine and implement the necessary core and optional services to meet performance and redundancy requirements. Increase security using methods such as firewalls, encryption, and service policies. Implement a deployment tool such as Ansible, Chef, Puppet, or Salt to automate deployment and management of the production environment.","title":"Overview"},{"location":"Daily/2017/0904/#_1","text":"Openstack\u9879\u76ee\u662f\u4e00\u4e2a\u652f\u6301\u6240\u6709\u4e91\u73af\u5883\u7c7b\u578b\u7684\u5f00\u6e90\u7684\u4e91\u8ba1\u7b97\u5e73\u53f0\u3002\u8fd9\u4e2a\u9879\u76ee\u7684\u76ee\u6807\u662f\u7b80\u5355\u5b9e\u73b0\u3001\u5de8\u5927\u7684\u53ef\u6269\u5c55\u6027\u548c\u4e30\u5bcc\u7684\u529f\u80fd\u8bbe\u7f6e\u3002\u6765\u81ea\u5168\u4e16\u754c\u7684\u4e91\u8ba1\u7b97\u4e13\u5bb6\u4e3a\u8fd9\u4e2a\u9879\u76ee\u4f5c\u51fa\u8d21\u732e\u3002 Openstack\u901a\u8fc7\u4e00\u4e2a\u591a\u79cd\u8865\u5145\u670d\u52a1\u63d0\u4f9b\u57fa\u7840\u8bbe\u65bd\u5373\u670d\u52a1\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6bcf\u4e2a\u670d\u52a1\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4fc3\u8fdb\u96c6\u6210\u7684\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3\u3002 \u8fd9\u4e2a\u6307\u5357\u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u529f\u80fd\u5b9e\u4f8b\u67b6\u6784\u4e00\u6b65\u6b65\u90e8\u7f72\u4e3b\u8981\u7684Openstack\u670d\u52a1\u9002\u5408\u4e8e\u5177\u5907\u8db3\u591fLinux\u7ecf\u9a8c\u7684Openstack\u7684\u65b0\u7528\u6237\u3002\u8fd9\u4e2a\u6307\u5357\u4e0d\u662f\u610f\u5728\u7528\u4e8e\u751f\u4ea7\u7cfb\u7edf\u7684\u5b89\u88c5\uff0c\u800c\u662f\u4e3a\u4e86\u7ed9\u6253\u7b97\u5b66\u4e60\u5173\u4e8eOpenstack\u7684\u4eba\u521b\u5efa\u6700\u5c0f\u7684\u6982\u5ff5\u6027\u8bc1\u660e\u3002","title":"\u6982\u89c8"},{"location":"Daily/2017/0904/#_2","text":"implementation[n.] \u5b9e\u73b0 massive[adj.] \u5927\u91cf\u7684 variety[n.] \u591a\u6837 complementary[adj.] \u8865\u5145\u7684 offer[v] \u63d0\u4f9b facilitate[v] \u4fc3\u8fdb integration[n.] \u96c6\u6210 guide[n.] \u6307\u5357\uff0c\u5411\u5bfc cover[v]\u5305\u542b suitable[adj.] \u9002\u5f53\u7684 sufficient[adj.] \u8db3\u591f\u7684 experience[n.] \u7ecf\u9a8c intended[adj.] \u6709\u610f\u7684 proof of concept \u6982\u5ff5\u6027\u8bc1\u660e purpose[vt.] \u51b3\u5fc3\uff0c\u4f01\u56fe\uff0c\u6253\u7b97 become[vt.]\u6210\u4e3a familiar[adj.]\u719f\u6089\u7684\uff0c\u5e38\u89c1\u7684","title":"\u5355\u8bcd"},{"location":"Daily/2017/0905/","text":"Keystone OpenStack Identity, code-named keystone, is the default Identity management system for OpenStack. After you install Identity, you configure it through the /etc/keystone/keystone.conf configuration file and, possibly, a separate logging configuration file. You initialize data into Identity by using the keystone command-line client. Openstack Identity\uff0c\u4ee3\u7801\u540d\u4e3aKeystone\uff0c\u662fOpenstack\u7684\u4e00\u4e2a\u9ed8\u8ba4\u7684\u8eab\u4efd\u7ba1\u7406\u7cfb\u7edf\u3002\u5f53\u4f60\u5b89\u88c5Indentity\u540e\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 /etc/keystone/keystone.conf \u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u5b83\uff0c\u4e5f\u53ef\u80fd\uff0c\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u65e5\u5fd7\u914d\u7f6e\u6587\u4ef6\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 keystone \u547d\u4ee4\u884c\u5ba2\u6237\u7aef\u5bf9Identity\u8fdb\u884c\u6570\u636e\u521d\u59cb\u5316\u3002 Identity concepts Authentication The process of confirming the identity of a user. To confirm an incoming request, OpenStack Identity validates a set of credentials users supply. Initially, these credentials are a user name and password, or a user name and API key. When OpenStack Identity validates user credentials, it issues an authentication token. Users provide the token in subsequent requests. \u8ba4\u8bc1 \u8fd9\u662f\u4e00\u4e2a\u786e\u8ba4\u7528\u6237\u8eab\u4efd\u7684\u8fc7\u7a0b\u3002\u7528\u4e8e\u786e\u8ba4\u4e00\u4e2a\u8fdb\u6765\u7684\u8bf7\u6c42\uff0cOpenstack identity\u4f1a\u9a8c\u8bc1\u7528\u6237\u63d0\u4f9b\u7684\u4e00\u7ec4\u51ed\u8bc1\u3002\u6700\u521d\uff0c\u8fd9\u4e9b\u51ed\u8bc1\u662f\u4e00\u4e2a\u7528\u6237\u548c\u5bc6\u7801\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u7528\u6237\u540d\u548cAPI key\u3002\u5f53Openstack Identity \u786e\u5b9a\u7528\u6237\u51ed\u8bc1\u540e\uff0c\u5b83\u4f1a\u53d1\u5e03\u4e00\u4e2a\u8ba4\u8bc1\u4ee4\u724c\u3002\u7528\u6237\u63d0\u4f9b\u8fd9\u4e2a\u4ee4\u724c\u5728\u540e\u7eed\u7684\u8bf7\u6c42\u91cc\u9762\u3002 Credentials Data that confirms the identity of the user. For example, user name and password, user name and API key, or an authentication token that the Identity service provides. \u51ed\u8bc1 \u786e\u8ba4\u7528\u6237\u8eab\u4efd\u7684\u6570\u636e\u3002\u4f8b\u5982\uff0c\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u7528\u6237\u540d\u548cAPI key\uff0c\u6216\u8005\u4e00\u4e2a\u7531Identity\u670d\u52a1\u63d0\u4f9b\u7684\u8ba4\u8bc1\u4ee4\u724c\u3002 Domain An Identity service API v3 entity. Domains are a collection of projects and users that define administrative boundaries for managing Identity entities. Domains can represent an individual, company, or operator-owned space. They expose administrative activities directly to system users. Users can be granted the administrator role for a domain. A domain administrator can create projects, users, and groups in a domain and assign roles to users and groups in a domain. \u57df \u4e00\u4e2a\u8ba4\u8bc1\u670d\u52a1 API v3\u7684\u5b9e\u4f53\u3002","title":"0905"},{"location":"Daily/2017/0905/#keystone","text":"OpenStack Identity, code-named keystone, is the default Identity management system for OpenStack. After you install Identity, you configure it through the /etc/keystone/keystone.conf configuration file and, possibly, a separate logging configuration file. You initialize data into Identity by using the keystone command-line client. Openstack Identity\uff0c\u4ee3\u7801\u540d\u4e3aKeystone\uff0c\u662fOpenstack\u7684\u4e00\u4e2a\u9ed8\u8ba4\u7684\u8eab\u4efd\u7ba1\u7406\u7cfb\u7edf\u3002\u5f53\u4f60\u5b89\u88c5Indentity\u540e\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 /etc/keystone/keystone.conf \u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u5b83\uff0c\u4e5f\u53ef\u80fd\uff0c\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u65e5\u5fd7\u914d\u7f6e\u6587\u4ef6\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 keystone \u547d\u4ee4\u884c\u5ba2\u6237\u7aef\u5bf9Identity\u8fdb\u884c\u6570\u636e\u521d\u59cb\u5316\u3002","title":"Keystone"},{"location":"Daily/2017/0905/#identity-concepts","text":"","title":"Identity concepts"},{"location":"Daily/2017/0905/#authentication","text":"The process of confirming the identity of a user. To confirm an incoming request, OpenStack Identity validates a set of credentials users supply. Initially, these credentials are a user name and password, or a user name and API key. When OpenStack Identity validates user credentials, it issues an authentication token. Users provide the token in subsequent requests.","title":"Authentication"},{"location":"Daily/2017/0905/#_1","text":"\u8fd9\u662f\u4e00\u4e2a\u786e\u8ba4\u7528\u6237\u8eab\u4efd\u7684\u8fc7\u7a0b\u3002\u7528\u4e8e\u786e\u8ba4\u4e00\u4e2a\u8fdb\u6765\u7684\u8bf7\u6c42\uff0cOpenstack identity\u4f1a\u9a8c\u8bc1\u7528\u6237\u63d0\u4f9b\u7684\u4e00\u7ec4\u51ed\u8bc1\u3002\u6700\u521d\uff0c\u8fd9\u4e9b\u51ed\u8bc1\u662f\u4e00\u4e2a\u7528\u6237\u548c\u5bc6\u7801\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u7528\u6237\u540d\u548cAPI key\u3002\u5f53Openstack Identity \u786e\u5b9a\u7528\u6237\u51ed\u8bc1\u540e\uff0c\u5b83\u4f1a\u53d1\u5e03\u4e00\u4e2a\u8ba4\u8bc1\u4ee4\u724c\u3002\u7528\u6237\u63d0\u4f9b\u8fd9\u4e2a\u4ee4\u724c\u5728\u540e\u7eed\u7684\u8bf7\u6c42\u91cc\u9762\u3002","title":"\u8ba4\u8bc1"},{"location":"Daily/2017/0905/#credentials","text":"Data that confirms the identity of the user. For example, user name and password, user name and API key, or an authentication token that the Identity service provides.","title":"Credentials"},{"location":"Daily/2017/0905/#_2","text":"\u786e\u8ba4\u7528\u6237\u8eab\u4efd\u7684\u6570\u636e\u3002\u4f8b\u5982\uff0c\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u7528\u6237\u540d\u548cAPI key\uff0c\u6216\u8005\u4e00\u4e2a\u7531Identity\u670d\u52a1\u63d0\u4f9b\u7684\u8ba4\u8bc1\u4ee4\u724c\u3002","title":"\u51ed\u8bc1"},{"location":"Daily/2017/0905/#domain","text":"An Identity service API v3 entity. Domains are a collection of projects and users that define administrative boundaries for managing Identity entities. Domains can represent an individual, company, or operator-owned space. They expose administrative activities directly to system users. Users can be granted the administrator role for a domain. A domain administrator can create projects, users, and groups in a domain and assign roles to users and groups in a domain.","title":"Domain"},{"location":"Daily/2017/0905/#_3","text":"\u4e00\u4e2a\u8ba4\u8bc1\u670d\u52a1 API v3\u7684\u5b9e\u4f53\u3002","title":"\u57df"},{"location":"Daily/2018/KVM\u5d4c\u5957\u865a\u62df\u5316/","text":"KVM\u5d4c\u5957\u865a\u62df\u5316 1. \u5bbf\u4e3b\u673a\u542f\u7528KVM\uff0c\u9700\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a \u5bbf\u4e3b\u673aCPU\u542f\u7528\u786c\u4ef6\u8f85\u52a9\u865a\u62df\u5316 shell [convex@convexlens ~]$ lscpu | grep Virtualization Virtualization: VT-x \u5185\u6838\u88c5\u8f7dKVM\u6a21\u5757( kvm kvm_intel kvm_amd ) shell [convex@convexlens ~]$ lsmod | grep kvm kvmgt 28672 0 mdev 20480 2 kvmgt,vfio_mdev kvm_intel 245760 0 vfio 32768 3 kvmgt,vfio_mdev,vfio_iommu_type1 kvm 737280 2 kvmgt,kvm_intel irqbypass 16384 1 kvm 2. \u5b9e\u73b0\u534a\u865a\u62df\u5316\uff0c\u9700\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a kvm\u4f7f\u7528\u4f4d\u4e8ehypervisor\u4e0eguest \u4e4b\u95f4\u7684Virtio API\u4e00\u5c42\u7ed9\u865a\u62df\u673a\u63d0\u4f9b\u534a\u865a\u62df\u5316\u8bbe\u5907\u3002\u6240\u6709\u7684virtio\u8bbe\u5907\u90fd\u5305\u542b\u4e24\u90e8\u5206\uff1ahost device\u3001guest driver host device: network device (virtio-net) block device (virtio-blk) controller device (virtio-scsi) serial device (virtio-serial) balloon device (virtio-balloon) 3. \u9700\u8981\u542f\u7528\u5d4c\u5957\u865a\u62df\u5316\uff0c\u9700\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a kvm_intel \u542f\u7528 nested \u529f\u80fd [convex@convexlens ~]$ sudo modprobe -r kvm_intel [convex@convexlens ~]$ sudo modprobe kvm_intel nested=1 #\u4e34\u65f6\u542f\u7528nested\u529f\u80fd [convex@convexlens ~]$ sudo vim /etc/modprobe.d/kvm_intel.conf options kvm_intel nested=1 #\u6c38\u4e45\u542f\u7528nested\u529f\u80fd [convex@convexlens ~]$ systool -m kvm_intel -v | grep nested nested = \"Y\" \u865a\u62df\u673a cpu mode \u4e3a host-passthrough","title":"KVM\u5d4c\u5957\u865a\u62df\u5316"},{"location":"Daily/2018/KVM\u5d4c\u5957\u865a\u62df\u5316/#kvm","text":"","title":"KVM\u5d4c\u5957\u865a\u62df\u5316"},{"location":"Daily/2018/KVM\u5d4c\u5957\u865a\u62df\u5316/#1-kvm","text":"\u5bbf\u4e3b\u673aCPU\u542f\u7528\u786c\u4ef6\u8f85\u52a9\u865a\u62df\u5316 shell [convex@convexlens ~]$ lscpu | grep Virtualization Virtualization: VT-x \u5185\u6838\u88c5\u8f7dKVM\u6a21\u5757( kvm kvm_intel kvm_amd ) shell [convex@convexlens ~]$ lsmod | grep kvm kvmgt 28672 0 mdev 20480 2 kvmgt,vfio_mdev kvm_intel 245760 0 vfio 32768 3 kvmgt,vfio_mdev,vfio_iommu_type1 kvm 737280 2 kvmgt,kvm_intel irqbypass 16384 1 kvm","title":"1. \u5bbf\u4e3b\u673a\u542f\u7528KVM\uff0c\u9700\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a"},{"location":"Daily/2018/KVM\u5d4c\u5957\u865a\u62df\u5316/#2","text":"kvm\u4f7f\u7528\u4f4d\u4e8ehypervisor\u4e0eguest \u4e4b\u95f4\u7684Virtio API\u4e00\u5c42\u7ed9\u865a\u62df\u673a\u63d0\u4f9b\u534a\u865a\u62df\u5316\u8bbe\u5907\u3002\u6240\u6709\u7684virtio\u8bbe\u5907\u90fd\u5305\u542b\u4e24\u90e8\u5206\uff1ahost device\u3001guest driver host device: network device (virtio-net) block device (virtio-blk) controller device (virtio-scsi) serial device (virtio-serial) balloon device (virtio-balloon)","title":"2. \u5b9e\u73b0\u534a\u865a\u62df\u5316\uff0c\u9700\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a"},{"location":"Daily/2018/KVM\u5d4c\u5957\u865a\u62df\u5316/#3","text":"kvm_intel \u542f\u7528 nested \u529f\u80fd [convex@convexlens ~]$ sudo modprobe -r kvm_intel [convex@convexlens ~]$ sudo modprobe kvm_intel nested=1 #\u4e34\u65f6\u542f\u7528nested\u529f\u80fd [convex@convexlens ~]$ sudo vim /etc/modprobe.d/kvm_intel.conf options kvm_intel nested=1 #\u6c38\u4e45\u542f\u7528nested\u529f\u80fd [convex@convexlens ~]$ systool -m kvm_intel -v | grep nested nested = \"Y\" \u865a\u62df\u673a cpu mode \u4e3a host-passthrough","title":"3. \u9700\u8981\u542f\u7528\u5d4c\u5957\u865a\u62df\u5316\uff0c\u9700\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a"},{"location":"Daily/2018/Linux\u56fe\u5f62\u754c\u9762/","text":"","title":"Linux\u56fe\u5f62\u754c\u9762"},{"location":"Daily/2018/firewalld/","text":"firewalld Description\uff1a Dynamic Firewall Manager, firewalld provides a dynamically managed firewall with support for network/firewall zones to define the trust level of network connections or interfaces. It has support for IPv4, IPv6 firewall settings and for ethernet bridges and has a separation of runtime and permanent configuration options. It also supports an interface for services or applications to add firewall rules directly. Concepts firewalld has a D-Bus interface for firewall configuration of services and applications. It also has a command line client for the user. Services or applications already using D-Bus can request changes to the firewall with the D-Bus interface directly. For more information on the firewalld D-Bus interface, please have a look at firewalld.dbus(5). firewalld provides support for zones, predefined services and ICMP types and has a separation of runtime and permanent configuration options. Permanent configuration is loaded from XML files in /usr/lib/firewalld or /etc/firewalld (see the section called \u201cDIRECTORIES\u201d). If NetworkManager is not in use and firewalld gets started after the network is already up, the connections and manually created interfaces are not bound to the zone specified in the ifcfg file. The interfaces will automatically be handled by the default zone. firewalld will also not get notified about network device renames. All this also applies to interfaces that are not controlled by NetworkManager if NM_CONTROLLED=no is set. You can add these interfaces to a zone with firewall-cmd [--permanent] --zone=zone --add-interface=interface. If there is a /etc/sysconfig/network-scripts/ifcfg-interface file, firewalld tries to change the ZONE=zone setting in this file. If firewalld gets reloaded, it will restore the interface bindings that were in place before reloading to keep interface bindings stable in the case of NetworkManager uncontrolled interfaces. This mechanism is not possible in the case of a firewalld service restart. It is essential to keep the ZONE= setting in the ifcfg file consistent to the binding in firewalld in the case of NetworkManager uncontrolled interfaces. Zones A network or firewall zone defines the trust level of the interface used for a connection. There are several pre-defined zones provided by firewalld. Zone configuration options and generic information about zones are described in firewalld.zone(5) Services A service can be a list of local ports, protocols and destinations and additionally also a list of firewall helper modules automatically loaded if a service is enabled. Service configuration options and generic information about services are described in firewalld.service(5). The use of predefined services makes it easier for the user to enable and disable access to a service. ICMP types The Internet Control Message Protocol (ICMP) is used to exchange information and also error messages in the Internet Protocol (IP). ICMP types can be used in firewalld to limit the exchange of these messages. For more information, please have a look at firewalld.icmptype(5). Runtime configuration Runtime configuration is the actual active configuration and is not permanent. After reload/restart of the service or a system reboot, runtime settings will be gone if they haven't been also in permanent configuration. Permanent configuration The permanent configuration is stored in config files and will be loaded and become new runtime configuration with every machine boot or service reload/restart. Direct interface The direct interface is mainly used by services or applications to add specific firewall rules. It requires basic knowledge of ip(6)tables concepts (tables, chains, commands, parameters, targets). firewall-cmd\u7684\u4f7f\u7528 \u53ea\u9700\u8981\u7406\u89e3\u4e0a\u8ff0\u6982\u5ff5\uff1azone\u3001interface\u3001services\u3001runtime\u3001permanent\u5373\u53ef\u5f88\u597d\u8fdb\u884c\u914d\u7f6e firewall-cmd --\\<tab> \u53ef\u4ee5\u8fdb\u884c\u8054\u60f3\uff0c\u6709\u52a9\u4e8e\u914d\u7f6e \u4e00\u4e2ainterace\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u5c5e\u4e8e\u67d0\u4e2azone","title":"Firewalld"},{"location":"Daily/2018/firewalld/#firewalld","text":"","title":"firewalld"},{"location":"Daily/2018/firewalld/#description","text":"Dynamic Firewall Manager, firewalld provides a dynamically managed firewall with support for network/firewall zones to define the trust level of network connections or interfaces. It has support for IPv4, IPv6 firewall settings and for ethernet bridges and has a separation of runtime and permanent configuration options. It also supports an interface for services or applications to add firewall rules directly.","title":"Description\uff1a"},{"location":"Daily/2018/firewalld/#concepts","text":"firewalld has a D-Bus interface for firewall configuration of services and applications. It also has a command line client for the user. Services or applications already using D-Bus can request changes to the firewall with the D-Bus interface directly. For more information on the firewalld D-Bus interface, please have a look at firewalld.dbus(5). firewalld provides support for zones, predefined services and ICMP types and has a separation of runtime and permanent configuration options. Permanent configuration is loaded from XML files in /usr/lib/firewalld or /etc/firewalld (see the section called \u201cDIRECTORIES\u201d). If NetworkManager is not in use and firewalld gets started after the network is already up, the connections and manually created interfaces are not bound to the zone specified in the ifcfg file. The interfaces will automatically be handled by the default zone. firewalld will also not get notified about network device renames. All this also applies to interfaces that are not controlled by NetworkManager if NM_CONTROLLED=no is set. You can add these interfaces to a zone with firewall-cmd [--permanent] --zone=zone --add-interface=interface. If there is a /etc/sysconfig/network-scripts/ifcfg-interface file, firewalld tries to change the ZONE=zone setting in this file. If firewalld gets reloaded, it will restore the interface bindings that were in place before reloading to keep interface bindings stable in the case of NetworkManager uncontrolled interfaces. This mechanism is not possible in the case of a firewalld service restart. It is essential to keep the ZONE= setting in the ifcfg file consistent to the binding in firewalld in the case of NetworkManager uncontrolled interfaces. Zones A network or firewall zone defines the trust level of the interface used for a connection. There are several pre-defined zones provided by firewalld. Zone configuration options and generic information about zones are described in firewalld.zone(5) Services A service can be a list of local ports, protocols and destinations and additionally also a list of firewall helper modules automatically loaded if a service is enabled. Service configuration options and generic information about services are described in firewalld.service(5). The use of predefined services makes it easier for the user to enable and disable access to a service. ICMP types The Internet Control Message Protocol (ICMP) is used to exchange information and also error messages in the Internet Protocol (IP). ICMP types can be used in firewalld to limit the exchange of these messages. For more information, please have a look at firewalld.icmptype(5). Runtime configuration Runtime configuration is the actual active configuration and is not permanent. After reload/restart of the service or a system reboot, runtime settings will be gone if they haven't been also in permanent configuration. Permanent configuration The permanent configuration is stored in config files and will be loaded and become new runtime configuration with every machine boot or service reload/restart. Direct interface The direct interface is mainly used by services or applications to add specific firewall rules. It requires basic knowledge of ip(6)tables concepts (tables, chains, commands, parameters, targets).","title":"Concepts"},{"location":"Daily/2018/firewalld/#firewall-cmd","text":"\u53ea\u9700\u8981\u7406\u89e3\u4e0a\u8ff0\u6982\u5ff5\uff1azone\u3001interface\u3001services\u3001runtime\u3001permanent\u5373\u53ef\u5f88\u597d\u8fdb\u884c\u914d\u7f6e firewall-cmd --\\<tab> \u53ef\u4ee5\u8fdb\u884c\u8054\u60f3\uff0c\u6709\u52a9\u4e8e\u914d\u7f6e \u4e00\u4e2ainterace\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u5c5e\u4e8e\u67d0\u4e2azone","title":"firewall-cmd\u7684\u4f7f\u7528"},{"location":"Daily/2018/gnome\u6587\u4ef6\u7ba1\u7406\u5668\u4fee\u6539/","text":"gnome\u6587\u4ef6\u7ba1\u7406\u5668\u4fee\u6539 \u5b89\u88c5visual studio code \u540e\uff0cgnome\u9ed8\u8ba4\u6587\u4ef6\u7ba1\u7406\u5668\u88ab\u4fee\u6539\u6210visual studio code\uff0c\u901a\u8fc7xdg-mime\u4fee\u6539\u56deNautilus [convex@convexlens share]$ whatis xdg-mime xdg-mime (1) - command line tool for querying information about file type handling and adding descriptions for new file types [convex@convexlens share]$ xdg-mime --help xdg-mime -- command line tool for querying information about file type handling and adding descriptions for new file types Synopsis xdg-mime query { filetype | default } ... xdg-mime default application mimetype(s) xdg-mime install [--mode mode] [--novendor] mimetypes-file xdg-mime uninstall [--mode mode] mimetypes-file xdg-mime { --help | --manual | --version } Use 'man xdg-mime' or 'xdg-mime --manual' for additional info. [convex@convexlens share]$ xdg-mime query default inode/directory visual-studio-code.desktop [convex@convexlens share]$ xdg-mime default org.gnome.Nautilus.desktop inode/directory [convex@convexlens share]$ xdg-mime query default inode/directory org.gnome.Nautilus.desktop","title":"Gnome\u6587\u4ef6\u7ba1\u7406\u5668\u4fee\u6539"},{"location":"Daily/2018/gnome\u6587\u4ef6\u7ba1\u7406\u5668\u4fee\u6539/#gnome","text":"\u5b89\u88c5visual studio code \u540e\uff0cgnome\u9ed8\u8ba4\u6587\u4ef6\u7ba1\u7406\u5668\u88ab\u4fee\u6539\u6210visual studio code\uff0c\u901a\u8fc7xdg-mime\u4fee\u6539\u56deNautilus [convex@convexlens share]$ whatis xdg-mime xdg-mime (1) - command line tool for querying information about file type handling and adding descriptions for new file types [convex@convexlens share]$ xdg-mime --help xdg-mime -- command line tool for querying information about file type handling and adding descriptions for new file types Synopsis xdg-mime query { filetype | default } ... xdg-mime default application mimetype(s) xdg-mime install [--mode mode] [--novendor] mimetypes-file xdg-mime uninstall [--mode mode] mimetypes-file xdg-mime { --help | --manual | --version } Use 'man xdg-mime' or 'xdg-mime --manual' for additional info. [convex@convexlens share]$ xdg-mime query default inode/directory visual-studio-code.desktop [convex@convexlens share]$ xdg-mime default org.gnome.Nautilus.desktop inode/directory [convex@convexlens share]$ xdg-mime query default inode/directory org.gnome.Nautilus.desktop","title":"gnome\u6587\u4ef6\u7ba1\u7406\u5668\u4fee\u6539"},{"location":"Daily/2018/uefi+gpt+grub+lvm/","text":"UEFI+gpt+grub+lvm UEFI The Unified Extensible Firmware Interface (UEFI or EFI for short) is a new model for the interface between operating systems and firmware. It provides a standard environment for booting an operating system and running pre-boot applications. Unified Extensible Firmware Interface has support for reading both the partition table as well as file systems. UEFI does not launch any boot code in the MBR whether it exists or not, instead booting relies on boot entries in NVRAM System switched on, the power-on self-test (POST) is executed. UEFI initializes the hardware required for booting. Firmware reads the boot entries in the NVRAM to determine which EFI application to launch and from where (e.g. from which disk and partition). A boot entry could simply be a disk. In this case the firmware looks for an EFI system partition on that disk and tries to find a EFI application in the fallback boot path \\EFI\\BOOT\\BOOTX64.EFI (BOOTIA32.EFI on systems with a IA32 (32-bit) UEFI). This is how UEFI bootable removable media work. Firmware launches the EFI application. This could be a boot loader or the Arch kernel itself using EFISTUB. It could be some other EFI application such as a UEFI shell or a boot manager like systemd-boot or rEFInd. ESP The EFI system partition (also called ESP) is an OS independent partition that acts as the storage place for the EFI bootloaders, applications and drivers to be launched by the UEFI firmware. It is mandatory for UEFI boot. The UEFI specification mandates support for the FAT12, FAT16, and FAT32 filesystems , but any conformant vendor can optionally add support for additional filesystems; for example, Apple Macs support (and by default use) their own HFS+ filesystem drivers. GPT GUID Partition Table (GPT) is a partitioning scheme that is part of the Unified Extensible Firmware Interface specification; it uses globally unique identifiers (GUIDs), or UUIDs in the Linux world, to define partitions and partition types. It is designed to succeed the Master Boot Record partitioning scheme method. At the start of a GUID Partition Table disk there is a protective Master Boot Record (PMBR) to protect against GPT-unaware software. This protective MBR just like a real MBR has a bootstrap code area which can be used for BIOS/GPT booting with boot loaders that support it. GRUB GRUB\u200a(GRand Unified Bootloader) is a multi-boot loader. \u901a\u8fc7\u4e0a\u8ff0\u4fe1\u606f\uff0c\u53ef\u603b\u7ed3\uff1aUEFI\u5f15\u5bfc\u9700\u8981\u8bfb\u53d6ESP\u5206\u533a\uff0c\u6545ESP\u5206\u533a\u662f\u5fc5\u987b\u7684\uff0c\u4e14\u901a\u5e38\u4f7f\u7528 FAT32 \u6587\u4ef6\u7cfb\u7edf\u3002GPT\u5206\u533a\u65b9\u5f0f\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u63a8\u8350\u3002 boot\u5206\u533a\u4e3aLVM\u65f6\u7684\u4e00\u4e9b\u5904\u7406 [convex@convexlens ~]$ sudo vim /etc/lvm/lvm.conf use_lvmetad = 0 #\u521b\u5efagrub.cfg\u524d\u4fee\u6539\u4e3a0 [convex@convexlens ~]$ sudo grub-mkconfig -o /boot/grub/grub.cfg [convex@convexlens ~]$ sudo vim /etc/lvm/lvm.conf use_lvmetad = 1 #\u521b\u5efagrub.cfg\u540e\u4fee\u6539\u4e3a1 [convex@convexlens ~]$ sudo vim /etc/mkinitcpio.conf HOOKS=(base udev autodetect modconf block lvm2 filesystems keyboard fsck) #\u786e\u4fddlvm2\u5df2\u5b89\u88c5\u5e76\u589e\u52a0hook [convex@convexlens ~]$ sudo mkinitcpio -p linux #\u91cd\u65b0\u521b\u5efainitramfs\u751f\u6548hook","title":"Uefi+gpt+grub+lvm"},{"location":"Daily/2018/uefi+gpt+grub+lvm/#uefigptgrublvm","text":"","title":"UEFI+gpt+grub+lvm"},{"location":"Daily/2018/uefi+gpt+grub+lvm/#uefi","text":"The Unified Extensible Firmware Interface (UEFI or EFI for short) is a new model for the interface between operating systems and firmware. It provides a standard environment for booting an operating system and running pre-boot applications. Unified Extensible Firmware Interface has support for reading both the partition table as well as file systems. UEFI does not launch any boot code in the MBR whether it exists or not, instead booting relies on boot entries in NVRAM System switched on, the power-on self-test (POST) is executed. UEFI initializes the hardware required for booting. Firmware reads the boot entries in the NVRAM to determine which EFI application to launch and from where (e.g. from which disk and partition). A boot entry could simply be a disk. In this case the firmware looks for an EFI system partition on that disk and tries to find a EFI application in the fallback boot path \\EFI\\BOOT\\BOOTX64.EFI (BOOTIA32.EFI on systems with a IA32 (32-bit) UEFI). This is how UEFI bootable removable media work. Firmware launches the EFI application. This could be a boot loader or the Arch kernel itself using EFISTUB. It could be some other EFI application such as a UEFI shell or a boot manager like systemd-boot or rEFInd.","title":"UEFI"},{"location":"Daily/2018/uefi+gpt+grub+lvm/#esp","text":"The EFI system partition (also called ESP) is an OS independent partition that acts as the storage place for the EFI bootloaders, applications and drivers to be launched by the UEFI firmware. It is mandatory for UEFI boot. The UEFI specification mandates support for the FAT12, FAT16, and FAT32 filesystems , but any conformant vendor can optionally add support for additional filesystems; for example, Apple Macs support (and by default use) their own HFS+ filesystem drivers.","title":"ESP"},{"location":"Daily/2018/uefi+gpt+grub+lvm/#gpt","text":"GUID Partition Table (GPT) is a partitioning scheme that is part of the Unified Extensible Firmware Interface specification; it uses globally unique identifiers (GUIDs), or UUIDs in the Linux world, to define partitions and partition types. It is designed to succeed the Master Boot Record partitioning scheme method. At the start of a GUID Partition Table disk there is a protective Master Boot Record (PMBR) to protect against GPT-unaware software. This protective MBR just like a real MBR has a bootstrap code area which can be used for BIOS/GPT booting with boot loaders that support it.","title":"GPT"},{"location":"Daily/2018/uefi+gpt+grub+lvm/#grub","text":"GRUB\u200a(GRand Unified Bootloader) is a multi-boot loader. \u901a\u8fc7\u4e0a\u8ff0\u4fe1\u606f\uff0c\u53ef\u603b\u7ed3\uff1aUEFI\u5f15\u5bfc\u9700\u8981\u8bfb\u53d6ESP\u5206\u533a\uff0c\u6545ESP\u5206\u533a\u662f\u5fc5\u987b\u7684\uff0c\u4e14\u901a\u5e38\u4f7f\u7528 FAT32 \u6587\u4ef6\u7cfb\u7edf\u3002GPT\u5206\u533a\u65b9\u5f0f\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u63a8\u8350\u3002","title":"GRUB"},{"location":"Daily/2018/uefi+gpt+grub+lvm/#bootlvm","text":"[convex@convexlens ~]$ sudo vim /etc/lvm/lvm.conf use_lvmetad = 0 #\u521b\u5efagrub.cfg\u524d\u4fee\u6539\u4e3a0 [convex@convexlens ~]$ sudo grub-mkconfig -o /boot/grub/grub.cfg [convex@convexlens ~]$ sudo vim /etc/lvm/lvm.conf use_lvmetad = 1 #\u521b\u5efagrub.cfg\u540e\u4fee\u6539\u4e3a1 [convex@convexlens ~]$ sudo vim /etc/mkinitcpio.conf HOOKS=(base udev autodetect modconf block lvm2 filesystems keyboard fsck) #\u786e\u4fddlvm2\u5df2\u5b89\u88c5\u5e76\u589e\u52a0hook [convex@convexlens ~]$ sudo mkinitcpio -p linux #\u91cd\u65b0\u521b\u5efainitramfs\u751f\u6548hook","title":"boot\u5206\u533a\u4e3aLVM\u65f6\u7684\u4e00\u4e9b\u5904\u7406"},{"location":"Daily/2018/virt-manager\u81ea\u52a8\u8c03\u6574VM\u7a97\u53e3\u5927\u5c0f/","text":"virt-manager \u81ea\u52a8\u8c03\u6574VM\u7a97\u53e3\u5927\u5c0f \u9700\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6 VM\u5185\u9700\u5b89\u88c5spice-agent\u5e76\u8fd0\u884c\u6b63\u5e38 shell [convex@convexlens share]$ ll spice-guest-tools-latest.exe -rw-r--r-- 1 convex convex 10136459 12\u6708 14 15:09 spice-guest-tools-latest.exe Display: Spice Video: QXL Channel spice: spicevmc, virtio, com.redhat.spice.0 virt-manager\u52fe\u9009\u81ea\u52a8\u8c03\u6574VM\u7a97\u53e3\u5927\u5c0f","title":"virt manager\u81ea\u52a8\u8c03\u6574VM\u7a97\u53e3\u5927\u5c0f"},{"location":"Daily/2018/virt-manager\u81ea\u52a8\u8c03\u6574VM\u7a97\u53e3\u5927\u5c0f/#virt-manager-vm","text":"","title":"virt-manager \u81ea\u52a8\u8c03\u6574VM\u7a97\u53e3\u5927\u5c0f"},{"location":"Daily/2018/virt-manager\u81ea\u52a8\u8c03\u6574VM\u7a97\u53e3\u5927\u5c0f/#_1","text":"VM\u5185\u9700\u5b89\u88c5spice-agent\u5e76\u8fd0\u884c\u6b63\u5e38 shell [convex@convexlens share]$ ll spice-guest-tools-latest.exe -rw-r--r-- 1 convex convex 10136459 12\u6708 14 15:09 spice-guest-tools-latest.exe Display: Spice Video: QXL Channel spice: spicevmc, virtio, com.redhat.spice.0 virt-manager\u52fe\u9009\u81ea\u52a8\u8c03\u6574VM\u7a97\u53e3\u5927\u5c0f","title":"\u9700\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6"},{"location":"Daily/2019/01/mariadb_character/","text":"mariadb_character character set && collation character set\uff1a\u5b57\u7b26\u7f16\u7801 mariadb MariaDB [(none)]> SHOW CHARACTER SET; +----------+-----------------------------+---------------------+--------+ | Charset | Description | Default collation | Maxlen | +----------+-----------------------------+---------------------+--------+ | big5 | Big5 Traditional Chinese | big5_chinese_ci | 2 | | dec8 | DEC West European | dec8_swedish_ci | 1 | | cp850 | DOS West European | cp850_general_ci | 1 | | hp8 | HP West European | hp8_english_ci | 1 | | koi8r | KOI8-R Relcom Russian | koi8r_general_ci | 1 | | latin1 | cp1252 West European | latin1_swedish_ci | 1 | | latin2 | ISO 8859-2 Central European | latin2_general_ci | 1 | | swe7 | 7bit Swedish | swe7_swedish_ci | 1 | | ascii | US ASCII | ascii_general_ci | 1 | | ujis | EUC-JP Japanese | ujis_japanese_ci | 3 | | sjis | Shift-JIS Japanese | sjis_japanese_ci | 2 | | hebrew | ISO 8859-8 Hebrew | hebrew_general_ci | 1 | | tis620 | TIS620 Thai | tis620_thai_ci | 1 | | euckr | EUC-KR Korean | euckr_korean_ci | 2 | | koi8u | KOI8-U Ukrainian | koi8u_general_ci | 1 | | gb2312 | GB2312 Simplified Chinese | gb2312_chinese_ci | 2 | | greek | ISO 8859-7 Greek | greek_general_ci | 1 | | cp1250 | Windows Central European | cp1250_general_ci | 1 | | gbk | GBK Simplified Chinese | gbk_chinese_ci | 2 | | latin5 | ISO 8859-9 Turkish | latin5_turkish_ci | 1 | | armscii8 | ARMSCII-8 Armenian | armscii8_general_ci | 1 | | utf8 | UTF-8 Unicode | utf8_general_ci | 3 | | ucs2 | UCS-2 Unicode | ucs2_general_ci | 2 | | cp866 | DOS Russian | cp866_general_ci | 1 | | keybcs2 | DOS Kamenicky Czech-Slovak | keybcs2_general_ci | 1 | | macce | Mac Central European | macce_general_ci | 1 | | macroman | Mac West European | macroman_general_ci | 1 | | cp852 | DOS Central European | cp852_general_ci | 1 | | latin7 | ISO 8859-13 Baltic | latin7_general_ci | 1 | | utf8mb4 | UTF-8 Unicode | utf8mb4_general_ci | 4 | | cp1251 | Windows Cyrillic | cp1251_general_ci | 1 | | utf16 | UTF-16 Unicode | utf16_general_ci | 4 | | utf16le | UTF-16LE Unicode | utf16le_general_ci | 4 | | cp1256 | Windows Arabic | cp1256_general_ci | 1 | | cp1257 | Windows Baltic | cp1257_general_ci | 1 | | utf32 | UTF-32 Unicode | utf32_general_ci | 4 | | binary | Binary pseudo charset | binary | 1 | | geostd8 | GEOSTD8 Georgian | geostd8_general_ci | 1 | | cp932 | SJIS for Windows Japanese | cp932_japanese_ci | 2 | | eucjpms | UJIS for Windows Japanese | eucjpms_japanese_ci | 3 | +----------+-----------------------------+---------------------+--------+ 40 rows in set (0.00 sec) collation\uff1a\u5b57\u7b26\u6bd4\u8f83\u89c4\u5219 MariaDB [(none)]> SHOW COLLATION WHERE Charset='utf8mb4'; +------------------------------+---------+------+---------+----------+---------+ | Collation | Charset | Id | Default | Compiled | Sortlen | +------------------------------+---------+------+---------+----------+---------+ | utf8mb4_general_ci | utf8mb4 | 45 | Yes | Yes | 1 | | utf8mb4_bin | utf8mb4 | 46 | | Yes | 1 | | utf8mb4_unicode_ci | utf8mb4 | 224 | | Yes | 8 | | utf8mb4_icelandic_ci | utf8mb4 | 225 | | Yes | 8 | | utf8mb4_latvian_ci | utf8mb4 | 226 | | Yes | 8 | | utf8mb4_romanian_ci | utf8mb4 | 227 | | Yes | 8 | | utf8mb4_slovenian_ci | utf8mb4 | 228 | | Yes | 8 | | utf8mb4_polish_ci | utf8mb4 | 229 | | Yes | 8 | | utf8mb4_estonian_ci | utf8mb4 | 230 | | Yes | 8 | | utf8mb4_spanish_ci | utf8mb4 | 231 | | Yes | 8 | | utf8mb4_swedish_ci | utf8mb4 | 232 | | Yes | 8 | | utf8mb4_turkish_ci | utf8mb4 | 233 | | Yes | 8 | | utf8mb4_czech_ci | utf8mb4 | 234 | | Yes | 8 | | utf8mb4_danish_ci | utf8mb4 | 235 | | Yes | 8 | | utf8mb4_lithuanian_ci | utf8mb4 | 236 | | Yes | 8 | | utf8mb4_slovak_ci | utf8mb4 | 237 | | Yes | 8 | | utf8mb4_spanish2_ci | utf8mb4 | 238 | | Yes | 8 | | utf8mb4_roman_ci | utf8mb4 | 239 | | Yes | 8 | | utf8mb4_persian_ci | utf8mb4 | 240 | | Yes | 8 | | utf8mb4_esperanto_ci | utf8mb4 | 241 | | Yes | 8 | | utf8mb4_hungarian_ci | utf8mb4 | 242 | | Yes | 8 | | utf8mb4_sinhala_ci | utf8mb4 | 243 | | Yes | 8 | | utf8mb4_german2_ci | utf8mb4 | 244 | | Yes | 8 | | utf8mb4_croatian_mysql561_ci | utf8mb4 | 245 | | Yes | 8 | | utf8mb4_unicode_520_ci | utf8mb4 | 246 | | Yes | 8 | | utf8mb4_vietnamese_ci | utf8mb4 | 247 | | Yes | 8 | | utf8mb4_croatian_ci | utf8mb4 | 608 | | Yes | 8 | | utf8mb4_myanmar_ci | utf8mb4 | 609 | | Yes | 8 | | utf8mb4_thai_520_w2 | utf8mb4 | 610 | | Yes | 4 | | utf8mb4_general_nopad_ci | utf8mb4 | 1069 | | Yes | 1 | | utf8mb4_nopad_bin | utf8mb4 | 1070 | | Yes | 1 | | utf8mb4_unicode_nopad_ci | utf8mb4 | 1248 | | Yes | 8 | | utf8mb4_unicode_520_nopad_ci | utf8mb4 | 1270 | | Yes | 8 | +------------------------------+---------+------+---------+----------+---------+ 33 rows in set (0.00 sec) \u7531\u4e0a\u8ff0\u53ef\u77e5\uff1a \u4e00\u4e2a\u5b57\u7b26\u96c6\u5bf9\u5e94\u81f3\u5c11\u4e00\u79cd\u5b57\u7b26\u5e8f\uff08\u4e00\u822c\u662f1\u5bf9\u591a\uff09\u3002 \u4e24\u4e2a\u4e0d\u540c\u7684\u5b57\u7b26\u96c6\u4e0d\u80fd\u6709\u76f8\u540c\u7684\u5b57\u7b26\u5e8f\u3002 \u6bcf\u4e2a\u5b57\u7b26\u96c6\u90fd\u6709\u9ed8\u8ba4\u7684\u5b57\u7b26\u5e8f\u3002 utf8\u4e0eutf8mb4\u7684\u533a\u522b MySQL\u57285.5.3\u4e4b\u540e\u589e\u52a0\u4e86\u8fd9\u4e2a utf8mb4 \u7684\u7f16\u7801\uff0cmb4\u5c31\u662f most bytes 4 \u7684\u610f\u601d\uff0c\u4e13\u95e8\u7528\u6765 \u517c\u5bb9\u56db\u5b57\u8282\u7684unicode \u3002 \u8bbe\u7f6e\u7ea7\u522b MySQL\u63d0\u4f9b\u4e86\u4e0d\u540c\u7ea7\u522b\u7684\u8bbe\u7f6e\uff0c\u5305\u62ec server\u7ea7 \u3001 database\u7ea7 \u3001 table\u7ea7 \u3001 column \u7ea7\uff0c\u53ef\u4ee5\u63d0\u4f9b\u975e\u5e38\u7cbe\u51c6\u7684\u8bbe\u7f6e server mariadb MariaDB [(none)]> SHOW VARIABLES LIKE 'character_%'; +--------------------------+---------------------------------------------+ | Variable_name | Value | +--------------------------+---------------------------------------------+ | character_set_client | utf8mb4 | | character_set_connection | utf8mb4 | | character_set_database | utf8mb4 | | character_set_filesystem | binary | | character_set_results | utf8mb4 | | character_set_server | utf8mb4 | | character_set_system | utf8 | | character_sets_dir | /rdsdbbin/mariadb-10.3.8.R3/share/charsets/ | +--------------------------+---------------------------------------------+ 8 rows in set (0.00 sec) database mariadb MariaDB [(none)]> SHOW CREATE DATABASE django; +----------+--------------------------------------------------------------------+ | Database | Create Database | +----------+--------------------------------------------------------------------+ | django | CREATE DATABASE `django` /*!40100 DEFAULT CHARACTER SET utf8mb4 */ | +----------+--------------------------------------------------------------------+ 1 row in set (0.01 sec) table mariadb MariaDB [django]> SHOW CREATE TABLE auth_user| Table | Create Table || auth_user | CREATE TABLE `auth_user` ( `id` int(11) NOT NULL AUTO_INCREMENT, `password` varchar(128) NOT NULL, `last_login` datetime(6) DEFAULT NULL, `is_superuser` tinyint(1) NOT NULL, `username` varchar(150) NOT NULL, `first_name` varchar(30) NOT NULL, `last_name` varchar(150) NOT NULL, `email` varchar(254) NOT NULL, `is_staff` tinyint(1) NOT NULL, `is_active` tinyint(1) NOT NULL, `date_joined` datetime(6) NOT NULL, PRIMARY KEY (`id`), UNIQUE KEY `username` (`username`) ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 |row in set (0.00 sec) column MariaDB [django]> SELECT COLUMN_NAME,CHARACTER_SET_NAME, COLLATION_NAME FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=\"django\" AND TABLE_NAME=\"auth_user\" ; +--------------+--------------------+--------------------+ | COLUMN_NAME | CHARACTER_SET_NAME | COLLATION_NAME | +--------------+--------------------+--------------------+ | id | NULL | NULL | | password | utf8mb4 | utf8mb4_general_ci | | last_login | NULL | NULL | | is_superuser | NULL | NULL | | username | utf8mb4 | utf8mb4_general_ci | | first_name | utf8mb4 | utf8mb4_general_ci | | last_name | utf8mb4 | utf8mb4_general_ci | | email | utf8mb4 | utf8mb4_general_ci | | is_staff | NULL | NULL | | is_active | NULL | NULL | | date_joined | NULL | NULL | +--------------+--------------------+--------------------+ 11 rows in set (0.00 sec)","title":"Mariadb character"},{"location":"Daily/2019/01/mariadb_character/#mariadb_character","text":"","title":"mariadb_character"},{"location":"Daily/2019/01/mariadb_character/#character-set-collation","text":"character set\uff1a\u5b57\u7b26\u7f16\u7801 mariadb MariaDB [(none)]> SHOW CHARACTER SET; +----------+-----------------------------+---------------------+--------+ | Charset | Description | Default collation | Maxlen | +----------+-----------------------------+---------------------+--------+ | big5 | Big5 Traditional Chinese | big5_chinese_ci | 2 | | dec8 | DEC West European | dec8_swedish_ci | 1 | | cp850 | DOS West European | cp850_general_ci | 1 | | hp8 | HP West European | hp8_english_ci | 1 | | koi8r | KOI8-R Relcom Russian | koi8r_general_ci | 1 | | latin1 | cp1252 West European | latin1_swedish_ci | 1 | | latin2 | ISO 8859-2 Central European | latin2_general_ci | 1 | | swe7 | 7bit Swedish | swe7_swedish_ci | 1 | | ascii | US ASCII | ascii_general_ci | 1 | | ujis | EUC-JP Japanese | ujis_japanese_ci | 3 | | sjis | Shift-JIS Japanese | sjis_japanese_ci | 2 | | hebrew | ISO 8859-8 Hebrew | hebrew_general_ci | 1 | | tis620 | TIS620 Thai | tis620_thai_ci | 1 | | euckr | EUC-KR Korean | euckr_korean_ci | 2 | | koi8u | KOI8-U Ukrainian | koi8u_general_ci | 1 | | gb2312 | GB2312 Simplified Chinese | gb2312_chinese_ci | 2 | | greek | ISO 8859-7 Greek | greek_general_ci | 1 | | cp1250 | Windows Central European | cp1250_general_ci | 1 | | gbk | GBK Simplified Chinese | gbk_chinese_ci | 2 | | latin5 | ISO 8859-9 Turkish | latin5_turkish_ci | 1 | | armscii8 | ARMSCII-8 Armenian | armscii8_general_ci | 1 | | utf8 | UTF-8 Unicode | utf8_general_ci | 3 | | ucs2 | UCS-2 Unicode | ucs2_general_ci | 2 | | cp866 | DOS Russian | cp866_general_ci | 1 | | keybcs2 | DOS Kamenicky Czech-Slovak | keybcs2_general_ci | 1 | | macce | Mac Central European | macce_general_ci | 1 | | macroman | Mac West European | macroman_general_ci | 1 | | cp852 | DOS Central European | cp852_general_ci | 1 | | latin7 | ISO 8859-13 Baltic | latin7_general_ci | 1 | | utf8mb4 | UTF-8 Unicode | utf8mb4_general_ci | 4 | | cp1251 | Windows Cyrillic | cp1251_general_ci | 1 | | utf16 | UTF-16 Unicode | utf16_general_ci | 4 | | utf16le | UTF-16LE Unicode | utf16le_general_ci | 4 | | cp1256 | Windows Arabic | cp1256_general_ci | 1 | | cp1257 | Windows Baltic | cp1257_general_ci | 1 | | utf32 | UTF-32 Unicode | utf32_general_ci | 4 | | binary | Binary pseudo charset | binary | 1 | | geostd8 | GEOSTD8 Georgian | geostd8_general_ci | 1 | | cp932 | SJIS for Windows Japanese | cp932_japanese_ci | 2 | | eucjpms | UJIS for Windows Japanese | eucjpms_japanese_ci | 3 | +----------+-----------------------------+---------------------+--------+ 40 rows in set (0.00 sec) collation\uff1a\u5b57\u7b26\u6bd4\u8f83\u89c4\u5219 MariaDB [(none)]> SHOW COLLATION WHERE Charset='utf8mb4'; +------------------------------+---------+------+---------+----------+---------+ | Collation | Charset | Id | Default | Compiled | Sortlen | +------------------------------+---------+------+---------+----------+---------+ | utf8mb4_general_ci | utf8mb4 | 45 | Yes | Yes | 1 | | utf8mb4_bin | utf8mb4 | 46 | | Yes | 1 | | utf8mb4_unicode_ci | utf8mb4 | 224 | | Yes | 8 | | utf8mb4_icelandic_ci | utf8mb4 | 225 | | Yes | 8 | | utf8mb4_latvian_ci | utf8mb4 | 226 | | Yes | 8 | | utf8mb4_romanian_ci | utf8mb4 | 227 | | Yes | 8 | | utf8mb4_slovenian_ci | utf8mb4 | 228 | | Yes | 8 | | utf8mb4_polish_ci | utf8mb4 | 229 | | Yes | 8 | | utf8mb4_estonian_ci | utf8mb4 | 230 | | Yes | 8 | | utf8mb4_spanish_ci | utf8mb4 | 231 | | Yes | 8 | | utf8mb4_swedish_ci | utf8mb4 | 232 | | Yes | 8 | | utf8mb4_turkish_ci | utf8mb4 | 233 | | Yes | 8 | | utf8mb4_czech_ci | utf8mb4 | 234 | | Yes | 8 | | utf8mb4_danish_ci | utf8mb4 | 235 | | Yes | 8 | | utf8mb4_lithuanian_ci | utf8mb4 | 236 | | Yes | 8 | | utf8mb4_slovak_ci | utf8mb4 | 237 | | Yes | 8 | | utf8mb4_spanish2_ci | utf8mb4 | 238 | | Yes | 8 | | utf8mb4_roman_ci | utf8mb4 | 239 | | Yes | 8 | | utf8mb4_persian_ci | utf8mb4 | 240 | | Yes | 8 | | utf8mb4_esperanto_ci | utf8mb4 | 241 | | Yes | 8 | | utf8mb4_hungarian_ci | utf8mb4 | 242 | | Yes | 8 | | utf8mb4_sinhala_ci | utf8mb4 | 243 | | Yes | 8 | | utf8mb4_german2_ci | utf8mb4 | 244 | | Yes | 8 | | utf8mb4_croatian_mysql561_ci | utf8mb4 | 245 | | Yes | 8 | | utf8mb4_unicode_520_ci | utf8mb4 | 246 | | Yes | 8 | | utf8mb4_vietnamese_ci | utf8mb4 | 247 | | Yes | 8 | | utf8mb4_croatian_ci | utf8mb4 | 608 | | Yes | 8 | | utf8mb4_myanmar_ci | utf8mb4 | 609 | | Yes | 8 | | utf8mb4_thai_520_w2 | utf8mb4 | 610 | | Yes | 4 | | utf8mb4_general_nopad_ci | utf8mb4 | 1069 | | Yes | 1 | | utf8mb4_nopad_bin | utf8mb4 | 1070 | | Yes | 1 | | utf8mb4_unicode_nopad_ci | utf8mb4 | 1248 | | Yes | 8 | | utf8mb4_unicode_520_nopad_ci | utf8mb4 | 1270 | | Yes | 8 | +------------------------------+---------+------+---------+----------+---------+ 33 rows in set (0.00 sec) \u7531\u4e0a\u8ff0\u53ef\u77e5\uff1a \u4e00\u4e2a\u5b57\u7b26\u96c6\u5bf9\u5e94\u81f3\u5c11\u4e00\u79cd\u5b57\u7b26\u5e8f\uff08\u4e00\u822c\u662f1\u5bf9\u591a\uff09\u3002 \u4e24\u4e2a\u4e0d\u540c\u7684\u5b57\u7b26\u96c6\u4e0d\u80fd\u6709\u76f8\u540c\u7684\u5b57\u7b26\u5e8f\u3002 \u6bcf\u4e2a\u5b57\u7b26\u96c6\u90fd\u6709\u9ed8\u8ba4\u7684\u5b57\u7b26\u5e8f\u3002","title":"character set &amp;&amp; collation"},{"location":"Daily/2019/01/mariadb_character/#utf8utf8mb4","text":"MySQL\u57285.5.3\u4e4b\u540e\u589e\u52a0\u4e86\u8fd9\u4e2a utf8mb4 \u7684\u7f16\u7801\uff0cmb4\u5c31\u662f most bytes 4 \u7684\u610f\u601d\uff0c\u4e13\u95e8\u7528\u6765 \u517c\u5bb9\u56db\u5b57\u8282\u7684unicode \u3002","title":"utf8\u4e0eutf8mb4\u7684\u533a\u522b"},{"location":"Daily/2019/01/mariadb_character/#_1","text":"MySQL\u63d0\u4f9b\u4e86\u4e0d\u540c\u7ea7\u522b\u7684\u8bbe\u7f6e\uff0c\u5305\u62ec server\u7ea7 \u3001 database\u7ea7 \u3001 table\u7ea7 \u3001 column \u7ea7\uff0c\u53ef\u4ee5\u63d0\u4f9b\u975e\u5e38\u7cbe\u51c6\u7684\u8bbe\u7f6e server mariadb MariaDB [(none)]> SHOW VARIABLES LIKE 'character_%'; +--------------------------+---------------------------------------------+ | Variable_name | Value | +--------------------------+---------------------------------------------+ | character_set_client | utf8mb4 | | character_set_connection | utf8mb4 | | character_set_database | utf8mb4 | | character_set_filesystem | binary | | character_set_results | utf8mb4 | | character_set_server | utf8mb4 | | character_set_system | utf8 | | character_sets_dir | /rdsdbbin/mariadb-10.3.8.R3/share/charsets/ | +--------------------------+---------------------------------------------+ 8 rows in set (0.00 sec) database mariadb MariaDB [(none)]> SHOW CREATE DATABASE django; +----------+--------------------------------------------------------------------+ | Database | Create Database | +----------+--------------------------------------------------------------------+ | django | CREATE DATABASE `django` /*!40100 DEFAULT CHARACTER SET utf8mb4 */ | +----------+--------------------------------------------------------------------+ 1 row in set (0.01 sec) table mariadb MariaDB [django]> SHOW CREATE TABLE auth_user| Table | Create Table || auth_user | CREATE TABLE `auth_user` ( `id` int(11) NOT NULL AUTO_INCREMENT, `password` varchar(128) NOT NULL, `last_login` datetime(6) DEFAULT NULL, `is_superuser` tinyint(1) NOT NULL, `username` varchar(150) NOT NULL, `first_name` varchar(30) NOT NULL, `last_name` varchar(150) NOT NULL, `email` varchar(254) NOT NULL, `is_staff` tinyint(1) NOT NULL, `is_active` tinyint(1) NOT NULL, `date_joined` datetime(6) NOT NULL, PRIMARY KEY (`id`), UNIQUE KEY `username` (`username`) ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 |row in set (0.00 sec) column MariaDB [django]> SELECT COLUMN_NAME,CHARACTER_SET_NAME, COLLATION_NAME FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=\"django\" AND TABLE_NAME=\"auth_user\" ; +--------------+--------------------+--------------------+ | COLUMN_NAME | CHARACTER_SET_NAME | COLLATION_NAME | +--------------+--------------------+--------------------+ | id | NULL | NULL | | password | utf8mb4 | utf8mb4_general_ci | | last_login | NULL | NULL | | is_superuser | NULL | NULL | | username | utf8mb4 | utf8mb4_general_ci | | first_name | utf8mb4 | utf8mb4_general_ci | | last_name | utf8mb4 | utf8mb4_general_ci | | email | utf8mb4 | utf8mb4_general_ci | | is_staff | NULL | NULL | | is_active | NULL | NULL | | date_joined | NULL | NULL | +--------------+--------------------+--------------------+ 11 rows in set (0.00 sec)","title":"\u8bbe\u7f6e\u7ea7\u522b"},{"location":"Daily/2019/01/pip install mysqlclient error /","text":"root@web1:~# pip3 install mysqlclient Collecting mysqlclient Downloading https://files.pythonhosted.org/packages/de/d7/919042fb7ed78a89e21c4e43d5daed90d5df18ec183bae3de493a7d9e3ed/mysqlclient-1.4.1.tar.gz (85kB) 100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 92kB 5.7MB/s Complete output from command python setup.py egg_info: /bin/sh: 1: mysql_config: not found Traceback (most recent call last): File \"<string>\", line 1, in <module> File \"/tmp/pip-build-0vapd7_4/mysqlclient/setup.py\", line 16, in <module> metadata, options = get_config() File \"/tmp/pip-build-0vapd7_4/mysqlclient/setup_posix.py\", line 51, in get_config libs = mysql_config(\"libs\") File \"/tmp/pip-build-0vapd7_4/mysqlclient/setup_posix.py\", line 29, in mysql_config raise EnvironmentError(\"%s not found\" % (_mysql_config_path,)) OSError: mysql_config not found ---------------------------------------- Command \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-0vapd7_4/mysqlclient/ root@web1:~# apt install libmariadbclient-dev #\u5b89\u88c5mariadbclient\u5e93 root@web1:~# pip3 install mysqlclient Collecting mysqlclient Using cached https://files.pythonhosted.org/packages/de/d7/919042fb7ed78a89e21c4e43d5daed90d5df18ec183bae3de493a7d9e3ed/mysqlclient-1.4.1.tar.gz Building wheels for collected packages: mysqlclient Running setup.py bdist_wheel for mysqlclient ... done Stored in directory: /root/.cache/pip/wheels/d7/4b/5d/02a4a0429302e8b7b7beef82d427499ea82ec2a50334673846 Successfully built mysqlclient Installing collected packages: mysqlclient Successfully installed mysqlclient-1.4.1 \u91c7\u7528pip\u5b89\u88c5python\u5e93\u65f6\uff0c\u53ef\u80fd\u56e0\u5916\u90e8\u4f9d\u8d56\u7f3a\u5931\u800c\u5b89\u88c5\u5931\u8d25\uff0c\u4e14pip\u5e76\u4e0d\u80fd\u89e3\u51b3\u3002","title":"Pip install mysqlclient error "},{"location":"Daily/2019/02/curl build openstackRESTAPI/","text":"[convex@convexlens ~]$ curl http://openstackcontroller:5000 | python -m json.tool % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 613 100 613 0 0 76625 0 --:--:-- --:--:-- --:--:-- 76625 { \"versions\": { \"values\": [ { \"status\": \"stable\", \"updated\": \"2018-02-28T00:00:00Z\", \"media-types\": [ { \"base\": \"application/json\", \"type\": \"application/vnd.openstack.identity-v3+json\" } ], \"id\": \"v3.10\", \"links\": [ { \"href\": \"http://openstackcontroller:5000/v3/\", \"rel\": \"self\" } ] }, { \"status\": \"deprecated\", \"updated\": \"2016-08-04T00:00:00Z\", \"media-types\": [ { \"base\": \"application/json\", \"type\": \"application/vnd.openstack.identity-v2.0+json\" } ], \"id\": \"v2.0\", \"links\": [ { \"href\": \"http://openstackcontroller:5000/v2.0/\", \"rel\": \"self\" }, { \"href\": \"https://docs.openstack.org/\", \"type\": \"text/html\", \"rel\": \"describedby\" } ] } ] } } [convex@convexlens ~]$ curl http://openstackcontroller:5000/v3/auth/tokens -v * Trying 10.10.1.11... * TCP_NODELAY set * Connected to openstackcontroller (10.10.1.11) port 5000 (#0) > GET /v3/auth/tokens HTTP/1.1 > Host: openstackcontroller:5000 > User-Agent: curl/7.64.0 > Accept: */* > < HTTP/1.1 401 Unauthorized < Date: Thu, 28 Feb 2019 02:14:24 GMT < Server: Apache/2.4.18 (Ubuntu) < Vary: X-Auth-Token < X-Distribution: Ubuntu < x-openstack-request-id: req-c14a9782-27eb-4c6c-ac39-d6f05c695b02 < WWW-Authenticate: Keystone uri=\"http://openstackcontroller:5000\" < Content-Length: 114 < Content-Type: application/json < * Connection #0 to host openstackcontroller left intact {\"error\": {\"message\": \"The request you have made requires authentication.\", \"code\": 401, \"title\": \"Unauthorized\"}} [convex@convexlens ~]$ curl http://openstackcontroller:5000/v3/auth/tokens -H \"Content-Type: application/json\" -d ' > { > \"auth\": { > \"identity\": { > \"methods\": [ > \"password\" > ], > \"password\": { > \"user\": { > \"name\": \"admin\", > \"domain\": { > \"name\": \"Default\" > }, > \"password\": \"Huawei@123\" > } > } > } > } > } > ' -vv * Trying 10.10.1.11... * TCP_NODELAY set * Connected to openstackcontroller (10.10.1.11) port 5000 (#0) > POST /v3/auth/tokens HTTP/1.1 > Host: openstackcontroller:5000 > User-Agent: curl/7.64.0 > Accept: */* > Content-Type: application/json > Content-Length: 387 > * upload completely sent off: 387 out of 387 bytes < HTTP/1.1 201 Created < Date: Thu, 28 Feb 2019 02:26:46 GMT < Server: Apache/2.4.18 (Ubuntu) < X-Subject-Token: gAAAAABcd0bmAljPs21wpDRWC_2rarby8eFaj9CzhdFSjPXP00udJD86bLYrEK76y-nAdIGfAPOXDdTgt3ZP1PeQdpjVz83hLotvZs_OegVQ10L8RF7_d8GJ7dNbVw6C5-2XSS_NmJh6l9M9peY1kK_n6Brmxvxucg < Vary: X-Auth-Token < X-Distribution: Ubuntu < x-openstack-request-id: req-ad8b4e4a-4ede-4390-a05f-1f82861b612b < Content-Length: 312 < Content-Type: application/json < * Connection #0 to host openstackcontroller left intact {\"token\": {\"issued_at\": \"2019-02-28T02:26:46.000000Z\", \"audit_ids\": [\"4pG8Ec2VRBaEdVDN3J-JOg\"], \"methods\": [\"password\"], \"expires_at\": \"2019-02-28T03:26:46.000000Z\", \"user\": {\"password_expires_at\": null, \"domain\": {\"id\": \"default\", \"name\": \"Default\"}, \"id\": \"c9d0cfd2a873469fb642bf3102209bc2\", \"name\": \"admin\"}}} [convex@convexlens ~]$ curl http://openstackcontroller:5000/v3/auth/tokens -H \"Content-Type: application/json\" -d ' { \"auth\": { \"identity\": { \"methods\": [ \"password\" ], \"password\": { \"user\": { \"name\": \"admin\", \"domain\": { \"name\": \"Default\" }, \"password\": \"Huawei@123\" } } }, \"scope\": { \"project\": { \"domain\": { \"id\": \"default\" }, \"name\": \"admin\" } } } } ' -vv * Trying 10.10.1.11... * TCP_NODELAY set * Connected to openstackcontroller (10.10.1.11) port 5000 (#0) > POST /v3/auth/tokens HTTP/1.1 > Host: openstackcontroller:5000 > User-Agent: curl/7.64.0 > Accept: */* > Content-Type: application/json > Content-Length: 571 > * upload completely sent off: 571 out of 571 bytes < HTTP/1.1 201 Created < Date: Thu, 28 Feb 2019 02:40:42 GMT < Server: Apache/2.4.18 (Ubuntu) < X-Subject-Token: gAAAAABcd0orofuCCoqUAx9BYmlm152i7M8Ha6HNpredrCJ-nbsjoMXYtqkHUpRecJNkAjtXpBJDDzCdizfuEaOmOpYr6I73pW6eShQRWrsOcW5PiSQ7ppqxbNFVyKuvb8NTWc4OK2neEJnzzfuBXtdEepvqjvPxRDmA1M9KfKPv3ApkQiAQIYc < Vary: X-Auth-Token < X-Distribution: Ubuntu < x-openstack-request-id: req-1cd054f0-ac05-4020-bbe7-797479b1dcfb < Content-Length: 7754 < Content-Type: application/json < {\"token\": {\"is_domain\": false, \"methods\": [\"password\"], \"roles\": [{\"id\": \"57fe6524c5cb4bac81c92c1870f622fc\", \"name\": \"admin\"}], \"expires_at\": \"2019-02-28T03:40:43.000000Z\", \"project\": {\"domain\": {\"id\": \"default\", \"name\": \"Default\"}, \"id\": \"b1681bade14f474391a986c72813ffeb\", \"name\": \"admin\"}, \"catalog\": [{\"endpoints\": [{\"region_id\": \"RegionOne\", \"url\": \"http://controller:5000/v3/\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"59ba7def0252479cb38256f2697ad5f1\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:5000/v3/\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"806f612dff2f4f269997ad9b8250535e\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:5000/v3/\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"90264fbf7d304707a37970488e868111\"}], \"type\": \"identity\", \"id\": \"1938e5ed4bf84c62a2bc519fa6bffa3e\", \"name\": \"keystone\"}, {\"endpoints\": [{\"region_id\": \"RegionOne\", \"url\": \"http://controller:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"01e7a5db84774e96a49621b0e1f4fb18\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"16e626e3e0054031ae77d613a35bd24b\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"bb32c21917164edfa6d201ab04f30e4a\"}], \"type\": \"cloudformation\", \"id\": \"1cea79d850fb40bb93ef67253f5cc5d5\", \"name\": \"heat-cfn\"}, {\"endpoints\": [{\"region_id\": \"RegionOne\", \"url\": \"http://controller:8786/v1/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"91440510dd434f88afc247240850483e\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8786/v1/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"a19fc02c4e244183a7522c682ccbc997\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8786/v1/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"bdc32040aa7941bc88dd7bdb063e035d\"}], \"type\": \"share\", \"id\": \"35149a826232440590b713d38fc8f9c6\", \"name\": \"manila\"}, {\"endpoints\": [{\"region_id\": \"RegionOne\", \"url\": \"http://controller:8776/v3/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"458aae60c99048a69b01c48000bd082e\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8776/v3/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"4afeb452bb054dc49a41770695f390fd\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8776/v3/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"f6ec96e202af41d58716b8e530541d5d\"}], \"type\": \"volumev3\", \"id\": \"4acb7dd4232b4798b8db11c18d885c4d\", \"name\": \"cinderv3\"}, {\"endpoints\": [{\"region_id\": \"RegionOne\", \"url\": \"http://controller:9696\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"13bb8ff103334849bc8085a361118fdc\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:9696\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"2d10cde24b5848d0bc21ca2b2ae9274a\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:9696\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"adb699438a2a49d4addc068cced2be2d\"}], \"type\": \"network\", \"id\": \"5b02c0055f4f410b9595a211a3fe1738\", \"name\": \"neutron\"}, {\"endpoints\": [{\"region_id\": \"RegionOne\", \"url\": \"http://controller:8080/v1/AUTH_b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"0b68baebf4694c39923b78c206ddcdc1\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8080/v1/AUTH_b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"86b6d45493ef4bc9939fedb7127894cc\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8080/v1\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"d4dcfaa0148a484b9b93994a1d228cbb\"}], \"type\": \"object-store\", \"id\": \"74fb7c330c2441108628c20c129991bf\", \"name\": \"swift\"}, {\"endpoints\": [{\"region_id\": \"RegionOne\", \"url\": \"http://controller:8774/v2.1\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"097cce9561c54f07b542ec49101fc94e\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8774/v2.1\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"c26740fdcdd14dfcbc46b17e13487e59\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8774/v2.1\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"ce0210160d8a4bcb898af2c540acde9a\"}], \"type\": \"compute\", \"id\": \"891234806c30497599c1b4474e5b40d4\", \"name\": \"nova\"}, {\"endpoints\": [{\"region_id\": \"RegionOne\", \"url\": \"http://controller:8776/v2/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"09cef6f62c914db3ae1b9d52480de31c\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8776/v2/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"d3b79cb455a147418c582400d5bdd18d\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8776/v2/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"ecf864a416294719a40bcdbf9000fb26\"}], \"type\": \"volumev2\", \"id\": \"97f7dd8a1b1446659b8ffd97d8aba8ff\", \"name\": \"cinderv2\"}, {\"endpoints\": [{\"region_id\": \"RegionOne\", \"url\": \"http://controller:8786/v2/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"196987ed28ef463e8bb3e60d3b45c428\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8786/v2/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"1c40192d08114936af027eed787372ec\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8786/v2/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"485568ce635a4d659615abb3a92848c2\"}], \"type\": \"sharev2\", \"id\": \"983b0fdc8efd43a5bc05e0c6df7bed0f\", \"name\": \"manilav2\"}, {\"endpoints\": [{\"region_id\": \"RegionOne\", \"url\": \"http://controller:8778\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"0d716ddf2e3c46ed84cc2a004e5ca283\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8778\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"7d4029f63603474498339fb08fe31300\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8778\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"ace167fb5c6149c898a2b313078546b0\"}], \"type\": \"placement\", \"id\": \"a81f03a6391b4f199f7fadd233e81006\", \"name\": \"placement\"}, {\"endpoints\": [{\"region_id\": \"RegionOne\", \"url\": \"http://controller:9292\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"5d8107ec2cd3419089ffd192d846130c\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:9292\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"9c01f0a5a0f6458b9434f7c965aa03e0\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:9292\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"d879cbe07c5544d1b405323b9115e2ee\"}], \"type\": \"image\", \"id\": \"abbaaaf471e74411b921fec662834863\", \"name\": \"glance\"}, {\"endpoints\": [{\"region_id\": \"RegionOne\", \"url\": \"http://controller:8004/v1/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"0f0bf8bcd76f45e5b4229245baee97e6\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8004/v1/b1681bade14f474391a986c72813ffeb\", \"reg* Connection #0 to host openstackcontroller left intact ion\": \"RegionOne\", \"interface\": \"public\", \"id\": \"1e13ef76dc254f868a5e5b9dcdd93166\"}, {\"region_id\": \"RegionOne\", \"url\": \"http://controller:8004/v1/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"8ec1e69f7a2d4fcca50e866b84cbc92c\"}], \"type\": \"orchestration\", \"id\": \"f60cc9178f6f4039afa1d65090408f94\", \"name\": \"heat\"}], \"user\": {\"password_expires_at\": null, \"domain\": {\"id\": \"default\", \"name\": \"Default\"}, \"id\": \"c9d0cfd2a873469fb642bf3102209bc2\", \"name\": \"admin\"}, \"audit_ids\": [\"osHko8yKRWSh7LcDt2TGEQ\"], \"issued_at\": \"2019-02-28T02:40:43.000000Z\"}} [convex@convexlens ~]$ curl http://openstackcontroller:5000/v3/auth/tokens -H \"Content-Type: application/json\" -d ' { \"auth\": { \"identity\": { \"methods\": [ \"password\" ], \"password\": { \"user\": { \"name\": \"admin\", \"domain\": { \"name\": \"Default\" }, \"password\": \"Huawei@123\" } } }, \"scope\": { \"project\": { \"domain\": { \"id\": \"default\" }, \"name\": \"admin\" } } } } ' | python -m json.tool % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 8325 100 7754 100 571 19193 1413 --:--:-- --:--:-- --:--:-- 20606 { \"token\": { \"is_domain\": false, \"methods\": [ \"password\" ], \"roles\": [ { \"id\": \"57fe6524c5cb4bac81c92c1870f622fc\", \"name\": \"admin\" } ], \"expires_at\": \"2019-02-28T03:43:05.000000Z\", \"project\": { \"domain\": { \"id\": \"default\", \"name\": \"Default\" }, \"id\": \"b1681bade14f474391a986c72813ffeb\", \"name\": \"admin\" }, \"catalog\": [ { \"endpoints\": [ { \"region_id\": \"RegionOne\", \"url\": \"http://controller:5000/v3/\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"59ba7def0252479cb38256f2697ad5f1\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:5000/v3/\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"806f612dff2f4f269997ad9b8250535e\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:5000/v3/\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"90264fbf7d304707a37970488e868111\" } ], \"type\": \"identity\", \"id\": \"1938e5ed4bf84c62a2bc519fa6bffa3e\", \"name\": \"keystone\" }, { \"endpoints\": [ { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"01e7a5db84774e96a49621b0e1f4fb18\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"16e626e3e0054031ae77d613a35bd24b\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8000/v1\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"bb32c21917164edfa6d201ab04f30e4a\" } ], \"type\": \"cloudformation\", \"id\": \"1cea79d850fb40bb93ef67253f5cc5d5\", \"name\": \"heat-cfn\" }, { \"endpoints\": [ { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8786/v1/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"91440510dd434f88afc247240850483e\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8786/v1/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"a19fc02c4e244183a7522c682ccbc997\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8786/v1/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"bdc32040aa7941bc88dd7bdb063e035d\" } ], \"type\": \"share\", \"id\": \"35149a826232440590b713d38fc8f9c6\", \"name\": \"manila\" }, { \"endpoints\": [ { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8776/v3/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"458aae60c99048a69b01c48000bd082e\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8776/v3/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"4afeb452bb054dc49a41770695f390fd\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8776/v3/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"f6ec96e202af41d58716b8e530541d5d\" } ], \"type\": \"volumev3\", \"id\": \"4acb7dd4232b4798b8db11c18d885c4d\", \"name\": \"cinderv3\" }, { \"endpoints\": [ { \"region_id\": \"RegionOne\", \"url\": \"http://controller:9696\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"13bb8ff103334849bc8085a361118fdc\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:9696\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"2d10cde24b5848d0bc21ca2b2ae9274a\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:9696\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"adb699438a2a49d4addc068cced2be2d\" } ], \"type\": \"network\", \"id\": \"5b02c0055f4f410b9595a211a3fe1738\", \"name\": \"neutron\" }, { \"endpoints\": [ { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8080/v1/AUTH_b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"0b68baebf4694c39923b78c206ddcdc1\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8080/v1/AUTH_b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"86b6d45493ef4bc9939fedb7127894cc\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8080/v1\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"d4dcfaa0148a484b9b93994a1d228cbb\" } ], \"type\": \"object-store\", \"id\": \"74fb7c330c2441108628c20c129991bf\", \"name\": \"swift\" }, { \"endpoints\": [ { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8774/v2.1\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"097cce9561c54f07b542ec49101fc94e\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8774/v2.1\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"c26740fdcdd14dfcbc46b17e13487e59\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8774/v2.1\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"ce0210160d8a4bcb898af2c540acde9a\" } ], \"type\": \"compute\", \"id\": \"891234806c30497599c1b4474e5b40d4\", \"name\": \"nova\" }, { \"endpoints\": [ { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8776/v2/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"09cef6f62c914db3ae1b9d52480de31c\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8776/v2/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"d3b79cb455a147418c582400d5bdd18d\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8776/v2/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"ecf864a416294719a40bcdbf9000fb26\" } ], \"type\": \"volumev2\", \"id\": \"97f7dd8a1b1446659b8ffd97d8aba8ff\", \"name\": \"cinderv2\" }, { \"endpoints\": [ { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8786/v2/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"196987ed28ef463e8bb3e60d3b45c428\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8786/v2/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"1c40192d08114936af027eed787372ec\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8786/v2/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"485568ce635a4d659615abb3a92848c2\" } ], \"type\": \"sharev2\", \"id\": \"983b0fdc8efd43a5bc05e0c6df7bed0f\", \"name\": \"manilav2\" }, { \"endpoints\": [ { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8778\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"0d716ddf2e3c46ed84cc2a004e5ca283\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8778\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"7d4029f63603474498339fb08fe31300\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8778\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"ace167fb5c6149c898a2b313078546b0\" } ], \"type\": \"placement\", \"id\": \"a81f03a6391b4f199f7fadd233e81006\", \"name\": \"placement\" }, { \"endpoints\": [ { \"region_id\": \"RegionOne\", \"url\": \"http://controller:9292\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"5d8107ec2cd3419089ffd192d846130c\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:9292\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"9c01f0a5a0f6458b9434f7c965aa03e0\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:9292\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"d879cbe07c5544d1b405323b9115e2ee\" } ], \"type\": \"image\", \"id\": \"abbaaaf471e74411b921fec662834863\", \"name\": \"glance\" }, { \"endpoints\": [ { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8004/v1/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"internal\", \"id\": \"0f0bf8bcd76f45e5b4229245baee97e6\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8004/v1/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"1e13ef76dc254f868a5e5b9dcdd93166\" }, { \"region_id\": \"RegionOne\", \"url\": \"http://controller:8004/v1/b1681bade14f474391a986c72813ffeb\", \"region\": \"RegionOne\", \"interface\": \"admin\", \"id\": \"8ec1e69f7a2d4fcca50e866b84cbc92c\" } ], \"type\": \"orchestration\", \"id\": \"f60cc9178f6f4039afa1d65090408f94\", \"name\": \"heat\" } ], \"user\": { \"password_expires_at\": null, \"domain\": { \"id\": \"default\", \"name\": \"Default\" }, \"id\": \"c9d0cfd2a873469fb642bf3102209bc2\", \"name\": \"admin\" }, \"audit_ids\": [ \"9nB_54LCTLuiKUWTgyqeIg\" ], \"issued_at\": \"2019-02-28T02:43:05.000000Z\" } }","title":"curl build openstackRESTAPI"},{"location":"Daily/2019/03/Event-driven programming/","text":"Event-driven programming \u200b \u4e8b\u4ef6\u9a71\u52a8\u7a0b\u5e8f\u8bbe\u8ba1\uff08\u82f1\u8bed\uff1aEvent-driven programming\uff09\u662f\u4e00\u79cd\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u6a21\u578b\u3002\u8fd9\u79cd\u6a21\u578b\u7684\u7a0b\u5e8f\u8fd0\u884c\u6d41\u7a0b\u662f\u7531\u7528\u6237\u7684\u52a8\u4f5c\uff08\u5982\u9f20\u6807\u7684\u6309\u952e\uff0c\u952e\u76d8\u7684\u6309\u952e\u52a8\u4f5c\uff09\u6216\u8005\u662f\u7531\u5176\u4ed6\u7a0b\u5e8f\u7684\u6d88\u606f\u6765\u51b3\u5b9a\u7684\u3002\u76f8\u5bf9\u4e8e\u6279\u5904\u7406\u7a0b\u5e8f\u8bbe\u8ba1\uff08batch programming\uff09\u800c\u8a00\uff0c\u7a0b\u5e8f\u8fd0\u884c\u7684\u6d41\u7a0b\u662f\u7531\u7a0b\u5e8f\u5458\u6765\u51b3\u5b9a\u3002\u6279\u91cf\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u5728\u521d\u7ea7\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u5b66\u8bfe\u7a0b\u4e0a\u662f\u4e00\u79cd\u65b9\u5f0f\u3002\u7136\u800c\uff0c\u4e8b\u4ef6\u9a71\u52a8\u7a0b\u5e8f\u8bbe\u8ba1\u8fd9\u79cd\u8bbe\u8ba1\u6a21\u578b\u662f\u5728\u4ea4\u4e92\u7a0b\u5e8f\uff08Interactive program\uff09\u7684\u60c5\u51b5\u4e0b\u5b55\u80b2\u800c\u751f\u7684\u3002 \u200b \u200b \u53d6\u4ee3\u4f20\u7edf\u4e0a\u4e00\u6b21\u7b49\u5f85\u4e00\u4e2a\u5b8c\u6574\u7684\u6307\u4ee4\u7136\u540e\u518d\u505a\u8fd0\u884c\u7684\u65b9\u5f0f\uff0c\u4e8b\u4ef6\u9a71\u52a8\u7a0b\u5e8f\u6a21\u578b\u4e0b\u7684\u7cfb\u7edf\uff0c\u57fa\u672c\u4e0a\u7684\u67b6\u6784\u662f\u9884\u5148\u8bbe\u8ba1\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u6240\u5f62\u6210\u7684\u7a0b\u5e8f\uff0c\u8fd9\u4e2a\u4e8b\u4ef6\u5faa\u73af\u7a0b\u5e8f\u4e0d\u65ad\u5730\u68c0\u67e5\u5f53\u524d\u8981\u5904\u7406\u7684\u4fe1\u606f\uff0c\u6839\u636e\u8981\u5904\u7406\u7684\u4fe1\u606f\u8fd0\u884c\u4e00\u4e2a\u89e6\u53d1\u51fd\u6570\u8fdb\u884c\u5fc5\u8981\u7684\u5904\u7406\u3002\u5176\u4e2d\u8fd9\u4e2a\u5916\u90e8\u4fe1\u606f\u53ef\u80fd\u6765\u81ea\u4e00\u4e2a\u76ee\u5f55\u5939\u4e2d\u7684\u6587\u4ef6\uff0c\u53ef\u80fd\u6765\u81ea\u952e\u76d8\u6216\u9f20\u6807\u7684\u52a8\u4f5c\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u65f6\u95f4\u4e8b\u4ef6\u3002 \u5bf9\u4e00\u4e2a\u4e8b\u4ef6\u9a71\u52a8\uff08event driven\uff09\u7cfb\u7edf\u8fdb\u884c\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u56e0\u6b64\u53ef\u4ee5\u89c6\u4e3a\u6539\u5199\u7cfb\u7edf\u9ed8\u8ba4\u89e6\u53d1\u51fd\u6570\u7684\u884c\u4e3a\uff0c\u6765\u5339\u914d\u81ea\u5df1\u9700\u8981\u7684\u4e00\u79cd\u52a8\u4f5c\u3002\u8f93\u5165\u7684\u4e8b\u4ef6\u53ef\u4ee5\u653e\u8fdb\u4e8b\u4ef6\u5faa\u73af\u6216\u8005\u662f\u7ecf\u7531\u5df2\u7ecf\u6ce8\u518c\u7684\u4e2d\u65ad\u5904\u7406\u5668\u6765\u4e0e\u786c\u4ef6\u4e8b\u4ef6\u4ea4\u4e92\uff1b\u800c\u8bb8\u591a\u7684\u8f6f\u4ef6\u7cfb\u7edf\u4f7f\u7528\u4e86\u6df7\u548c\u8fd9\u4e24\u79cd\u6280\u672f\u7684\u5904\u7406\u3002\u9884\u5148\u8bbe\u8ba1\u597d\u7684\u7b97\u6cd5\u786e\u5b9a\u4e86\u4e00\u4ef6\u4e8b\uff0c\u90a3\u5c31\u662f\u5f53\u4ed6\u4eec\u88ab\u9700\u8981\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5728\u9002\u5f53\u7684\u65f6\u673a\u88ab\u89e6\u53d1\u3002\u4e5f\u56e0\u6b64\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6a21\u62df\u4e2d\u65ad\u9a71\u52a8\u73af\u5883\uff08interrupt driven environment\uff09\u7684\u8f6f\u4ef6\u62bd\u8c61\u67b6\u6784\u3002\u4e8b\u4ef6\u9a71\u52a8\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u672c\u4e0a\u5305\u542b\u4e86\u8bb8\u591a\u5c0f\u7a0b\u5e8f\u7247\u6bb5\uff0c\u8fd9\u4e9b\u5c0f\u7a0b\u5e8f\u7247\u6bb5\u88ab\u79f0\u4e3a\u4e8b\u4ef6\u5904\u7406\u5668\u5e76\u4e14\u88ab\u7528\u6765\u56de\u5e94\u5916\u90e8\u7684\u4e8b\u4ef6\u4e0e\u5206\u53d1\u4e8b\u4ef6\u3002\u901a\u5e38\u5c1a\u672a\u88ab\u4e8b\u4ef6\u5904\u7406\u5668\u5904\u7406\u7684\u4e8b\u4ef6\uff0c\u90fd\u4f1a\u88ab\u7cfb\u7edf\u653e\u5728\u4e00\u4e2a\u79f0\u4e3a\u4e8b\u4ef6\u961f\u5217\u7684\u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u7b49\u5f85\u88ab\u5904\u7406\u3002 \u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u4e8b\u4ef6\u5904\u7406\u5668\u53ef\u4ee5\u81ea\u5df1\u89e6\u53d1\u4e8b\u4ef6\uff0c\u56e0\u6b64\u4e5f\u53ef\u80fd\u5f62\u6210\u4e00\u4e2a\u4e8b\u4ef6\u4e32\u3002 \u4e8b\u4ef6\u9a71\u52a8\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u7740\u91cd\u4e8e\u5f39\u6027\u4ee5\u53ca\u5f02\u6b65\u5316\u4e0a\u9762\uff0c\u5e76\u4e14\u4f01\u56fe\u5c3d\u53ef\u80fd\u7684modeless\u3002 \u56fe\u5f62\u7528\u6237\u754c\u9762\u8fd9\u7c7b\u7a0b\u5e8f\u5c31\u662f\u5178\u578b\u7684\u4e8b\u4ef6\u9a71\u52a8\u8bbe\u8ba1\u65b9\u5f0f\u3002 \u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf\u662f\u4e8b\u4ef6\u9a71\u52a8\u7a0b\u5e8f\u7684\u5178\u578b\u793a\u4f8b\u3002\u5728\u64cd\u4f5c\u7cfb\u7edf\u7684\u6700\u5e95\u5c42\uff0c\u4e2d\u65ad\u5904\u7406\u5668\u7684\u52a8\u4f5c\u5c31\u50cf\u662f\u786c\u4ef6\u4e8b\u4ef6\u7684\u76f4\u63a5\u5904\u7406\u5668\uff0c\u642d\u914d\u7740 CPU \u8fd0\u884c\u5206\u914d\u4e8b\u4ef6\u89c4\u5219\u52a8\u4f5c\u3002\u5bf9\u8f6f\u4ef6\u8fdb\u7a0b\u800c\u8a00\uff0c\u57fa\u672c\u4e0a\u64cd\u4f5c\u7cfb\u7edf\u53ef\u89c6\u4e3a\u4e00\u4e2a\u4e8b\u4ef6\u5206\u914d\u5668\uff0c\u53d1\u9001\u6570\u636e\u548c\u8f6f\u4ef6\u4e2d\u65ad\u7ed9\u7528\u6237\u81ea\u5df1\u5199\u7684\u8f6f\u4ef6\u8fdb\u7a0b\u3002 \u4e0b\u9762\u662f\u4e24\u4e2a\u6570\u76f8\u52a0\u7684\u793a\u4f8b\uff0c\u5206\u522b\u7528\u6279\u91cf\u7248\u672c\u4e0e\u4e8b\u4ef6\u9a71\u52a8\u7248\u672c\u6765\u64b0\u5199: \u6279\u91cf\u7248\u672c read a number (from the keyboard) and store it in variable A[0] read a number (from the keyboard) and store it in variable A[1] print A[0]+A[1] \u4e8b\u4ef6\u9a71\u52a8\u7248\u672c set counter K to 0 repeat { if a number has been entered (from the keyboard) { store in A[K] and increment K if K equals 2 print A[0]+A[1] and reset K to 0 } }","title":"Event driven programming"},{"location":"Daily/2019/03/Event-driven programming/#event-driven-programming","text":"\u200b \u4e8b\u4ef6\u9a71\u52a8\u7a0b\u5e8f\u8bbe\u8ba1\uff08\u82f1\u8bed\uff1aEvent-driven programming\uff09\u662f\u4e00\u79cd\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u6a21\u578b\u3002\u8fd9\u79cd\u6a21\u578b\u7684\u7a0b\u5e8f\u8fd0\u884c\u6d41\u7a0b\u662f\u7531\u7528\u6237\u7684\u52a8\u4f5c\uff08\u5982\u9f20\u6807\u7684\u6309\u952e\uff0c\u952e\u76d8\u7684\u6309\u952e\u52a8\u4f5c\uff09\u6216\u8005\u662f\u7531\u5176\u4ed6\u7a0b\u5e8f\u7684\u6d88\u606f\u6765\u51b3\u5b9a\u7684\u3002\u76f8\u5bf9\u4e8e\u6279\u5904\u7406\u7a0b\u5e8f\u8bbe\u8ba1\uff08batch programming\uff09\u800c\u8a00\uff0c\u7a0b\u5e8f\u8fd0\u884c\u7684\u6d41\u7a0b\u662f\u7531\u7a0b\u5e8f\u5458\u6765\u51b3\u5b9a\u3002\u6279\u91cf\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u5728\u521d\u7ea7\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u5b66\u8bfe\u7a0b\u4e0a\u662f\u4e00\u79cd\u65b9\u5f0f\u3002\u7136\u800c\uff0c\u4e8b\u4ef6\u9a71\u52a8\u7a0b\u5e8f\u8bbe\u8ba1\u8fd9\u79cd\u8bbe\u8ba1\u6a21\u578b\u662f\u5728\u4ea4\u4e92\u7a0b\u5e8f\uff08Interactive program\uff09\u7684\u60c5\u51b5\u4e0b\u5b55\u80b2\u800c\u751f\u7684\u3002 \u200b \u200b \u53d6\u4ee3\u4f20\u7edf\u4e0a\u4e00\u6b21\u7b49\u5f85\u4e00\u4e2a\u5b8c\u6574\u7684\u6307\u4ee4\u7136\u540e\u518d\u505a\u8fd0\u884c\u7684\u65b9\u5f0f\uff0c\u4e8b\u4ef6\u9a71\u52a8\u7a0b\u5e8f\u6a21\u578b\u4e0b\u7684\u7cfb\u7edf\uff0c\u57fa\u672c\u4e0a\u7684\u67b6\u6784\u662f\u9884\u5148\u8bbe\u8ba1\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u6240\u5f62\u6210\u7684\u7a0b\u5e8f\uff0c\u8fd9\u4e2a\u4e8b\u4ef6\u5faa\u73af\u7a0b\u5e8f\u4e0d\u65ad\u5730\u68c0\u67e5\u5f53\u524d\u8981\u5904\u7406\u7684\u4fe1\u606f\uff0c\u6839\u636e\u8981\u5904\u7406\u7684\u4fe1\u606f\u8fd0\u884c\u4e00\u4e2a\u89e6\u53d1\u51fd\u6570\u8fdb\u884c\u5fc5\u8981\u7684\u5904\u7406\u3002\u5176\u4e2d\u8fd9\u4e2a\u5916\u90e8\u4fe1\u606f\u53ef\u80fd\u6765\u81ea\u4e00\u4e2a\u76ee\u5f55\u5939\u4e2d\u7684\u6587\u4ef6\uff0c\u53ef\u80fd\u6765\u81ea\u952e\u76d8\u6216\u9f20\u6807\u7684\u52a8\u4f5c\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u65f6\u95f4\u4e8b\u4ef6\u3002 \u5bf9\u4e00\u4e2a\u4e8b\u4ef6\u9a71\u52a8\uff08event driven\uff09\u7cfb\u7edf\u8fdb\u884c\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u56e0\u6b64\u53ef\u4ee5\u89c6\u4e3a\u6539\u5199\u7cfb\u7edf\u9ed8\u8ba4\u89e6\u53d1\u51fd\u6570\u7684\u884c\u4e3a\uff0c\u6765\u5339\u914d\u81ea\u5df1\u9700\u8981\u7684\u4e00\u79cd\u52a8\u4f5c\u3002\u8f93\u5165\u7684\u4e8b\u4ef6\u53ef\u4ee5\u653e\u8fdb\u4e8b\u4ef6\u5faa\u73af\u6216\u8005\u662f\u7ecf\u7531\u5df2\u7ecf\u6ce8\u518c\u7684\u4e2d\u65ad\u5904\u7406\u5668\u6765\u4e0e\u786c\u4ef6\u4e8b\u4ef6\u4ea4\u4e92\uff1b\u800c\u8bb8\u591a\u7684\u8f6f\u4ef6\u7cfb\u7edf\u4f7f\u7528\u4e86\u6df7\u548c\u8fd9\u4e24\u79cd\u6280\u672f\u7684\u5904\u7406\u3002\u9884\u5148\u8bbe\u8ba1\u597d\u7684\u7b97\u6cd5\u786e\u5b9a\u4e86\u4e00\u4ef6\u4e8b\uff0c\u90a3\u5c31\u662f\u5f53\u4ed6\u4eec\u88ab\u9700\u8981\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5728\u9002\u5f53\u7684\u65f6\u673a\u88ab\u89e6\u53d1\u3002\u4e5f\u56e0\u6b64\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6a21\u62df\u4e2d\u65ad\u9a71\u52a8\u73af\u5883\uff08interrupt driven environment\uff09\u7684\u8f6f\u4ef6\u62bd\u8c61\u67b6\u6784\u3002\u4e8b\u4ef6\u9a71\u52a8\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u672c\u4e0a\u5305\u542b\u4e86\u8bb8\u591a\u5c0f\u7a0b\u5e8f\u7247\u6bb5\uff0c\u8fd9\u4e9b\u5c0f\u7a0b\u5e8f\u7247\u6bb5\u88ab\u79f0\u4e3a\u4e8b\u4ef6\u5904\u7406\u5668\u5e76\u4e14\u88ab\u7528\u6765\u56de\u5e94\u5916\u90e8\u7684\u4e8b\u4ef6\u4e0e\u5206\u53d1\u4e8b\u4ef6\u3002\u901a\u5e38\u5c1a\u672a\u88ab\u4e8b\u4ef6\u5904\u7406\u5668\u5904\u7406\u7684\u4e8b\u4ef6\uff0c\u90fd\u4f1a\u88ab\u7cfb\u7edf\u653e\u5728\u4e00\u4e2a\u79f0\u4e3a\u4e8b\u4ef6\u961f\u5217\u7684\u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u7b49\u5f85\u88ab\u5904\u7406\u3002 \u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u4e8b\u4ef6\u5904\u7406\u5668\u53ef\u4ee5\u81ea\u5df1\u89e6\u53d1\u4e8b\u4ef6\uff0c\u56e0\u6b64\u4e5f\u53ef\u80fd\u5f62\u6210\u4e00\u4e2a\u4e8b\u4ef6\u4e32\u3002 \u4e8b\u4ef6\u9a71\u52a8\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u7740\u91cd\u4e8e\u5f39\u6027\u4ee5\u53ca\u5f02\u6b65\u5316\u4e0a\u9762\uff0c\u5e76\u4e14\u4f01\u56fe\u5c3d\u53ef\u80fd\u7684modeless\u3002 \u56fe\u5f62\u7528\u6237\u754c\u9762\u8fd9\u7c7b\u7a0b\u5e8f\u5c31\u662f\u5178\u578b\u7684\u4e8b\u4ef6\u9a71\u52a8\u8bbe\u8ba1\u65b9\u5f0f\u3002 \u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf\u662f\u4e8b\u4ef6\u9a71\u52a8\u7a0b\u5e8f\u7684\u5178\u578b\u793a\u4f8b\u3002\u5728\u64cd\u4f5c\u7cfb\u7edf\u7684\u6700\u5e95\u5c42\uff0c\u4e2d\u65ad\u5904\u7406\u5668\u7684\u52a8\u4f5c\u5c31\u50cf\u662f\u786c\u4ef6\u4e8b\u4ef6\u7684\u76f4\u63a5\u5904\u7406\u5668\uff0c\u642d\u914d\u7740 CPU \u8fd0\u884c\u5206\u914d\u4e8b\u4ef6\u89c4\u5219\u52a8\u4f5c\u3002\u5bf9\u8f6f\u4ef6\u8fdb\u7a0b\u800c\u8a00\uff0c\u57fa\u672c\u4e0a\u64cd\u4f5c\u7cfb\u7edf\u53ef\u89c6\u4e3a\u4e00\u4e2a\u4e8b\u4ef6\u5206\u914d\u5668\uff0c\u53d1\u9001\u6570\u636e\u548c\u8f6f\u4ef6\u4e2d\u65ad\u7ed9\u7528\u6237\u81ea\u5df1\u5199\u7684\u8f6f\u4ef6\u8fdb\u7a0b\u3002 \u4e0b\u9762\u662f\u4e24\u4e2a\u6570\u76f8\u52a0\u7684\u793a\u4f8b\uff0c\u5206\u522b\u7528\u6279\u91cf\u7248\u672c\u4e0e\u4e8b\u4ef6\u9a71\u52a8\u7248\u672c\u6765\u64b0\u5199: \u6279\u91cf\u7248\u672c read a number (from the keyboard) and store it in variable A[0] read a number (from the keyboard) and store it in variable A[1] print A[0]+A[1] \u4e8b\u4ef6\u9a71\u52a8\u7248\u672c set counter K to 0 repeat { if a number has been entered (from the keyboard) { store in A[K] and increment K if K equals 2 print A[0]+A[1] and reset K to 0 } }","title":"Event-driven programming"},{"location":"Daily/2019/03/Openvswitch/","text":"Openvswitch vlan_mode manual: ovs-vswitchd.conf.db optional string, one of access, dot1q-tunnel, native-tagged, native-untagged, or trunk","title":"Openvswitch"},{"location":"Daily/2019/03/Openvswitch/#openvswitch","text":"","title":"Openvswitch"},{"location":"Daily/2019/03/Openvswitch/#vlan_mode","text":"manual: ovs-vswitchd.conf.db optional string, one of access, dot1q-tunnel, native-tagged, native-untagged, or trunk","title":"vlan_mode"},{"location":"Daily/2019/03/Portable Operating System Interface/","text":"Portable Operating System Interface(POSIX) \u53ef\u79fb\u690d\u64cd\u4f5c\u7cfb\u7edf\u63a5\u53e3\uff08\u82f1\u8bed\uff1aPortable Operating System Interface\uff0c\u7f29\u5199\u4e3aPOSIX\uff09\u662fIEEE\u4e3a\u8981\u5728\u5404\u79cdUNIX\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u8f6f\u4ef6\uff0c\u800c\u5b9a\u4e49API\u7684\u4e00\u7cfb\u5217\u4e92\u76f8\u5173\u8054\u7684\u6807\u51c6\u7684\u603b\u79f0\uff0c\u5176\u6b63\u5f0f\u79f0\u547c\u4e3aIEEE Std 1003\uff0c\u800c\u56fd\u9645\u6807\u51c6\u540d\u79f0\u4e3aISO/IEC 9945\u3002\u6b64\u6807\u51c6\u6e90\u4e8e\u4e00\u4e2a\u5927\u7ea6\u5f00\u59cb\u4e8e1985\u5e74\u7684\u9879\u76ee\u3002POSIX\u8fd9\u4e2a\u540d\u79f0\u662f\u7531\u7406\u67e5\u5fb7\u00b7\u65af\u6258\u66fc\uff08RMS\uff09\u5e94IEEE\u7684\u8981\u6c42\u800c\u63d0\u8bae\u7684\u4e00\u4e2a\u6613\u4e8e\u8bb0\u5fc6\u7684\u540d\u79f0\u3002\u5b83\u57fa\u672c\u4e0a\u662fPortable Operating System Interface\uff08\u53ef\u79fb\u690d\u64cd\u4f5c\u7cfb\u7edf\u63a5\u53e3\uff09\u7684\u7f29\u5199\uff0c\u800cX\u5219\u8868\u660e\u5176\u5bf9Unix API\u7684\u4f20\u627f\u3002 Linux\u57fa\u672c\u4e0a\u9010\u6b65\u5b9e\u73b0\u4e86POSIX\u517c\u5bb9\uff0c\u4f46\u5e76\u6ca1\u6709\u53c2\u52a0\u6b63\u5f0f\u7684POSIX\u8ba4\u8bc1\u3002 \u5fae\u8f6f\u7684Windows NT\u58f0\u79f0\u90e8\u5206\u5b9e\u73b0\u4e86POSIX\u6807\u51c6\u3002 \u5f53\u524d\u7684POSIX\u4e3b\u8981\u5206\u4e3a\u56db\u4e2a\u90e8\u5206[2]\uff1aBase Definitions\u3001System Interfaces\u3001Shell and Utilities\u548cRationale\u3002 Berkeley Softeware Distribution(BSD) \u4f2f\u514b\u5229\u8f6f\u4ef6\u5305\uff08\u82f1\u8bed\uff1aBerkeley Software Distribution\uff0c\u7f29\u5199\u4e3aBSD\uff09\uff0c\u4e5f\u88ab\u79f0\u4e3a\u4f2f\u514b\u5229Unix\uff08Berkeley Unix\uff09\uff0c\u662f\u4e00\u4e2a\u6d3e\u751f\u81eaUnix\uff08\u7c7bUnix\uff09\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c1970\u5e74\u4ee3\u7531\u4f2f\u514b\u5229\u52a0\u5dde\u5927\u5b66\u7684\u5b66\u751f\u6bd4\u5c14\u00b7\u4e54\u4f0a\uff08Bill Joy\uff09\u5f00\u521b\uff0c\u4e5f\u88ab\u7528\u6765\u4ee3\u8868\u5176\u6d3e\u751f\u51fa\u7684\u5404\u79cd\u5305\u3002","title":"Portable Operating System Interface"},{"location":"Daily/2019/03/Portable Operating System Interface/#portable-operating-system-interfaceposix","text":"\u53ef\u79fb\u690d\u64cd\u4f5c\u7cfb\u7edf\u63a5\u53e3\uff08\u82f1\u8bed\uff1aPortable Operating System Interface\uff0c\u7f29\u5199\u4e3aPOSIX\uff09\u662fIEEE\u4e3a\u8981\u5728\u5404\u79cdUNIX\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u8f6f\u4ef6\uff0c\u800c\u5b9a\u4e49API\u7684\u4e00\u7cfb\u5217\u4e92\u76f8\u5173\u8054\u7684\u6807\u51c6\u7684\u603b\u79f0\uff0c\u5176\u6b63\u5f0f\u79f0\u547c\u4e3aIEEE Std 1003\uff0c\u800c\u56fd\u9645\u6807\u51c6\u540d\u79f0\u4e3aISO/IEC 9945\u3002\u6b64\u6807\u51c6\u6e90\u4e8e\u4e00\u4e2a\u5927\u7ea6\u5f00\u59cb\u4e8e1985\u5e74\u7684\u9879\u76ee\u3002POSIX\u8fd9\u4e2a\u540d\u79f0\u662f\u7531\u7406\u67e5\u5fb7\u00b7\u65af\u6258\u66fc\uff08RMS\uff09\u5e94IEEE\u7684\u8981\u6c42\u800c\u63d0\u8bae\u7684\u4e00\u4e2a\u6613\u4e8e\u8bb0\u5fc6\u7684\u540d\u79f0\u3002\u5b83\u57fa\u672c\u4e0a\u662fPortable Operating System Interface\uff08\u53ef\u79fb\u690d\u64cd\u4f5c\u7cfb\u7edf\u63a5\u53e3\uff09\u7684\u7f29\u5199\uff0c\u800cX\u5219\u8868\u660e\u5176\u5bf9Unix API\u7684\u4f20\u627f\u3002 Linux\u57fa\u672c\u4e0a\u9010\u6b65\u5b9e\u73b0\u4e86POSIX\u517c\u5bb9\uff0c\u4f46\u5e76\u6ca1\u6709\u53c2\u52a0\u6b63\u5f0f\u7684POSIX\u8ba4\u8bc1\u3002 \u5fae\u8f6f\u7684Windows NT\u58f0\u79f0\u90e8\u5206\u5b9e\u73b0\u4e86POSIX\u6807\u51c6\u3002 \u5f53\u524d\u7684POSIX\u4e3b\u8981\u5206\u4e3a\u56db\u4e2a\u90e8\u5206[2]\uff1aBase Definitions\u3001System Interfaces\u3001Shell and Utilities\u548cRationale\u3002","title":"Portable Operating System Interface(POSIX)"},{"location":"Daily/2019/03/Portable Operating System Interface/#berkeley-softeware-distributionbsd","text":"\u4f2f\u514b\u5229\u8f6f\u4ef6\u5305\uff08\u82f1\u8bed\uff1aBerkeley Software Distribution\uff0c\u7f29\u5199\u4e3aBSD\uff09\uff0c\u4e5f\u88ab\u79f0\u4e3a\u4f2f\u514b\u5229Unix\uff08Berkeley Unix\uff09\uff0c\u662f\u4e00\u4e2a\u6d3e\u751f\u81eaUnix\uff08\u7c7bUnix\uff09\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c1970\u5e74\u4ee3\u7531\u4f2f\u514b\u5229\u52a0\u5dde\u5927\u5b66\u7684\u5b66\u751f\u6bd4\u5c14\u00b7\u4e54\u4f0a\uff08Bill Joy\uff09\u5f00\u521b\uff0c\u4e5f\u88ab\u7528\u6765\u4ee3\u8868\u5176\u6d3e\u751f\u51fa\u7684\u5404\u79cd\u5305\u3002","title":"Berkeley Softeware Distribution(BSD)"},{"location":"Daily/2019/03/RUID & EUID & SUID/","text":"RUID & EUID & SUID Real User ID(RUID) Effective User ID(EUID) Set User ID(SUID) [root@centos030501 /]# ls -l /usr/bin/passwd -rwsr-xr-x 1 root root 27832 Jun 10 2014 /usr/bin/passwd [root@centos030501 /]# ls -l /etc/shadow ---------- 1 root root 397 Dec 5 01:37 /etc/shadow \u5f53s\u8fd9\u4e2a\u6807\u5fd7\u51fa\u73b0\u5728\u62e5\u6709\u8005\u7684x\u6743\u9650\u4e0a\u65f6\uff0c\u6b64\u65f6\u5c31\u79f0\u4e3aSet UID\uff0c\u7b80\u79f0\u4e3aSUID\u7684\u7279\u6b8a\u6743\u9650\u3002 \u9650\u5236\u4e0e\u529f\u80fd\uff1a SUID \u6743\u9650\u4ec5\u5bf9\u4e8c\u8fdb\u5236\u7a0b\u5e8f(binary program)\u6709\u6548; \u6267\u884c\u8005\u5bf9\u5bf9\u4e8e\u8be5\u7a0b\u5e8f\u62e5\u6709x\u7684\u53ef\u6267\u884c\u6743\u9650 \u5f53\u8be5\u7a0b\u5e8f\u88ab\u6267\u884c\u65f6\uff0c\u6267\u884c\u8005\u5c06\u5177\u6709\u8be5\u7a0b\u5e8f\u62e5\u6709\u8005(owner)\u7684\u6743\u9650 \u8be5\u6743\u9650\u4ec5\u5728\u6267\u884c\u8be5\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u4e2d\u6709\u6548(run-time) Set Group ID(SGID) [root@study ~]# ll /usr/bin/locate /var/lib/mlocate/mlocate.db -rwx--s--x . 1 root slocate 40496 Jun 10 2014 /usr/bin/locate -rw-r----- . 1 root slocate 2349055 Jun 15 03:44 /var/lib/mlocate/mlocate.db \u4e0eSUID\u4e0d\u540c\uff0cSGID\u53ef\u4ee5\u9488\u5bf9\u6587\u4ef6\u6216\u76ee\u5f55\u6765\u8bbe\u5b9a\u3002 \u9488\u5bf9\u6587\u4ef6\u65f6\uff1a SGID \u5bf9\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u6709\u6548 \u7a0b\u5e8f\u6267\u884c\u8005\u5bf9\u4e8e\u8be5\u7a0b\u5e8f\u5177\u5907x\u7684\u6743\u9650 \u6267\u884c\u8005\u5728\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\u5c06\u4f1a\u83b7\u5f97\u8be5\u7a0b\u5e8f\u7ec4\u7684\u6743\u9650 \u9488\u5bf9\u76ee\u5f55\u65f6\uff1a \u4f7f\u7528\u8005\u82e5\u62e5\u6709\u8be5\u76ee\u5f55\u7684r\u4e0ex\u6743\u9650\uff0c\u8be5\u4f7f\u7528\u8005\u80fd\u8fdb\u884c\u6b64\u76ee\u5f55","title":"RUID & EUID & SUID"},{"location":"Daily/2019/03/RUID & EUID & SUID/#ruid-euid-suid","text":"","title":"RUID &amp; EUID &amp; SUID"},{"location":"Daily/2019/03/RUID & EUID & SUID/#real-user-idruid","text":"","title":"Real User ID(RUID)"},{"location":"Daily/2019/03/RUID & EUID & SUID/#effective-user-ideuid","text":"","title":"Effective User ID(EUID)"},{"location":"Daily/2019/03/RUID & EUID & SUID/#set-user-idsuid","text":"[root@centos030501 /]# ls -l /usr/bin/passwd -rwsr-xr-x 1 root root 27832 Jun 10 2014 /usr/bin/passwd [root@centos030501 /]# ls -l /etc/shadow ---------- 1 root root 397 Dec 5 01:37 /etc/shadow \u5f53s\u8fd9\u4e2a\u6807\u5fd7\u51fa\u73b0\u5728\u62e5\u6709\u8005\u7684x\u6743\u9650\u4e0a\u65f6\uff0c\u6b64\u65f6\u5c31\u79f0\u4e3aSet UID\uff0c\u7b80\u79f0\u4e3aSUID\u7684\u7279\u6b8a\u6743\u9650\u3002 \u9650\u5236\u4e0e\u529f\u80fd\uff1a SUID \u6743\u9650\u4ec5\u5bf9\u4e8c\u8fdb\u5236\u7a0b\u5e8f(binary program)\u6709\u6548; \u6267\u884c\u8005\u5bf9\u5bf9\u4e8e\u8be5\u7a0b\u5e8f\u62e5\u6709x\u7684\u53ef\u6267\u884c\u6743\u9650 \u5f53\u8be5\u7a0b\u5e8f\u88ab\u6267\u884c\u65f6\uff0c\u6267\u884c\u8005\u5c06\u5177\u6709\u8be5\u7a0b\u5e8f\u62e5\u6709\u8005(owner)\u7684\u6743\u9650 \u8be5\u6743\u9650\u4ec5\u5728\u6267\u884c\u8be5\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u4e2d\u6709\u6548(run-time)","title":"Set User ID(SUID)"},{"location":"Daily/2019/03/RUID & EUID & SUID/#set-group-idsgid","text":"[root@study ~]# ll /usr/bin/locate /var/lib/mlocate/mlocate.db -rwx--s--x . 1 root slocate 40496 Jun 10 2014 /usr/bin/locate -rw-r----- . 1 root slocate 2349055 Jun 15 03:44 /var/lib/mlocate/mlocate.db \u4e0eSUID\u4e0d\u540c\uff0cSGID\u53ef\u4ee5\u9488\u5bf9\u6587\u4ef6\u6216\u76ee\u5f55\u6765\u8bbe\u5b9a\u3002 \u9488\u5bf9\u6587\u4ef6\u65f6\uff1a SGID \u5bf9\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u6709\u6548 \u7a0b\u5e8f\u6267\u884c\u8005\u5bf9\u4e8e\u8be5\u7a0b\u5e8f\u5177\u5907x\u7684\u6743\u9650 \u6267\u884c\u8005\u5728\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\u5c06\u4f1a\u83b7\u5f97\u8be5\u7a0b\u5e8f\u7ec4\u7684\u6743\u9650 \u9488\u5bf9\u76ee\u5f55\u65f6\uff1a \u4f7f\u7528\u8005\u82e5\u62e5\u6709\u8be5\u76ee\u5f55\u7684r\u4e0ex\u6743\u9650\uff0c\u8be5\u4f7f\u7528\u8005\u80fd\u8fdb\u884c\u6b64\u76ee\u5f55","title":"Set Group ID(SGID)"},{"location":"Daily/2019/03/nginx/","text":"nginx nginx has one master process and several worker processes The main purpose of the master process is to read and evaluate configuration, and maintain worker process. Worker processes do actual processing of requests. nginx employs event-based model and OS-dependent mechanisms to efficiently distribute requests among worker processes. The number of worker processes is defined in the configuration file and may be fixed for a given configuration or automatically adjusted to the number of available CPU cores. ``` Syntax: worker_processes number | auto; Default: worker_processes 1; Context: main Defines the number of worker processes. The optimal value depends on many factors including (but not limited to) the number of CPU cores, the number of hard disk drives that store data, and load pattern. When one is in doubt, setting it to the number of available CPU cores would be a good start (the value \u201cauto\u201d will try to autodetect it). The auto parameter is supported starting from versions 1.3.8 and 1.2.5. ```","title":"Nginx"},{"location":"Daily/2019/03/nginx/#nginx","text":"nginx has one master process and several worker processes The main purpose of the master process is to read and evaluate configuration, and maintain worker process. Worker processes do actual processing of requests. nginx employs event-based model and OS-dependent mechanisms to efficiently distribute requests among worker processes. The number of worker processes is defined in the configuration file and may be fixed for a given configuration or automatically adjusted to the number of available CPU cores. ``` Syntax: worker_processes number | auto; Default: worker_processes 1; Context: main Defines the number of worker processes. The optimal value depends on many factors including (but not limited to) the number of CPU cores, the number of hard disk drives that store data, and load pattern. When one is in doubt, setting it to the number of available CPU cores would be a good start (the value \u201cauto\u201d will try to autodetect it). The auto parameter is supported starting from versions 1.3.8 and 1.2.5. ```","title":"nginx"},{"location":"Daily/2019/03/ps/","text":"Process status codes Here are the different vaules that ths s, stat and state output specifiers (header \"STAT\" or \"S\") will display to describe the state of a process: D uninterruptible sleep (usually IO) I Idle kernel thread R running or runnable (on run queue) S interruptible sleep (waiting for an event to complete) T stopped by job control signal t stopped by debugger during the tracing W paging (not valid since the 2.6.xx kernel) X dead (should never be seen) Z defunct (\"zombie\") process, terminated but not reaped by its parent For BSD formats and when the stat keyword is used, additional characters may be displayed: < high-priority (not nice to other users) N low-priority (nice to other users) L has pages locked into memory (for real-time and custom IO) s is a session leader l is multi-threaded (using CLONE_THREAD, like NPTL pthreads do) + is in the foreground process group","title":"Ps"},{"location":"Daily/2019/03/ps/#process-status-codes","text":"Here are the different vaules that ths s, stat and state output specifiers (header \"STAT\" or \"S\") will display to describe the state of a process: D uninterruptible sleep (usually IO) I Idle kernel thread R running or runnable (on run queue) S interruptible sleep (waiting for an event to complete) T stopped by job control signal t stopped by debugger during the tracing W paging (not valid since the 2.6.xx kernel) X dead (should never be seen) Z defunct (\"zombie\") process, terminated but not reaped by its parent For BSD formats and when the stat keyword is used, additional characters may be displayed: < high-priority (not nice to other users) N low-priority (nice to other users) L has pages locked into memory (for real-time and custom IO) s is a session leader l is multi-threaded (using CLONE_THREAD, like NPTL pthreads do) + is in the foreground process group","title":"Process status codes"},{"location":"Docker/Base/","text":"Base \u5206\u5c42\u6784\u5efa\u3001\u8054\u5408\u6302\u8f7d OCI = Open Container Initiative OCF = Open Container Format runC docker engine: docker daemon ```shell [root@contos01 ~]# systemctl status docker.service \u25cf docker.service - Docker Application Container Engine Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; vendor preset: disabled) Active: active (running) since Thu 2018-12-20 15:09:54 CST; 4h 3min ago Docs: https://docs.docker.com Main PID: 14564 (dockerd) Tasks: 46 Memory: 207.8M CGroup: /system.slice/docker.service \u251c\u250014564 /usr/bin/dockerd -H unix:// \u2514\u250014583 containerd --config /var/run/docker/containerd/containerd.toml --log-level info Dec 20 15:57:15 contos01.convex.me dockerd[14564]: time=\"2018-12-20T15:57:15.026531686+08:00\" level=info msg=\"shim reaped\" id=7ab44177cf146542c4d71f3ad0412c53a44d79cd27d83b0e2b8bc250dafbc743 Dec 20 15:57:15 contos01.convex.me dockerd[14564]: time=\"2018-12-20T15:57:15.036901315+08:00\" level=error msg=\"stream copy error: reading from a closed fifo\" Dec 20 15:57:15 contos01.convex.me dockerd[14564]: time=\"2018-12-20T15:57:15.123157588+08:00\" level=error msg=\"7ab44177cf146542c4d71f3ad0412c53a44d79cd27d83b0e2b8bc250dafbc743 cl...h container\" Dec 20 17:00:52 contos01.convex.me dockerd[14564]: time=\"2018-12-20T17:00:52.649367976+08:00\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/302c684...se pid=17016 Dec 20 17:00:52 contos01.convex.me dockerd[14564]: time=\"2018-12-20T17:00:52.936176345+08:00\" level=info msg=\"shim reaped\" id=302c68412c65a4114c6cf031eb7fbce7c81214135a1c246d3c8687a8d2f4cdbd Dec 20 17:00:52 contos01.convex.me dockerd[14564]: time=\"2018-12-20T17:00:52.946821463+08:00\" level=error msg=\"stream copy error: reading from a closed fifo\" Dec 20 17:00:53 contos01.convex.me dockerd[14564]: time=\"2018-12-20T17:00:53.052832751+08:00\" level=error msg=\"302c68412c65a4114c6cf031eb7fbce7c81214135a1c246d3c8687a8d2f4cdbd cl...h container\" Dec 20 17:00:55 contos01.convex.me dockerd[14564]: time=\"2018-12-20T17:00:55.865097754+08:00\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/501cf1e...se pid=17096 Dec 20 17:01:42 contos01.convex.me dockerd[14564]: time=\"2018-12-20T17:01:42.693676652+08:00\" level=info msg=\"shim reaped\" id=501cf1e4a21dd7a09664c6e0550d5c41dec906848ba7f7f35125d4e1d822bbc3 Dec 20 17:01:42 contos01.convex.me dockerd[14564]: time=\"2018-12-20T17:01:42.703946888+08:00\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/del....TaskDelete\" Hint: Some lines were ellipsized, use -l to show in full. ``` docker cli registry --> repository bootfs rootfs \u901a\u8fc7\u4e0b\u5217\u65b9\u5f0f\u4e4b\u4e00\u8fdb\u884c\u5206\u5c42\u6784\u5efa: aufs = advanced multi-layered unification filesystem overlayfs btrfs devicemapper vfs sponsor registry mirror registry vendor registry private registry \u9876\u5c42\u4ed3\u5e93\u3001\u7528\u6237\u4ed3\u5e93 \u6784\u5efaimage\u7684\u65b9\u5f0f\uff1a dockerfile --build--> docker image docker container commit automated builds docker network container archtypes: closed container bridged container joined container \u8054\u76df\u5f0f\u7f51\u7edc open container [root@contos01 docker]# docker network ls NETWORK ID NAME DRIVER SCOPE dd8cc6d04f30 bridge bridge local 9029db42227d host host local d9d05d163f23 none null local","title":"Base"},{"location":"Docker/Base/#base","text":"\u5206\u5c42\u6784\u5efa\u3001\u8054\u5408\u6302\u8f7d OCI = Open Container Initiative OCF = Open Container Format runC docker engine: docker daemon ```shell [root@contos01 ~]# systemctl status docker.service \u25cf docker.service - Docker Application Container Engine Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; vendor preset: disabled) Active: active (running) since Thu 2018-12-20 15:09:54 CST; 4h 3min ago Docs: https://docs.docker.com Main PID: 14564 (dockerd) Tasks: 46 Memory: 207.8M CGroup: /system.slice/docker.service \u251c\u250014564 /usr/bin/dockerd -H unix:// \u2514\u250014583 containerd --config /var/run/docker/containerd/containerd.toml --log-level info Dec 20 15:57:15 contos01.convex.me dockerd[14564]: time=\"2018-12-20T15:57:15.026531686+08:00\" level=info msg=\"shim reaped\" id=7ab44177cf146542c4d71f3ad0412c53a44d79cd27d83b0e2b8bc250dafbc743 Dec 20 15:57:15 contos01.convex.me dockerd[14564]: time=\"2018-12-20T15:57:15.036901315+08:00\" level=error msg=\"stream copy error: reading from a closed fifo\" Dec 20 15:57:15 contos01.convex.me dockerd[14564]: time=\"2018-12-20T15:57:15.123157588+08:00\" level=error msg=\"7ab44177cf146542c4d71f3ad0412c53a44d79cd27d83b0e2b8bc250dafbc743 cl...h container\" Dec 20 17:00:52 contos01.convex.me dockerd[14564]: time=\"2018-12-20T17:00:52.649367976+08:00\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/302c684...se pid=17016 Dec 20 17:00:52 contos01.convex.me dockerd[14564]: time=\"2018-12-20T17:00:52.936176345+08:00\" level=info msg=\"shim reaped\" id=302c68412c65a4114c6cf031eb7fbce7c81214135a1c246d3c8687a8d2f4cdbd Dec 20 17:00:52 contos01.convex.me dockerd[14564]: time=\"2018-12-20T17:00:52.946821463+08:00\" level=error msg=\"stream copy error: reading from a closed fifo\" Dec 20 17:00:53 contos01.convex.me dockerd[14564]: time=\"2018-12-20T17:00:53.052832751+08:00\" level=error msg=\"302c68412c65a4114c6cf031eb7fbce7c81214135a1c246d3c8687a8d2f4cdbd cl...h container\" Dec 20 17:00:55 contos01.convex.me dockerd[14564]: time=\"2018-12-20T17:00:55.865097754+08:00\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/501cf1e...se pid=17096 Dec 20 17:01:42 contos01.convex.me dockerd[14564]: time=\"2018-12-20T17:01:42.693676652+08:00\" level=info msg=\"shim reaped\" id=501cf1e4a21dd7a09664c6e0550d5c41dec906848ba7f7f35125d4e1d822bbc3 Dec 20 17:01:42 contos01.convex.me dockerd[14564]: time=\"2018-12-20T17:01:42.703946888+08:00\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/del....TaskDelete\" Hint: Some lines were ellipsized, use -l to show in full. ``` docker cli registry --> repository bootfs rootfs \u901a\u8fc7\u4e0b\u5217\u65b9\u5f0f\u4e4b\u4e00\u8fdb\u884c\u5206\u5c42\u6784\u5efa: aufs = advanced multi-layered unification filesystem overlayfs btrfs devicemapper vfs sponsor registry mirror registry vendor registry private registry \u9876\u5c42\u4ed3\u5e93\u3001\u7528\u6237\u4ed3\u5e93 \u6784\u5efaimage\u7684\u65b9\u5f0f\uff1a dockerfile --build--> docker image docker container commit automated builds","title":"Base"},{"location":"Docker/Base/#docker-network-container-archtypes","text":"closed container bridged container joined container \u8054\u76df\u5f0f\u7f51\u7edc open container [root@contos01 docker]# docker network ls NETWORK ID NAME DRIVER SCOPE dd8cc6d04f30 bridge bridge local 9029db42227d host host local d9d05d163f23 none null local","title":"docker network container archtypes:"},{"location":"Docker/Dockerfile/","text":"Dockerfile \u5de5\u4f5c\u76ee\u5f55 Dockerfile\u6587\u4ef6\u9996\u5b57\u6bcd\u5927\u5199 # \u6ce8\u91ca INSTRUCTION argument FROM Dockerfile\u6587\u4ef6\u5f00\u7bc7\u7684\u7b2c\u4e00\u4e2a\u975e\u6ce8\u91ca\u884c MAINTAINER (deprecated) LABEL <key>=<value> <key>=<value> <key>=<value> ... adds metadata to an image ``` COPY [--chown= : ] ... COPY [--chown= : ] [\" \",... \" \"] # \u5fc5\u987b\u662fbuild\u4e0a\u4e0b\u6587\u4e2d\u7684\u8def\u5f84\uff0c\u4e0d\u80fd\u662f\u5176\u7236\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6 #\u5982\u679c \u662f\u76ee\u5f55\uff0c\u5219\u5176\u5185\u90e8\u6587\u4ef6\u6216\u5b50\u76ee\u5f55\u4f1a\u88ab\u9012\u5f52\u590d\u5236\uff0c\u4f46 \u76ee\u5f55\u81ea\u8eab\u4e0d\u4f1a\u88ab\u590d\u5236 #\u5982\u679c\u6307\u5b9a\u4e86\u591a\u4e2a \uff0c\u6216\u5728 \u4e2d\u4f7f\u7528\u4e86\u901a\u914d\u7b26\uff0c\u5219 \u5fc5\u987b\u662f\u4e00\u4e2a\u76ee\u5f55\uff0c\u4e14\u5fc5\u987b\u4ee5/\u7ed3\u5c3e #\u5982\u679c \u4e8b\u5148\u4e0d\u5b58\u5728\uff0c\u5b83\u5c06\u4f1a\u88ab\u81ea\u52a8\u521b\u5efa\uff0c\u8fd9\u5305\u62ec\u5176\u7236\u76ee\u5f55\u8def\u5f84 ``` ``` ADD [--chown= : ] ... ADD [--chown= : ] [\" \",... \" \"] #\u540cCOPY\u6307\u4ee4 #\u5982\u679c \u4e3aURL\u4e14 \u4e0d\u4ee5/\u7ed3\u5c3e\uff0c\u5219 \u6307\u5b9a\u7684\u6587\u4ef6\u5c06\u88ab\u4e0b\u8f7d\u5e76\u76f4\u63a5\u88ab\u521b\u5efa\u4e3a \uff1b\u5982\u679c \u4ee5/\u7ed3\u5c3e\uff0c\u5219\u6587\u4ef6\u540dURL\u6307\u5b9a\u7684\u6587\u4ef6\u5c06\u88ab\u76f4\u63a5\u4e0b\u8f7d\u5e76\u4fdd\u5b58\u4e3a / #\u5982\u679c \u662f\u4e00\u4e2a\u672c\u5730\u7cfb\u7edf\u4e0a\u7684\u538b\u7f29\u683c\u5f0f\u7684tar\u6587\u4ef6\uff0c\u5b83\u5c06\u88ab\u5c55\u5f00\u4e3a\u4e00\u4e2a\u76ee\u5f55\uff0c\u5176\u884c\u4e3a\u7c7b\u4f3c\u4e8etar -x\u547d\u4ee4\uff1b\u7136\u800c\uff0c\u901a\u8fc7URL\u83b7\u53d6\u5230\u7684tar\u6587\u4ef6\u5c06\u4e0d\u4f1a\u88ab\u81ea\u52a8\u5c55\u5f00 \u5982\u679c \u6709\u591a\u4e2a\uff0c\u6216\u5176\u95f4\u63a5\u6216\u76f4\u63a5\u4f7f\u7528\u4e86\u901a\u914d\u7b26\uff0c\u5219 \u5fc5\u987b\u662f\u4e00\u4e2a\u76ee\u5f55\uff0c\u4e14\u5fc5\u987b\u4ee5/\u7ed3\u5c3e\uff1b\u5982\u679c \u4e0d\u4ee5/\u7ed3\u5c3e\uff0c\u5219\u5176\u88ab\u89c6\u4f5c\u4e00\u666e\u901a\u6587\u4ef6\uff0c \u7684\u5185\u5bb9\u5c06\u88ab\u76f4\u63a5\u5199\u5165\u5230 ``` WORKDIR /path/to/workdir #\u7528\u4e8e\u4e3aDockerfile\u4e2d\u6240\u6709\u7684RUN\u3001CMD\u3001ENTRYPOINT\u3001COPY\u548cADD\u6307\u5b9a\u8bbe\u5b9a\u5de5\u4f5c\u76ee\u5f55 VOLUME [\"/data\"] EXPOSE <port> [<port>/<protocol>...] #\u7528\u4e8e\u4e3a\u5bb9\u5668\u6253\u5f00\u6307\u5b9a\u8981\u76d1\u542c\u7684\u7aef\u53e3\u4ee5\u5b9e\u73b0\u4e0e\u5916\u90e8\u901a\u4fe1 ENV <key> <value> ENV <key>=<value> ... #\u7528\u4e8e\u4e3a\u955c\u50cf\u5b9a\u4e49\u6240\u9700\u7684\u73af\u5883\u53d8\u91cf\uff0c\u5e76\u53ef\u88abDockerfile\u6587\u4ef6\u4e2d\u4f4d\u4e8e\u5176\u540e\u7684\u5176\u5b83\u6307\u4ee4\uff08\u5982ENV\u3001ADD\u3001COPY\u7b49\uff09\u6240\u8c03\u7528 #\u4e5f\u53ef\u4ee5\u5728docker run --env <key>=<value> \u5b9a\u4e49\u5bb9\u5668\u8fd0\u884c\u65f6\u7684\u73af\u5883\u53d8\u91cf ``` The CMD instruction has three forms: CMD [\"executable\",\"param1\",\"param2\"] (exec form, this is the preferred form) CMD [\"param1\",\"param2\"] (as default parameters to ENTRYPOINT) CMD command param1 param2 (shell form) There can only be one CMD instruction in a Dockerfile. If you list more than one CMD then only the last CMD will take effect. The main purpose of a CMD is to provide defaults for an executing container. There can only be one CMD instruction in a Dockerfile. If you list more than one CMD then only the last CMD will take effect. The main purpose of a CMD is to provide defaults for an executing container. ``` ``` RUN has 2 forms: RUN (shell form, the command is run in a shell, which by default is /bin/sh -c on Linux or cmd /S /C on Windows) RUN [\"executable\", \"param1\", \"param2\"] (exec form) The RUN instruction will execute any commands in a new layer on top of the current image and commit the results. The resulting committed image will be used for the next step in the Dockerfile. ``` ``` ENTRYPOINT [\"executable\", \"param1\", \"param2\"] (exec form, preferred) ENTRYPOINT command param1 param2 (shell form) An ENTRYPOINT allows you to configure a container that will run as an executable. Command line arguments to docker run will be appended after all elements in an exec form ENTRYPOINT, and will override all elements specified using CMD. This allows arguments to be passed to the entry point, i.e., docker run -d will pass the -d argument to the entry point. You can override the ENTRYPOINT instruction using the docker run --entrypoint flag. ``` ``` USER [: ] or USER [: ] The USER instruction sets the user name (or UID) and optionally the user group (or GID) to use when running the image and for any RUN, CMD and ENTRYPOINT instructions that follow it in the Dockerfile. ``` ``` The HEALTHCHECK instruction has two forms: HEALTHCHECK [OPTIONS] CMD command (check container health by running a command inside the container) HEALTHCHECK NONE (disable any healthcheck inherited from the base image) The HEALTHCHECK instruction tells Docker how to test a container to check that it is still working. This can detect cases such as a web server that is stuck in an infinite loop and unable to handle new connections, even though the server process is still running. When a container has a healthcheck specified, it has a health status in addition to its normal status. This status is initially starting. Whenever a health check passes, it becomes healthy (whatever state it was previously in). After a certain number of consecutive failures, it becomes unhealthy. The options that can appear before CMD are: --interval=DURATION (default: 30s) --timeout=DURATION (default: 30s) --start-period=DURATION (default: 0s) --retries=N (default: 3) The health check will first run interval seconds after the container is started, and then again interval seconds after each previous check completes. If a single run of the check takes longer than timeout seconds then the check is considered to have failed. It takes retries consecutive failures of the health check for the container to be considered unhealthy. start period provides initialization time for containers that need time to bootstrap. Probe failure during that period will not be counted towards the maximum number of retries. However, if a health check succeeds during the start period, the container is considered started and all consecutive failures will be counted towards the maximum number of retries. There can only be one HEALTHCHECK instruction in a Dockerfile. If you list more than one then only the last HEALTHCHECK will take effect. The command after the CMD keyword can be either a shell command (e.g. HEALTHCHECK CMD /bin/check-running) or an exec array (as with other Dockerfile commands; see e.g. ENTRYPOINT for details). The command\u2019s exit status indicates the health status of the container. The possible values are: 0: success - the container is healthy and ready for use 1: unhealthy - the container is not working correctly 2: reserved - do not use this exit code For example, to check every five minutes or so that a web-server is able to serve the site\u2019s main page within three seconds: HEALTHCHECK --interval=5m --timeout=3s \\ CMD curl -f http://localhost/ || exit 1 To help debug failing probes, any output text (UTF-8 encoded) that the command writes on stdout or stderr will be stored in the health status and can be queried with docker inspect. Such output should be kept short (only the first 4096 bytes are stored currently). When the health status of a container changes, a health_status event is generated with the new status. The HEALTHCHECK feature was added in Docker 1.12. ``` ``` SHELL [\"executable\", \"parameters\"] The SHELL instruction allows the default shell used for the shell form of commands to be overridden. The default shell on Linux is [\"/bin/sh\", \"-c\"], and on Windows is [\"cmd\", \"/S\", \"/C\"]. The SHELL instruction must be written in JSON form in a Dockerfile. The SHELL instruction is particularly useful on Windows where there are two commonly used and quite different native shells: cmd and powershell, as well as alternate shells available including sh. ``` ``` STOPSIGNAL signal The STOPSIGNAL instruction sets the system call signal that will be sent to the container to exit. This signal can be a valid unsigned number that matches a position in the kernel\u2019s syscall table, for instance 9, or a signal name in the format SIGNAME, for instance SIGKILL. ``` ``` ARG [= ] The ARG instruction defines a variable that users can pass at build-time to the builder with the docker build command using the --build-arg = flag. If a user specifies a build argument that was not defined in the Dockerfile, the build outputs a warning. ``` ``` ONBUILD [INSTRUCTION] \u7528\u4e8e\u5728Dockerfile\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u89e6\u53d1\u5668 Dockerfile\u7528\u4e8ebuild\u6620\u50cf\u6587\u4ef6\uff0c\u6b64\u6620\u50cf\u6587\u4ef6\u4ea6\u53ef\u4f5c\u4e3abase image\u88ab\u53e6\u4e00\u4e2aDockerfile\u7528\u4f5cFROM\u6307\u4ee4\u7684\u53c2\u6570\uff0c\u5e76\u4ee5\u4e4b\u6784\u5efa\u65b0\u7684\u6620\u50cf\u6587\u4ef6 \u5728\u540e\u9762\u7684\u8fd9\u4e2aDockerfile\u4e2d\u7684FROM\u6307\u4ee4\u5728build\u8fc7\u7a0b\u4e2d\u88ab\u6267\u884c\u65f6\uff0c\u5c06\u4f1a\u201c\u89e3\u53d1\u201d\u521b\u5efa\u5176base image\u7684Dockerfile\u6587\u4ef6\u4e2d\u7684ONBULID\u6307\u4ee4\u5b9a\u4e49\u7684\u89e6\u53d1\u5668 \u5c3d\u7ba1\u4efb\u4f55\u6307\u4ee4\u90fd\u53ef\u6ce8\u518c\u6210\u4e3a\u89e6\u53d1\u5668\u6307\u4ee4\uff0c\u4f46ONBUILD\u4e0d\u80fd\u81ea\u6211\u5d4c\u5957\uff0c\u4e14\u4e0d\u4f1a\u89e6\u53d1FROM\u548cMAINTAINER\u6307\u4ee4 \u4f7f\u7528\u5305\u542b ONBUILD\u6307\u4ee4\u7684Dockerfile\u6784\u5efa\u7684\u955c\u50cf\u5e94\u8be5\u4f7f\u7528\u7279\u6b8a\u7684\u6807\u7b7e\uff0c\u4f8b\u5982ruby-2.0-onbuild \u5728ONBUILD\u6307\u4ee4\u4e2d\u4f7f\u7528ADD\u6216COPY\u6307\u4ee4\u5e94\u8be5\u683c\u5916\u5c0f\u5fc3\uff0c\u56e0\u4e3a\u65b0\u6784\u5efa\u8fc7\u7a0b\u7684\u4e0a\u4e0b\u6587\u5728\u7f3a\u5c11\u6307\u5b9a\u7684\u6e90\u6587\u4ef6\u65f6\u4f1a\u5931\u8d25 ``` \u6bcf\u4e2aDockerfile\u4e0a\u7684instruction\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u5206\u5c42 .dockeringore","title":"Dockerfile"},{"location":"Docker/Dockerfile/#dockerfile","text":"\u5de5\u4f5c\u76ee\u5f55 Dockerfile\u6587\u4ef6\u9996\u5b57\u6bcd\u5927\u5199 # \u6ce8\u91ca INSTRUCTION argument FROM Dockerfile\u6587\u4ef6\u5f00\u7bc7\u7684\u7b2c\u4e00\u4e2a\u975e\u6ce8\u91ca\u884c MAINTAINER (deprecated) LABEL <key>=<value> <key>=<value> <key>=<value> ... adds metadata to an image ``` COPY [--chown= : ] ... COPY [--chown= : ] [\" \",... \" \"] # \u5fc5\u987b\u662fbuild\u4e0a\u4e0b\u6587\u4e2d\u7684\u8def\u5f84\uff0c\u4e0d\u80fd\u662f\u5176\u7236\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6 #\u5982\u679c \u662f\u76ee\u5f55\uff0c\u5219\u5176\u5185\u90e8\u6587\u4ef6\u6216\u5b50\u76ee\u5f55\u4f1a\u88ab\u9012\u5f52\u590d\u5236\uff0c\u4f46 \u76ee\u5f55\u81ea\u8eab\u4e0d\u4f1a\u88ab\u590d\u5236 #\u5982\u679c\u6307\u5b9a\u4e86\u591a\u4e2a \uff0c\u6216\u5728 \u4e2d\u4f7f\u7528\u4e86\u901a\u914d\u7b26\uff0c\u5219 \u5fc5\u987b\u662f\u4e00\u4e2a\u76ee\u5f55\uff0c\u4e14\u5fc5\u987b\u4ee5/\u7ed3\u5c3e #\u5982\u679c \u4e8b\u5148\u4e0d\u5b58\u5728\uff0c\u5b83\u5c06\u4f1a\u88ab\u81ea\u52a8\u521b\u5efa\uff0c\u8fd9\u5305\u62ec\u5176\u7236\u76ee\u5f55\u8def\u5f84 ``` ``` ADD [--chown= : ] ... ADD [--chown= : ] [\" \",... \" \"] #\u540cCOPY\u6307\u4ee4 #\u5982\u679c \u4e3aURL\u4e14 \u4e0d\u4ee5/\u7ed3\u5c3e\uff0c\u5219 \u6307\u5b9a\u7684\u6587\u4ef6\u5c06\u88ab\u4e0b\u8f7d\u5e76\u76f4\u63a5\u88ab\u521b\u5efa\u4e3a \uff1b\u5982\u679c \u4ee5/\u7ed3\u5c3e\uff0c\u5219\u6587\u4ef6\u540dURL\u6307\u5b9a\u7684\u6587\u4ef6\u5c06\u88ab\u76f4\u63a5\u4e0b\u8f7d\u5e76\u4fdd\u5b58\u4e3a / #\u5982\u679c \u662f\u4e00\u4e2a\u672c\u5730\u7cfb\u7edf\u4e0a\u7684\u538b\u7f29\u683c\u5f0f\u7684tar\u6587\u4ef6\uff0c\u5b83\u5c06\u88ab\u5c55\u5f00\u4e3a\u4e00\u4e2a\u76ee\u5f55\uff0c\u5176\u884c\u4e3a\u7c7b\u4f3c\u4e8etar -x\u547d\u4ee4\uff1b\u7136\u800c\uff0c\u901a\u8fc7URL\u83b7\u53d6\u5230\u7684tar\u6587\u4ef6\u5c06\u4e0d\u4f1a\u88ab\u81ea\u52a8\u5c55\u5f00 \u5982\u679c \u6709\u591a\u4e2a\uff0c\u6216\u5176\u95f4\u63a5\u6216\u76f4\u63a5\u4f7f\u7528\u4e86\u901a\u914d\u7b26\uff0c\u5219 \u5fc5\u987b\u662f\u4e00\u4e2a\u76ee\u5f55\uff0c\u4e14\u5fc5\u987b\u4ee5/\u7ed3\u5c3e\uff1b\u5982\u679c \u4e0d\u4ee5/\u7ed3\u5c3e\uff0c\u5219\u5176\u88ab\u89c6\u4f5c\u4e00\u666e\u901a\u6587\u4ef6\uff0c \u7684\u5185\u5bb9\u5c06\u88ab\u76f4\u63a5\u5199\u5165\u5230 ``` WORKDIR /path/to/workdir #\u7528\u4e8e\u4e3aDockerfile\u4e2d\u6240\u6709\u7684RUN\u3001CMD\u3001ENTRYPOINT\u3001COPY\u548cADD\u6307\u5b9a\u8bbe\u5b9a\u5de5\u4f5c\u76ee\u5f55 VOLUME [\"/data\"] EXPOSE <port> [<port>/<protocol>...] #\u7528\u4e8e\u4e3a\u5bb9\u5668\u6253\u5f00\u6307\u5b9a\u8981\u76d1\u542c\u7684\u7aef\u53e3\u4ee5\u5b9e\u73b0\u4e0e\u5916\u90e8\u901a\u4fe1 ENV <key> <value> ENV <key>=<value> ... #\u7528\u4e8e\u4e3a\u955c\u50cf\u5b9a\u4e49\u6240\u9700\u7684\u73af\u5883\u53d8\u91cf\uff0c\u5e76\u53ef\u88abDockerfile\u6587\u4ef6\u4e2d\u4f4d\u4e8e\u5176\u540e\u7684\u5176\u5b83\u6307\u4ee4\uff08\u5982ENV\u3001ADD\u3001COPY\u7b49\uff09\u6240\u8c03\u7528 #\u4e5f\u53ef\u4ee5\u5728docker run --env <key>=<value> \u5b9a\u4e49\u5bb9\u5668\u8fd0\u884c\u65f6\u7684\u73af\u5883\u53d8\u91cf ``` The CMD instruction has three forms: CMD [\"executable\",\"param1\",\"param2\"] (exec form, this is the preferred form) CMD [\"param1\",\"param2\"] (as default parameters to ENTRYPOINT) CMD command param1 param2 (shell form) There can only be one CMD instruction in a Dockerfile. If you list more than one CMD then only the last CMD will take effect. The main purpose of a CMD is to provide defaults for an executing container. There can only be one CMD instruction in a Dockerfile. If you list more than one CMD then only the last CMD will take effect. The main purpose of a CMD is to provide defaults for an executing container. ``` ``` RUN has 2 forms: RUN (shell form, the command is run in a shell, which by default is /bin/sh -c on Linux or cmd /S /C on Windows) RUN [\"executable\", \"param1\", \"param2\"] (exec form) The RUN instruction will execute any commands in a new layer on top of the current image and commit the results. The resulting committed image will be used for the next step in the Dockerfile. ``` ``` ENTRYPOINT [\"executable\", \"param1\", \"param2\"] (exec form, preferred) ENTRYPOINT command param1 param2 (shell form) An ENTRYPOINT allows you to configure a container that will run as an executable. Command line arguments to docker run will be appended after all elements in an exec form ENTRYPOINT, and will override all elements specified using CMD. This allows arguments to be passed to the entry point, i.e., docker run -d will pass the -d argument to the entry point. You can override the ENTRYPOINT instruction using the docker run --entrypoint flag. ``` ``` USER [: ] or USER [: ] The USER instruction sets the user name (or UID) and optionally the user group (or GID) to use when running the image and for any RUN, CMD and ENTRYPOINT instructions that follow it in the Dockerfile. ``` ``` The HEALTHCHECK instruction has two forms: HEALTHCHECK [OPTIONS] CMD command (check container health by running a command inside the container) HEALTHCHECK NONE (disable any healthcheck inherited from the base image) The HEALTHCHECK instruction tells Docker how to test a container to check that it is still working. This can detect cases such as a web server that is stuck in an infinite loop and unable to handle new connections, even though the server process is still running. When a container has a healthcheck specified, it has a health status in addition to its normal status. This status is initially starting. Whenever a health check passes, it becomes healthy (whatever state it was previously in). After a certain number of consecutive failures, it becomes unhealthy. The options that can appear before CMD are: --interval=DURATION (default: 30s) --timeout=DURATION (default: 30s) --start-period=DURATION (default: 0s) --retries=N (default: 3) The health check will first run interval seconds after the container is started, and then again interval seconds after each previous check completes. If a single run of the check takes longer than timeout seconds then the check is considered to have failed. It takes retries consecutive failures of the health check for the container to be considered unhealthy. start period provides initialization time for containers that need time to bootstrap. Probe failure during that period will not be counted towards the maximum number of retries. However, if a health check succeeds during the start period, the container is considered started and all consecutive failures will be counted towards the maximum number of retries. There can only be one HEALTHCHECK instruction in a Dockerfile. If you list more than one then only the last HEALTHCHECK will take effect. The command after the CMD keyword can be either a shell command (e.g. HEALTHCHECK CMD /bin/check-running) or an exec array (as with other Dockerfile commands; see e.g. ENTRYPOINT for details). The command\u2019s exit status indicates the health status of the container. The possible values are: 0: success - the container is healthy and ready for use 1: unhealthy - the container is not working correctly 2: reserved - do not use this exit code For example, to check every five minutes or so that a web-server is able to serve the site\u2019s main page within three seconds: HEALTHCHECK --interval=5m --timeout=3s \\ CMD curl -f http://localhost/ || exit 1 To help debug failing probes, any output text (UTF-8 encoded) that the command writes on stdout or stderr will be stored in the health status and can be queried with docker inspect. Such output should be kept short (only the first 4096 bytes are stored currently). When the health status of a container changes, a health_status event is generated with the new status. The HEALTHCHECK feature was added in Docker 1.12. ``` ``` SHELL [\"executable\", \"parameters\"] The SHELL instruction allows the default shell used for the shell form of commands to be overridden. The default shell on Linux is [\"/bin/sh\", \"-c\"], and on Windows is [\"cmd\", \"/S\", \"/C\"]. The SHELL instruction must be written in JSON form in a Dockerfile. The SHELL instruction is particularly useful on Windows where there are two commonly used and quite different native shells: cmd and powershell, as well as alternate shells available including sh. ``` ``` STOPSIGNAL signal The STOPSIGNAL instruction sets the system call signal that will be sent to the container to exit. This signal can be a valid unsigned number that matches a position in the kernel\u2019s syscall table, for instance 9, or a signal name in the format SIGNAME, for instance SIGKILL. ``` ``` ARG [= ] The ARG instruction defines a variable that users can pass at build-time to the builder with the docker build command using the --build-arg = flag. If a user specifies a build argument that was not defined in the Dockerfile, the build outputs a warning. ``` ``` ONBUILD [INSTRUCTION] \u7528\u4e8e\u5728Dockerfile\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u89e6\u53d1\u5668 Dockerfile\u7528\u4e8ebuild\u6620\u50cf\u6587\u4ef6\uff0c\u6b64\u6620\u50cf\u6587\u4ef6\u4ea6\u53ef\u4f5c\u4e3abase image\u88ab\u53e6\u4e00\u4e2aDockerfile\u7528\u4f5cFROM\u6307\u4ee4\u7684\u53c2\u6570\uff0c\u5e76\u4ee5\u4e4b\u6784\u5efa\u65b0\u7684\u6620\u50cf\u6587\u4ef6 \u5728\u540e\u9762\u7684\u8fd9\u4e2aDockerfile\u4e2d\u7684FROM\u6307\u4ee4\u5728build\u8fc7\u7a0b\u4e2d\u88ab\u6267\u884c\u65f6\uff0c\u5c06\u4f1a\u201c\u89e3\u53d1\u201d\u521b\u5efa\u5176base image\u7684Dockerfile\u6587\u4ef6\u4e2d\u7684ONBULID\u6307\u4ee4\u5b9a\u4e49\u7684\u89e6\u53d1\u5668 \u5c3d\u7ba1\u4efb\u4f55\u6307\u4ee4\u90fd\u53ef\u6ce8\u518c\u6210\u4e3a\u89e6\u53d1\u5668\u6307\u4ee4\uff0c\u4f46ONBUILD\u4e0d\u80fd\u81ea\u6211\u5d4c\u5957\uff0c\u4e14\u4e0d\u4f1a\u89e6\u53d1FROM\u548cMAINTAINER\u6307\u4ee4 \u4f7f\u7528\u5305\u542b ONBUILD\u6307\u4ee4\u7684Dockerfile\u6784\u5efa\u7684\u955c\u50cf\u5e94\u8be5\u4f7f\u7528\u7279\u6b8a\u7684\u6807\u7b7e\uff0c\u4f8b\u5982ruby-2.0-onbuild \u5728ONBUILD\u6307\u4ee4\u4e2d\u4f7f\u7528ADD\u6216COPY\u6307\u4ee4\u5e94\u8be5\u683c\u5916\u5c0f\u5fc3\uff0c\u56e0\u4e3a\u65b0\u6784\u5efa\u8fc7\u7a0b\u7684\u4e0a\u4e0b\u6587\u5728\u7f3a\u5c11\u6307\u5b9a\u7684\u6e90\u6587\u4ef6\u65f6\u4f1a\u5931\u8d25 ``` \u6bcf\u4e2aDockerfile\u4e0a\u7684instruction\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u5206\u5c42 .dockeringore","title":"Dockerfile"},{"location":"Docker/bridge/","text":"c1->router:172.16.31.2.36722 > 172.16.32.2.http: Flags [S], seq 3863933608 router->c2:172.16.32.1.36722 > 172.16.32.2.http: Flags [S], seq 3863933608 c2->router:172.16.32.2.http > 172.16.32.1.36722: Flags [S.], seq 856835906, ack 3863933609 note right of router:172.16.32.2.http > 172.16.31.2.36722: Flags [S.], seq 856835906, ack 3863933609 router->c1:172.16.32.2.http > 172.16.31.2.36722: Flags [S.], seq 856835906, ack 3863933609 c1->router:172.16.31.2.36722 > 172.16.32.2.http: Flags [.], ack 1 router->c2:172.16.32.1.36722 > 172.16.32.2.http: Flags [.], ack 856835907","title":"Bridge"},{"location":"Docker/dockerfile cmd/","text":"[root@contos01 img1]# docker image inspect -f {{.Config.Cmd}} test_cmd:bash [/bin/sh -c /bin/httpd -f -h /data/html] [root@contos01 img1]# docker image inspect -f {{.ContainerConfig.Cmd}} test_cmd:bash [/bin/sh -c #(nop) CMD [\"/bin/sh\" \"-c\" \"/bin/httpd -f -h /data/html\"]] [root@contos01 ~]# docker container inspect -f {{.Config.Cmd}} b1 [/bin/sh -c /bin/httpd -f -h /data/html] [root@contos01 ~]# docker container exec -it b1 sh / # ps PID USER TIME COMMAND 1 root 0:00 /bin/httpd -f -h /data/html 23 root 0:00 sh 30 root 0:00 ps [root@contos01 img1]# docker image inspect -f {{.Config.Cmd}} test_cmd:bashofexec [/bin/sh -c /bin/httpd -f -h /data/html] [root@contos01 img1]# docker image inspect -f {{.ContainerConfig.Cmd}} test_cmd:bashofexec [/bin/sh -c #(nop) CMD [\"/bin/sh\" \"-c\" \"/bin/httpd\" \"-f\" \"-h\" \"/data/html\"]] [root@contos01 img1]# docker container run --name b1 --rm -it test_cmd:bashofexec [root@contos01 img1]# #\u76f4\u63a5\u9000\u51fa [root@contos01 img1]# docker image inspect -f {{.Config.Cmd}} test_cmd:nobashofexec [/bin/httpd -f -h /data/html] [root@contos01 img1]# docker image inspect -f {{.ContainerConfig.Cmd}} test_cmd:nobashofexec [/bin/sh -c #(nop) CMD [\"/bin/httpd\" \"-f\" \"-h\" \"/data/html\"]] [root@contos01 ~]# docker container inspect -f {{.Config.Cmd}} b1 [/bin/httpd -f -h /data/html] [root@contos01 ~]# docker container exec -it b1 sh / # ps PID USER TIME COMMAND 1 root 0:00 /bin/httpd -f -h /data/html 8 root 0:00 sh 15 root 0:00 ps \u5206\u6790\uff1a <\u672a\u5b8c\u5f85\u7eed>\u5173\u952e\u8bcd\uff1a\u5f53\u524d\u5de5\u4f5c\u8fdb\u7a0b\u662f\u5426\u4e3aPID=1 --> \u5df2\u5426\u8ba4 \u5728\u6267\u884csh -c httpd \u540e\uff0chttpd\u5e76\u4e0d\u4ee5sh\u4f5c\u4e3a\u7236\u8fdb\u7a0b\uff0c\u6545\u5176\u4e5f\u662f\u56e0\u4e3apid=1(sh)\u7684\u8fdb\u7a0b\u7ed3\u675f\u800c\u7ec8\u6b62","title":"Dockerfile cmd"},{"location":"Docker/namespaces/","text":"NameSpaces A namespace wraps a global system resource in an abstraction that makes it appear to the processes within the namespace that they have their own isolated instance of the global resource. Changes to the global resource are visible to other processes that are members of the namespace, but are invisible to other processes. One use of namespaces is to implement containers. Linux provides the following namespaces: Namespace Constant Isolates Cgroup CLONE_NEWCGROUP Cgroup root directory IPC CLONE_NEWIPC System V IPC, POSIX message queues Network CLONE_NEWNET Network devices, stacks, ports, etc. Mount CLONE_NEWNS Mount points PID CLONE_NEWPID Process IDs User CLONE_NEWUSER User and group IDs UTS CLONE_NEWUTS Hostname and NIS domain name cgroup namespace cgroup Linux control groups. Control cgroups, usually referred to as cgroups, are a Linux kernel feature which allow processes to be organized into hierarchical groups whose usage of various types of resources can then be limited and monitored. The kernel's cgroup interface is provided through a pseudo-filesystem called cgroupfs. Grouping is implemented in the core cgroup kernel code, while resource tracking and limits are implemented in a set of per-resource-type subsystems (memory, CPU, and so on). IPC namespaces IPC namespaces isolate certain IPC resources, namely, System V IPC objects (see svipc(7)) and (since Linux 2.6.30) POSIX message queues (see mq_overview(7)). The common characteristic of these IPC mechanisms is that IPC objects are identified by mechanisms other than filesystem pathnames. Each IPC namespace has its own set of System V IPC identifiers and its own POSIX message queue filesystem. Objects created in an IPC namespace are visible to all other processes that are members of that namespace, but are not visible to processes in other IPC namespaces. Network namespaces Network namespaces provide isolation of the system resources associated with networking: network devices, IPv4 and IPv6 protocol stacks, IP routing tables, firewall rules, the /proc/net directory (which is a symbolic link to /proc/PID/net), the /sys/class/net directory, various files under /proc/sys/net, port numbers (sockets), and so on. In addition, network namespaces isolate the UNIX domain abstract socket namespace (see unix(7)). A physical network device can live in exactly one network namespace. When a network namespace is freed (i.e., when the last process in the namespace terminates), its physical network devices are moved back to the initial network namespace (not to the parent of the process). A virtual network (veth(4)) device pair provides a pipe-like abstraction that can be used to create tunnels between network namespaces, and can be used to create a bridge to a physical network device in another namespace. When a namespace is freed, the veth(4) devices that it contains are destroyed. Use of network namespaces requires a kernel that is configured with the CONFIG_NET_NS option. Mount namespaces Mount namespaces provide isolation of the list of mount points seen by the processes in each namespace instance. Thus, the processes in each of the mount namespace instances will see distinct single-directory hierarchies. The views provided by the /proc/[pid]/mounts, /proc/[pid]/mountinfo, and /proc/[pid]/mountstats files (all described in proc(5)) correspond to the mount namespace in which the process with the PID [pid] resides. (All of the processes that reside in the same mount namespace will see the same view in these files.) When a process creates a new mount namespace using clone(2) or unshare(2) with the CLONE_NEWNS flag, the mount point list for the new namespace is a copy of the caller's mount point list. Subsequent modifications to the mount point list (mount(2) and umount(2)) in either mount namespace will not (by default) affect the mount point list seen in the other namespace (but see the following discussion of shared subtrees). PID namespaces PID namespaces isolate the process ID number space, meaning that processes in different PID namespaces can have the same PID. PID namespaces allow containers to provide func tionality such as suspending/resuming the set of processes in the container and migrating the container to a new host while the processes inside the container maintain the same PIDs. PIDs in a new PID namespace start at 1, somewhat like a standalone system, and calls to fork(2), vfork(2), or clone(2) will produce processes with PIDs that are unique within the namespace. Use of PID namespaces requires a kernel that is configured with the CONFIG_PID_NS option. User namespaces User namespaces isolate security-related identifiers and attributes, in particular, user IDs and group IDs (see credentials(7)), the root directory, keys (see keyrings(7)), and capabilities (see capabilities(7)). A process's user and group IDs can be different inside and outside a user namespace. In particular, a process can have a normal unprivileged user ID outside a user namespace while at the same time having a user ID of 0 inside the namespace; in other words, the process has full privileges for operations inside the user namespace, but is unprivileged for operations outside the namespace. UTS namespaces UTS namespaces provide isolation of two system identifiers: the hostname and the NIS domain name. These identifiers are set using sethostname(2) and setdomainname(2), and can be retrieved using uname(2), gethostname(2), and getdomainname(2).","title":"Namespaces"},{"location":"Docker/namespaces/#namespaces","text":"A namespace wraps a global system resource in an abstraction that makes it appear to the processes within the namespace that they have their own isolated instance of the global resource. Changes to the global resource are visible to other processes that are members of the namespace, but are invisible to other processes. One use of namespaces is to implement containers. Linux provides the following namespaces: Namespace Constant Isolates Cgroup CLONE_NEWCGROUP Cgroup root directory IPC CLONE_NEWIPC System V IPC, POSIX message queues Network CLONE_NEWNET Network devices, stacks, ports, etc. Mount CLONE_NEWNS Mount points PID CLONE_NEWPID Process IDs User CLONE_NEWUSER User and group IDs UTS CLONE_NEWUTS Hostname and NIS domain name","title":"NameSpaces"},{"location":"Docker/namespaces/#cgroup-namespace","text":"","title":"cgroup namespace"},{"location":"Docker/namespaces/#cgroup","text":"Linux control groups. Control cgroups, usually referred to as cgroups, are a Linux kernel feature which allow processes to be organized into hierarchical groups whose usage of various types of resources can then be limited and monitored. The kernel's cgroup interface is provided through a pseudo-filesystem called cgroupfs. Grouping is implemented in the core cgroup kernel code, while resource tracking and limits are implemented in a set of per-resource-type subsystems (memory, CPU, and so on).","title":"cgroup"},{"location":"Docker/namespaces/#ipc-namespaces","text":"IPC namespaces isolate certain IPC resources, namely, System V IPC objects (see svipc(7)) and (since Linux 2.6.30) POSIX message queues (see mq_overview(7)). The common characteristic of these IPC mechanisms is that IPC objects are identified by mechanisms other than filesystem pathnames. Each IPC namespace has its own set of System V IPC identifiers and its own POSIX message queue filesystem. Objects created in an IPC namespace are visible to all other processes that are members of that namespace, but are not visible to processes in other IPC namespaces.","title":"IPC namespaces"},{"location":"Docker/namespaces/#network-namespaces","text":"Network namespaces provide isolation of the system resources associated with networking: network devices, IPv4 and IPv6 protocol stacks, IP routing tables, firewall rules, the /proc/net directory (which is a symbolic link to /proc/PID/net), the /sys/class/net directory, various files under /proc/sys/net, port numbers (sockets), and so on. In addition, network namespaces isolate the UNIX domain abstract socket namespace (see unix(7)). A physical network device can live in exactly one network namespace. When a network namespace is freed (i.e., when the last process in the namespace terminates), its physical network devices are moved back to the initial network namespace (not to the parent of the process). A virtual network (veth(4)) device pair provides a pipe-like abstraction that can be used to create tunnels between network namespaces, and can be used to create a bridge to a physical network device in another namespace. When a namespace is freed, the veth(4) devices that it contains are destroyed. Use of network namespaces requires a kernel that is configured with the CONFIG_NET_NS option.","title":"Network namespaces"},{"location":"Docker/namespaces/#mount-namespaces","text":"Mount namespaces provide isolation of the list of mount points seen by the processes in each namespace instance. Thus, the processes in each of the mount namespace instances will see distinct single-directory hierarchies. The views provided by the /proc/[pid]/mounts, /proc/[pid]/mountinfo, and /proc/[pid]/mountstats files (all described in proc(5)) correspond to the mount namespace in which the process with the PID [pid] resides. (All of the processes that reside in the same mount namespace will see the same view in these files.) When a process creates a new mount namespace using clone(2) or unshare(2) with the CLONE_NEWNS flag, the mount point list for the new namespace is a copy of the caller's mount point list. Subsequent modifications to the mount point list (mount(2) and umount(2)) in either mount namespace will not (by default) affect the mount point list seen in the other namespace (but see the following discussion of shared subtrees).","title":"Mount namespaces"},{"location":"Docker/namespaces/#pid-namespaces","text":"PID namespaces isolate the process ID number space, meaning that processes in different PID namespaces can have the same PID. PID namespaces allow containers to provide func tionality such as suspending/resuming the set of processes in the container and migrating the container to a new host while the processes inside the container maintain the same PIDs. PIDs in a new PID namespace start at 1, somewhat like a standalone system, and calls to fork(2), vfork(2), or clone(2) will produce processes with PIDs that are unique within the namespace. Use of PID namespaces requires a kernel that is configured with the CONFIG_PID_NS option.","title":"PID namespaces"},{"location":"Docker/namespaces/#user-namespaces","text":"User namespaces isolate security-related identifiers and attributes, in particular, user IDs and group IDs (see credentials(7)), the root directory, keys (see keyrings(7)), and capabilities (see capabilities(7)). A process's user and group IDs can be different inside and outside a user namespace. In particular, a process can have a normal unprivileged user ID outside a user namespace while at the same time having a user ID of 0 inside the namespace; in other words, the process has full privileges for operations inside the user namespace, but is unprivileged for operations outside the namespace.","title":"User namespaces"},{"location":"Docker/namespaces/#uts-namespaces","text":"UTS namespaces provide isolation of two system identifiers: the hostname and the NIS domain name. These identifiers are set using sethostname(2) and setdomainname(2), and can be retrieved using uname(2), gethostname(2), and getdomainname(2).","title":"UTS namespaces"},{"location":"Manual/cgroup/","text":"cgroup - Linux control groups DESCRIPTION Control cgroups, usually referred to as cgroups, are a Linux kernel feature which allow processes to be organized into hierarchical groups whose usage of various types of resources can then be limited and monitored. The kernel's cgroup interface is provided through a pseudo-filesystem called cgroupfs. Grouping is implemented in the core cgroup kernel code, while resource tracking and limits are implemented in a set of per-resource-type subsystems (memory, CPU, and so on). Terminology A cgroup is a collection of processes that are bound to a set of limits or parameters defined via the cgroup filesystem. A subsystem is a kernel component that modifies the behavior of the processes in a cgroup. Various subsystems have been implemented, making it possible to do things such as limiting the amount of CPU time and memory available to a cgroup, accounting for the CPU time used by a cgroup, and freezing and resuming execution of the processes in a cgroup. Subsystems are sometimes also known as resource controllers (or simply, controllers). The cgroups for a controller are arranged in a hierarchy. This hierarchy is defined by creating, removing, and renaming subdirectories within the cgroup filesystem. At each level of the hierarchy, attributes (e.g., limits) can be defined. The limits, control, and accounting provided by cgroups generally have effect throughout the subhierarchy underneath the cgroup where the attributes are defined. Thus, for example, the limits placed on a cgroup at a higher level in the hierarchy cannot be exceeded by descendant cgroups.","title":"Cgroup"},{"location":"Manual/cgroup/#cgroup-linux-control-groups","text":"","title":"cgroup - Linux control groups"},{"location":"Manual/cgroup/#description","text":"Control cgroups, usually referred to as cgroups, are a Linux kernel feature which allow processes to be organized into hierarchical groups whose usage of various types of resources can then be limited and monitored. The kernel's cgroup interface is provided through a pseudo-filesystem called cgroupfs. Grouping is implemented in the core cgroup kernel code, while resource tracking and limits are implemented in a set of per-resource-type subsystems (memory, CPU, and so on).","title":"DESCRIPTION"},{"location":"Manual/cgroup/#terminology","text":"A cgroup is a collection of processes that are bound to a set of limits or parameters defined via the cgroup filesystem. A subsystem is a kernel component that modifies the behavior of the processes in a cgroup. Various subsystems have been implemented, making it possible to do things such as limiting the amount of CPU time and memory available to a cgroup, accounting for the CPU time used by a cgroup, and freezing and resuming execution of the processes in a cgroup. Subsystems are sometimes also known as resource controllers (or simply, controllers). The cgroups for a controller are arranged in a hierarchy. This hierarchy is defined by creating, removing, and renaming subdirectories within the cgroup filesystem. At each level of the hierarchy, attributes (e.g., limits) can be defined. The limits, control, and accounting provided by cgroups generally have effect throughout the subhierarchy underneath the cgroup where the attributes are defined. Thus, for example, the limits placed on a cgroup at a higher level in the hierarchy cannot be exceeded by descendant cgroups.","title":"Terminology"},{"location":"Math/\u57fa\u7840\u6982\u5ff5/","text":"\u57fa\u7840\u6982\u5ff5 \u4e58\u6cd5\u7ed3\u5408\u5f8b \u4e09\u4e2a\u6570\u76f8\u4e58\uff0c\u5148\u628a\u524d\u4e24\u4e2a\u6570\u76f8\u4e58\uff0c\u518d\u548c\u53e6\u5916\u4e00\u4e2a\u6570\u76f8\u4e58\uff0c\u6216\u5148\u628a\u540e\u4e24\u4e2a\u6570\u76f8\u4e58\uff0c\u518d\u548c\u53e6\u5916\u4e00\u4e2a\u6570\u76f8\u4e58\uff0c\u79ef\u4e0d\u53d8\u3002 $$ (a\\times b)\\times c=a\\times(b\\times c) $$ \u65b9\u5dee \u6570\u636e\u4e0e\u5e73\u5747\u6570\u4e4b\u5dee\u5e73\u65b9\u548c\u7684\u5e73\u5747\u6570\uff0c\u662f\u8861\u91cf\u6e90\u6570\u636e\u548c\u671f\u671b\u503c\u7684\u5ea6\u91cf\u503c\u3002 $$ \\text{\u603b\u4f53\u65b9\u5dee\u8ba1\u7b97\u516c\u5f0f\uff1a}\\sigma^2=\\frac{\\sum(X-\\mu)^2}{N}\\ \\sigma^2\u4e3a\u603b\u4f53\u65b9\u5dee\uff0cX\u4e3a\u53d8\u91cf\uff0c\\mu\u4e3a\u603b\u4f53\u5747\u503c\uff0cN\u4e3a\u603b\u4f53\u4f8b\u6570 $$","title":"\u57fa\u7840\u6982\u5ff5"},{"location":"Math/\u57fa\u7840\u6982\u5ff5/#_1","text":"","title":"\u57fa\u7840\u6982\u5ff5"},{"location":"Math/\u57fa\u7840\u6982\u5ff5/#_2","text":"\u4e09\u4e2a\u6570\u76f8\u4e58\uff0c\u5148\u628a\u524d\u4e24\u4e2a\u6570\u76f8\u4e58\uff0c\u518d\u548c\u53e6\u5916\u4e00\u4e2a\u6570\u76f8\u4e58\uff0c\u6216\u5148\u628a\u540e\u4e24\u4e2a\u6570\u76f8\u4e58\uff0c\u518d\u548c\u53e6\u5916\u4e00\u4e2a\u6570\u76f8\u4e58\uff0c\u79ef\u4e0d\u53d8\u3002 $$ (a\\times b)\\times c=a\\times(b\\times c) $$","title":"\u4e58\u6cd5\u7ed3\u5408\u5f8b"},{"location":"Math/\u57fa\u7840\u6982\u5ff5/#_3","text":"\u6570\u636e\u4e0e\u5e73\u5747\u6570\u4e4b\u5dee\u5e73\u65b9\u548c\u7684\u5e73\u5747\u6570\uff0c\u662f\u8861\u91cf\u6e90\u6570\u636e\u548c\u671f\u671b\u503c\u7684\u5ea6\u91cf\u503c\u3002 $$ \\text{\u603b\u4f53\u65b9\u5dee\u8ba1\u7b97\u516c\u5f0f\uff1a}\\sigma^2=\\frac{\\sum(X-\\mu)^2}{N}\\ \\sigma^2\u4e3a\u603b\u4f53\u65b9\u5dee\uff0cX\u4e3a\u53d8\u91cf\uff0c\\mu\u4e3a\u603b\u4f53\u5747\u503c\uff0cN\u4e3a\u603b\u4f53\u4f8b\u6570 $$","title":"\u65b9\u5dee"},{"location":"Math/\u5fae\u79ef\u5206/","text":"\u5fae\u79ef\u5206 \u4e09\u4e2a\u6838\u5fc3\u601d\u60f3\uff1a\u79ef\u5206\u3001\u5fae\u5206\u3001\u4e24\u8005\u4e92\u9006 $$ \\int_0^R\\frac{dA}{dr}=A(R)\\ \\text{\u79ef\u5206\uff1a}\\int_0^R \\quad \\text{\u5fae\u5206\uff1a}\\frac{dA}{dr} \\quad \\text{\u4e24\u8005\u4e92\u9006\uff1a}A(R) $$ $$ \\text{\u5bfc\u6570\u5728\u6570\u5b66\u4e0a\u7684\u610f\u4e49\u662f\u7ecf\u8fc7\u56fe\u50cf\u4e0a\u67d0\u4e00\u70b9\u7684\u5207\u7ebf\u7684\u659c\u7387\uff1a} \\frac{dA}{dr}\\ \\text{\u522b\u628a\u6c42\u5207\u7ebf\u770b\u505a\u6c42\u201c\u67d0\u4e00\u70b9\u77ac\u95f4\u7684\u53d8\u5316\u7387\u201d\uff0c\u800c\u662f\u8981\u770b\u6210\u6c42\u201c\u67d0\u4e00\u70b9\u9644\u8fd1\u7684\u53d8\u5316\u7387\u201d\u7684\u6700\u4f73\u8fd1\u5316} $$ Derivtive \u5bfc\u6570 \u200b \u5bfc\u6570(Derivative)\uff0c\u4e5f\u53eb\u5bfc\u51fd\u6570\u503c\u3002\u53c8\u540d\u5fae\u5546\uff0c\u662f\u5fae\u79ef\u5206\u4e2d\u7684\u91cd\u8981\u57fa\u7840\u6982\u5ff5\u3002\u5f53\u51fd\u6570 $y=f(x)$ \u7684\u81ea\u53d8\u91cf $x$ \u5728\u4e00\u70b9 $x_0$ \u4e0a\u4ea7\u751f\u4e00\u4e2a\u589e\u91cf $\\Delta x$ \u65f6\uff0c\u51fd\u6570\u8f93\u51fa\u503c\u7684\u589e\u91cf $\\Delta y$ \u4e0e\u81ea\u53d8\u91cf\u589e\u91cf $\\Delta x$ \u7684\u6bd4\u503c\u5728 $\\Delta x$ \u8d8b\u4e8e0\u65f6\u7684\u6781\u9650a\u5982\u679c\u5b58\u5728\uff0ca\u5373\u4e3a\u5728 $x_0$ \u5904\u7684\u5bfc\u6570\uff0c\u8bb0\u4f5c $f'(x_0)$ \u6216 $\\frac{\\rm df(x_0)}{\\rm dx}\u200b$ \u3002 \u200b \u5fae\u5c0f\u53d8\u5316\u91cf\u624d\u662f\u5bfc\u6570\u7684\u672c\u8d28\uff0c\u60f3\u4ee5\u5bfc\u6570\u6709\u4e00\u4e2a\u66f4\u51c6\u786e\u7684\u8ba4\u8bc6\uff0c\u5c31\u9700\u8981\u770b\u51fd\u6570\u7684\u771f\u5b9e\u542b\u4e49 \u200b \u4e09\u79cd\u7ec4\u5408\u51fd\u6570\u7684\u57fa\u672c\u65b9\u6cd5 \u51fd\u6570\u76f8\u52a0(\u52a0\u6cd5\u6cd5\u5219 sum rule) $$ \\frac{d}{dx}(g(x)+h(x)) = \\frac{dg}{dx} + \\frac{dh}{dx} $$ \u51fd\u6570\u76f8\u4e58(\u4e58\u6cd5\u6cd5\u5219) $$ \\text{\u5de6\u4e58\u53f3\u5bfc+\u53f3\u4e58\u5de6\u5bfc\uff1a}\\frac{d}{dx}(g(x)h(x))=g(x)\\frac{d}{dx}h(x)+h(x)\\frac{d}{dx}g(x) $$ \u51fd\u6570\u5957\u51fd\u6570(\u51fd\u6570\u590d\u5408 Function composition) $$ \\text{\u94fe\u5f0f\u6cd5\u5219(Chain rule): } \\frac{d}{dx}g(h(x))=\\frac{dg}{dh}\\frac{dh}{dx}=\\frac{dg}{dx}\\ \\frac{d}{dx}sin(x_2)=cos(x^2)2x $$","title":"\u5fae\u79ef\u5206"},{"location":"Math/\u5fae\u79ef\u5206/#_1","text":"\u4e09\u4e2a\u6838\u5fc3\u601d\u60f3\uff1a\u79ef\u5206\u3001\u5fae\u5206\u3001\u4e24\u8005\u4e92\u9006 $$ \\int_0^R\\frac{dA}{dr}=A(R)\\ \\text{\u79ef\u5206\uff1a}\\int_0^R \\quad \\text{\u5fae\u5206\uff1a}\\frac{dA}{dr} \\quad \\text{\u4e24\u8005\u4e92\u9006\uff1a}A(R) $$ $$ \\text{\u5bfc\u6570\u5728\u6570\u5b66\u4e0a\u7684\u610f\u4e49\u662f\u7ecf\u8fc7\u56fe\u50cf\u4e0a\u67d0\u4e00\u70b9\u7684\u5207\u7ebf\u7684\u659c\u7387\uff1a} \\frac{dA}{dr}\\ \\text{\u522b\u628a\u6c42\u5207\u7ebf\u770b\u505a\u6c42\u201c\u67d0\u4e00\u70b9\u77ac\u95f4\u7684\u53d8\u5316\u7387\u201d\uff0c\u800c\u662f\u8981\u770b\u6210\u6c42\u201c\u67d0\u4e00\u70b9\u9644\u8fd1\u7684\u53d8\u5316\u7387\u201d\u7684\u6700\u4f73\u8fd1\u5316} $$","title":"\u5fae\u79ef\u5206"},{"location":"Math/\u5fae\u79ef\u5206/#derivtive","text":"\u200b \u5bfc\u6570(Derivative)\uff0c\u4e5f\u53eb\u5bfc\u51fd\u6570\u503c\u3002\u53c8\u540d\u5fae\u5546\uff0c\u662f\u5fae\u79ef\u5206\u4e2d\u7684\u91cd\u8981\u57fa\u7840\u6982\u5ff5\u3002\u5f53\u51fd\u6570 $y=f(x)$ \u7684\u81ea\u53d8\u91cf $x$ \u5728\u4e00\u70b9 $x_0$ \u4e0a\u4ea7\u751f\u4e00\u4e2a\u589e\u91cf $\\Delta x$ \u65f6\uff0c\u51fd\u6570\u8f93\u51fa\u503c\u7684\u589e\u91cf $\\Delta y$ \u4e0e\u81ea\u53d8\u91cf\u589e\u91cf $\\Delta x$ \u7684\u6bd4\u503c\u5728 $\\Delta x$ \u8d8b\u4e8e0\u65f6\u7684\u6781\u9650a\u5982\u679c\u5b58\u5728\uff0ca\u5373\u4e3a\u5728 $x_0$ \u5904\u7684\u5bfc\u6570\uff0c\u8bb0\u4f5c $f'(x_0)$ \u6216 $\\frac{\\rm df(x_0)}{\\rm dx}\u200b$ \u3002 \u200b \u5fae\u5c0f\u53d8\u5316\u91cf\u624d\u662f\u5bfc\u6570\u7684\u672c\u8d28\uff0c\u60f3\u4ee5\u5bfc\u6570\u6709\u4e00\u4e2a\u66f4\u51c6\u786e\u7684\u8ba4\u8bc6\uff0c\u5c31\u9700\u8981\u770b\u51fd\u6570\u7684\u771f\u5b9e\u542b\u4e49 \u200b","title":"Derivtive \u5bfc\u6570"},{"location":"Math/\u5fae\u79ef\u5206/#_2","text":"","title":"\u4e09\u79cd\u7ec4\u5408\u51fd\u6570\u7684\u57fa\u672c\u65b9\u6cd5"},{"location":"Math/\u5fae\u79ef\u5206/#sum-rule","text":"$$ \\frac{d}{dx}(g(x)+h(x)) = \\frac{dg}{dx} + \\frac{dh}{dx} $$","title":"\u51fd\u6570\u76f8\u52a0(\u52a0\u6cd5\u6cd5\u5219 sum rule)"},{"location":"Math/\u5fae\u79ef\u5206/#_3","text":"$$ \\text{\u5de6\u4e58\u53f3\u5bfc+\u53f3\u4e58\u5de6\u5bfc\uff1a}\\frac{d}{dx}(g(x)h(x))=g(x)\\frac{d}{dx}h(x)+h(x)\\frac{d}{dx}g(x) $$","title":"\u51fd\u6570\u76f8\u4e58(\u4e58\u6cd5\u6cd5\u5219)"},{"location":"Math/\u5fae\u79ef\u5206/#function-composition","text":"$$ \\text{\u94fe\u5f0f\u6cd5\u5219(Chain rule): } \\frac{d}{dx}g(h(x))=\\frac{dg}{dh}\\frac{dh}{dx}=\\frac{dg}{dx}\\ \\frac{d}{dx}sin(x_2)=cos(x^2)2x $$","title":"\u51fd\u6570\u5957\u51fd\u6570(\u51fd\u6570\u590d\u5408 Function composition)"},{"location":"Math/\u6570\u7cfb/","text":"\u6570\u7cfb \u81ea\u7136\u6570 $$ N = \\begin{Bmatrix} 1,2,3,\\cdots \\end{Bmatrix} $$ \u200b \u5bf9\u52a0\u6cd5\u5c01\u95ed\uff0c\u5bf9\u51cf\u6cd5\u4e0d\u5c01\u95ed\uff0c\u56e0\u6b64\u53d1\u5c55\u51fa\u6574\u6570 \u6574\u6570 $$ Z = \\begin{Bmatrix} \\cdots -2,-1,0,1,2\\cdots \\end{Bmatrix} $$ \u200b \u5bf9\u52a0\u51cf\u4e58\u6cd5\u5c01\u95ed\uff0c\u5bf9\u9664\u6cd5\u4e0d\u5c01\u95ed\uff0c\u56e0\u6b64\u53d1\u5c55\u51fa\u6709\u7406\u6570 \u6709\u7406\u6570 $$ Q= \\begin{Bmatrix} x\\mid x=\\frac{p}{q}\\quad p,q\\in Z \\end{Bmatrix} $$ \u5bf9\u52a0\u51cf\u4e58\u9664\u5c01\u95ed\uff0c\u5bf9\u5f00\u65b9\u4e0d\u5c01\u95ed\uff0c\u56e0\u6b64\u53d1\u5c55\u51fa\u5b9e\u6570 \u5b9e\u6570 $$ \\overrightarrow{\\qquad-2\\quad-1\\quad0\\quad1\\quad2\\qquad} $$ \u590d\u6570 \u865a\u6570: $i^2 = -1\\implies i=\\sqrt{-1}$ \u590d\u6570 $a+bi\\quad\\mid\\quad a,b\\in R $ \u6b27\u62c9\u516c\u5f0f\uff1a $$ e^{i\\theta}=cos\\theta+isin\\theta\\ e^{i\\pi}=-1\\ e^{i\\pi}+1=0 $$ \u5e73\u65b9\u8fd0\u7b97\u4fdd\u6301\u5947\u5076\u6027 \u5e42\u8fd0\u7b97\uff08\u82f1\u8bed\uff1aExponentiation\uff09\uff0c\u53c8\u79f0\u6307\u6570\u8fd0\u7b97\uff0c\u662f\u6570\u5b66\u8fd0\u7b97\uff0c\u8868\u8fbe\u5f0f\u4e3a $b^n$\u3002\u5176\u4e2d\uff0cb \u79f0\u4e3a\u5e95\u6570\uff0c\u800c n \u79f0\u4e3a\u6307\u6570\uff0c\u901a\u5e38\u6307\u6570\u5199\u6210\u4e0a\u6807\uff0c\u653e\u5728\u5e95\u6570\u7684\u53f3\u8fb9\u3002 $$ \\text{\u6307\u6570\u51fd\u6570\u91cd\u8981\u7684\u6027\u8d28\uff1a}x^{a+b}=x^ax^b\\ \u80fd\u4ece\u52a0\u6cd5\u7684\u601d\u60f3\uff0c\u6bd4\u5982\u5fae\u5c0f\u7684\u65f6\u95f4\u53d8\u5316\u8054\u7cfb\u5230\u4e58\u6cd5\u7684\u601d\u60f3\u4e0a\uff0c\u6bd4\u5982\u53d8\u5316\u7387\u548c\u6bd4\u7387 $$ \u5728\u6570\u5b66\u4e2d\uff0c\u5bf9\u6570\u662f\u5e42\u8fd0\u7b97\u7684\u9006\u8fd0\u7b97\u3002\u4ea6\u5373\u662f\u8bf4\uff0c\u5047\u5982 $x = \\beta^y$ \uff0c\u5219\u6709 $y = \\log_\\beta^x\u200b$","title":"\u6570\u7cfb"},{"location":"Math/\u6570\u7cfb/#_1","text":"","title":"\u6570\u7cfb"},{"location":"Math/\u6570\u7cfb/#_2","text":"$$ N = \\begin{Bmatrix} 1,2,3,\\cdots \\end{Bmatrix} $$ \u200b \u5bf9\u52a0\u6cd5\u5c01\u95ed\uff0c\u5bf9\u51cf\u6cd5\u4e0d\u5c01\u95ed\uff0c\u56e0\u6b64\u53d1\u5c55\u51fa\u6574\u6570","title":"\u81ea\u7136\u6570"},{"location":"Math/\u6570\u7cfb/#_3","text":"$$ Z = \\begin{Bmatrix} \\cdots -2,-1,0,1,2\\cdots \\end{Bmatrix} $$ \u200b \u5bf9\u52a0\u51cf\u4e58\u6cd5\u5c01\u95ed\uff0c\u5bf9\u9664\u6cd5\u4e0d\u5c01\u95ed\uff0c\u56e0\u6b64\u53d1\u5c55\u51fa\u6709\u7406\u6570","title":"\u6574\u6570"},{"location":"Math/\u6570\u7cfb/#_4","text":"$$ Q= \\begin{Bmatrix} x\\mid x=\\frac{p}{q}\\quad p,q\\in Z \\end{Bmatrix} $$ \u5bf9\u52a0\u51cf\u4e58\u9664\u5c01\u95ed\uff0c\u5bf9\u5f00\u65b9\u4e0d\u5c01\u95ed\uff0c\u56e0\u6b64\u53d1\u5c55\u51fa\u5b9e\u6570","title":"\u6709\u7406\u6570"},{"location":"Math/\u6570\u7cfb/#_5","text":"$$ \\overrightarrow{\\qquad-2\\quad-1\\quad0\\quad1\\quad2\\qquad} $$","title":"\u5b9e\u6570"},{"location":"Math/\u6570\u7cfb/#_6","text":"\u865a\u6570: $i^2 = -1\\implies i=\\sqrt{-1}$ \u590d\u6570 $a+bi\\quad\\mid\\quad a,b\\in R $ \u6b27\u62c9\u516c\u5f0f\uff1a $$ e^{i\\theta}=cos\\theta+isin\\theta\\ e^{i\\pi}=-1\\ e^{i\\pi}+1=0 $$ \u5e73\u65b9\u8fd0\u7b97\u4fdd\u6301\u5947\u5076\u6027 \u5e42\u8fd0\u7b97\uff08\u82f1\u8bed\uff1aExponentiation\uff09\uff0c\u53c8\u79f0\u6307\u6570\u8fd0\u7b97\uff0c\u662f\u6570\u5b66\u8fd0\u7b97\uff0c\u8868\u8fbe\u5f0f\u4e3a $b^n$\u3002\u5176\u4e2d\uff0cb \u79f0\u4e3a\u5e95\u6570\uff0c\u800c n \u79f0\u4e3a\u6307\u6570\uff0c\u901a\u5e38\u6307\u6570\u5199\u6210\u4e0a\u6807\uff0c\u653e\u5728\u5e95\u6570\u7684\u53f3\u8fb9\u3002 $$ \\text{\u6307\u6570\u51fd\u6570\u91cd\u8981\u7684\u6027\u8d28\uff1a}x^{a+b}=x^ax^b\\ \u80fd\u4ece\u52a0\u6cd5\u7684\u601d\u60f3\uff0c\u6bd4\u5982\u5fae\u5c0f\u7684\u65f6\u95f4\u53d8\u5316\u8054\u7cfb\u5230\u4e58\u6cd5\u7684\u601d\u60f3\u4e0a\uff0c\u6bd4\u5982\u53d8\u5316\u7387\u548c\u6bd4\u7387 $$ \u5728\u6570\u5b66\u4e2d\uff0c\u5bf9\u6570\u662f\u5e42\u8fd0\u7b97\u7684\u9006\u8fd0\u7b97\u3002\u4ea6\u5373\u662f\u8bf4\uff0c\u5047\u5982 $x = \\beta^y$ \uff0c\u5219\u6709 $y = \\log_\\beta^x\u200b$","title":"\u590d\u6570"},{"location":"Math/\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4/","text":"\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4 n linear equations, n unknowns. Row picture column picture Matrix form This is a linear equation and that word linear got the letters for line in it. \u77e9\u9635\u80fd\u7528\u6765\u63cf\u8ff0\u5bf9\u7a7a\u95f4\u7684\u64cd\u7eb5 \u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u8868\u8ff0\u5f62\u5f0f \u65b9\u7a0b\u7ec4\uff1a $$ 2x + 5y + 3z = -3\\ 4x + 0y + 8z = 0\\ 1x + 3y + 0z = 2 $$ \u77e9\u9635\u5f62\u5f0f\uff1a $$ \\begin{bmatrix} 2 & 5 & 3\\ 4 & 0 & 8\\ 1 & 3 & 0 \\end{bmatrix} \\begin{bmatrix} x\\ y\\ z \\end{bmatrix} = \\begin{bmatrix} -3\\ 0\\ 2 \\end{bmatrix} $$ \u79f0\u7cfb\u6570\u77e9\u9635\u4e3aA \u672a\u77e5\u91cf\u7684\u5411\u91cf\u4e3a\u7c97\u4f53\u7684 x \u53f3\u4fa7\u7684\u5e38\u6570\u5411\u91cf\u4e3av $$ A\\vec{x}=\\vec{v} $$ \u4e24\u4e2a\u6570\u4e58\u5411\u91cf\u7684\u548c\u88ab\u79f0\u4e3a\u8fd9\u4e24\u4e2a\u5411\u91cf\u7684\u7ebf\u6027\u7ec4\u5408 \u4e00\u822c\u5730\uff0c\u7ec4\u6027\u7ec4\u5408\u662f\u4e00\u4e9b\u62bd\u8c61\u7684\u5411\u91cf\u5404\u81ea\u4e58\u4e0a\u4e00\u4e2a\u6807\u91cf\u540e\u518d\u76f8\u52a0 \u7ebf\u6027\u4ee3\u6570\u7d27\u7d27\u56f4\u7ed5\u5411\u91cf\u52a0\u6cd5\u4e0e\u6570\u4e58 \u5f20\u6210\u7a7a\u95f4 \u6240\u6709\u53ef\u4ee5\u8868\u793a\u4e3a\u7ed9\u5b9a\u5411\u91cf\u7ebf\u6027\u7ec4\u5408\u7684\u5411\u91cf\u7684\u96c6\u5408\u79f0\u4e3a\u201c\u5f20\u6210\u7684\u7a7a\u95f4\u201d \u5bf9\u5927\u90e8\u5206 \u4e8c\u7ef4\u5411\u91cf\u5bf9 \u6765\u8bf4\uff0c\u5b83\u4eec\u5f20\u6210\u7684\u7a7a\u95f4\u662f\u6240\u6709\u4e8c\u7ef4\u5411\u91cf\u7684\u96c6\u5408(\u6574\u4e2a\u65e0\u9650\u5927\u7684\u4e8c\u7ef4\u5e73\u9762) \u4f46\u5f53\u5171\u7ebf\u65f6\uff0c\u5b83\u4eec\u5f20\u6210\u7684\u7a7a\u95f4\u5c31\u662f\u7ec8\u70b9\u843d\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u7684\u5411\u91cf\u7684\u96c6\u5408(\u4e00\u6761\u76f4\u7ebf) \u6709\u591a\u4e2a\u5411\u91cf\uff0c\u5e76\u4e14\u53ef\u4ee5\u79fb\u9664\u5176\u4e2d\u4e00\u4e2a\u800c\u4e0d\u51cf\u5c0f\u5f20\u6210\u7684\u7a7a\u95f4\u65f6\uff0c\u79f0\u5b83\u4eec\u662f\u201c\u7ebf\u6027\u76f8\u5173\u201d\u7684\uff0c\u53e6\u4e00\u79cd\u8868\u8ff0\u65b9\u6cd5\u662f\u5176\u4e2d\u4e00\u4e2a\u5411\u91cf\u53ef\u4ee5\u8868\u793a\u4e3a\u5176\u5b83\u5411\u91cf\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5411\u91cf\u5df2\u7ecf\u843d\u5728\u5176\u5b83\u5411\u91cf\u5f20\u6210\u7684\u7a7a\u95f4\u4e4b\u4e2d \u5982\u679c\u6240\u6709\u5411\u91cf\u90fd\u7ed9\u5f20\u6210\u7684\u7a7a\u95f4\u589e\u6dfb\u4e86\u65b0\u7684\u7ef4\u5ea6\uff0c\u5b83\u4eec\u5c31\u88ab\u79f0\u4e3a\u662f\u201c\u7ebf\u6027\u65e0\u5173\u201d Technical definition of basis(\u57fa\u7684\u4e25\u683c\u5b9a\u4e49): The basis of a vector space is a set of linearly independent vectors that span the full space. \u5411\u91cf\u7a7a\u95f4\u7684\u4e00\u7ec4\u57fa\u662f\u5f20\u6210\u8be5\u7a7a\u95f4\u7684\u4e00\u4e2a\u7ebf\u6027\u65e0\u5173\u5411\u91cf\u96c6 Linear transformation \u7ebf\u6027\u53d8\u6362 \u4e25\u683c\u610f\u4e49\u4e0a\u8bf4\uff0c\u7ebf\u6027\u53d8\u6362\u662f\u5c06\u5411\u91cf\u4f5c\u4e3a\u8f93\u5165\u548c\u8f93\u51fa\u7684\u4e00\u7c7b\u51fd\u6570 \u5982\u679c\u4e00\u4e2a\u53d8\u6362\u5177\u6709\u4ee5\u4e0b\u4e24\u6761\u6027\u8d28\uff0c\u6211\u4eec\u5c31\u79f0\u5b83\u662f\u7ebf\u6027\u7684\uff1a \u76f4\u7ebf\u5728\u53d8\u6362\u540e\u4ecd\u7136\u4fdd\u6301\u4e3a\u76f4\u7ebf\uff0c\u4e0d\u80fd\u6709\u6240\u5f2f\u66f2(\u5e73\u884c\u4e14\u7b49\u8ddd) \u539f\u70b9\u5fc5\u987b\u4fdd\u6301\u56fa\u5b9a \u4e00\u4e2a\u4e8c\u7ef4\u7ebf\u6027\u53d8\u6362\u4ec5\u7531\u56db\u4e2a\u6570\u5b57\u5b8c\u5168\u786e\u5b9a\uff0c\u53d8\u6362\u540ei\u5e3d\u7684\u4e24\u4e2a\u5750\u6807\u4e0e\u53d8\u6362\u540ej\u5e3d\u7684\u4e24\u4e2a\u5750\u6807\uff0c\u901a\u5e38\u5c06\u8fd9\u4e9b\u5750\u6807\u5305\u88c5\u5728\u4e00\u4e2a2*2\u7684\u683c\u5b50\u4e2d\uff0c\u79f0\u5b83\u4e3a2*2\u77e9\u9635 \uff1a $$ { i(3,-2)\\ j(2,1) } = \\begin{bmatrix} 3 & 2\\ -2 & 1 \\end{bmatrix} $$ Linearly dependent columns \u5217\u7ebf\u6027\u76f8\u5173 \u5982\u679c\u53d8\u6362\u540e\u7684i\u5e3d\u548c\u53d8\u6362\u540e\u7684j\u5e3d\u662f\u7ebf\u6027\u76f8\u5173\u7684\uff0c\u5219\u79f0\u4e3a\u5217\u7ebf\u6027\u76f8\u5173\u3002 \u201c\u7ebf\u6027\u201d\u7684\u4e25\u683c\u5b9a\u4e49\u5982\u4e0b\uff1a \u82e5\u4e00\u4e2a\u53d8\u6362L\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u6761\u6027\u8d28\uff1a $$ L(\\vec{v}+\\vec{w})=L(\\vec{v})+L(\\vec{w})\\tag{1} $$ $$ L(c\\vec{v})=cL(\\vec{v})\\tag{2} $$ \u6027\u8d281\u4e3a \u201c\u53ef\u52a0\u6027\u201d \u6027\u8d282\u4e3a \u201c\u6210\u6bd4\u4f8b\u201d(\u4e00\u9636\u9f50\u6b21) \u5219\u79f0L\u662f\u7ebf\u6027\u7684\u3002 \u77e9\u9635\u5411\u91cf\u7684\u4e58\u79ef $$ \\begin{bmatrix} a & b\\ c & d \\end{bmatrix} + \\begin{bmatrix} x\\ y \\end{bmatrix} = x \\begin{bmatrix} a\\ c \\end{bmatrix} + y \\begin{bmatrix} b\\ d \\end{bmatrix} = \\begin{bmatrix} ax+by\\ cx+dy \\end{bmatrix} $$ \u590d\u5408\u7ebf\u6027\u53d8\u6362 $$ \\begin{bmatrix} 1 & 1\\ 0 & 1 \\end{bmatrix} (\\begin{bmatrix} 0 & -1\\ 1 & 0 \\end{bmatrix} \\begin{bmatrix} x\\ y \\end{bmatrix}) = \\begin{bmatrix} 1 & -1\\ 1 & 0 \\end{bmatrix} \\begin{bmatrix} x\\ y \\end{bmatrix}\\tag{3} $$ $$ \\begin{bmatrix} 1 & 1\\ 0 & 1 \\end{bmatrix} \\begin{bmatrix} 0 & -1\\ 1 & 0 \\end{bmatrix} = \\begin{bmatrix} 1 & -1\\ 1 & 0 \\end{bmatrix}\\tag{4} $$ $$ \\begin{bmatrix} a & b\\ c & d \\end{bmatrix} \\begin{bmatrix} e & f\\ g & h \\end{bmatrix} = \\begin{bmatrix} ae+bg & af+bh\\ ce+dg & cf+dh \\end{bmatrix}\\tag{5} $$ $$ M_1M_2\\neq M_2M_1 $$ \u4e24\u4e2a\u77e9\u9635\u76f8\u4e58\u6709\u7740\u51e0\u4f55\u610f\u4e49\uff0c\u4e5f\u5c31\u662f\u4e24\u4e2a\u7ebf\u6027\u53d8\u6362\u76f8\u7ee7\u4f5c\u7528(\u7531\u516c\u5f0f\u7684\u53f3\u81f3\u5de6) Associativity \u7ed3\u5408\u5f8b $$ (AB)C=A(BC) $$ \u77e9\u9635\u7b26\u5408\u4e58\u6cd5\u7ed3\u5408\u5f8b $$ \\begin{bmatrix} 0 & -2 & 2\\ 5 & 1 & 5\\ 1 & 4 & -1 \\end{bmatrix} \\begin{bmatrix} 0 & 1 & 2\\ 3 & 4 & 5\\ 6 & 7 & 8 \\end{bmatrix} = \\begin{bmatrix} (\\begin{bmatrix} 0 & -2 & 2\\ 5 & 1 & 5\\ 1 & 4 & -1 \\end{bmatrix} \\begin{bmatrix} 0\\ 3\\ 6 \\end{bmatrix}) & (\\begin{bmatrix} 0 & -2 & 2\\ 5 & 1 & 5\\ 1 & 4 & -1 \\end{bmatrix} \\begin{bmatrix} 1\\ 4\\ 7 \\end{bmatrix}) & (\\begin{bmatrix} 0 & -2 & 2\\ 5 & 1 & 5\\ 1 & 4 & -1 \\end{bmatrix} \\begin{bmatrix} 2\\ 5\\ 8 \\end{bmatrix}) \\end{bmatrix} = \\begin{bmatrix} 6 & 6 & 6\\ 33 & 44 & 55\\ 6 & 10 & 14 \\end{bmatrix} $$ \u884c\u5217\u5f0f \u7ebf\u6027\u53d8\u6362\u6539\u53d8\u9762\u79ef\u7684\u6bd4\u4f8b\uff0c\u88ab\u79f0\u4e3a\u8fd9\u4e2a\u53d8\u6362\u7684\u884c\u5217\u5f0f $$ det(\\begin{bmatrix} a & b\\ c & d \\end{bmatrix}) = ad - bc $$ Inverse transformation \u9006\u53d8\u6362 $$ A^{-1}A= \\begin{bmatrix} 1 & 0\\ 0 & 1 \\end{bmatrix} $$ $$ A^{-1}A\\vec{x}=\\vec{x} $$ identity transformation \u6052\u7b49\u53d8\u6362 $$ \\text {\u4ec0\u4e48\u90fd\u4e0d\u505a\u7684\u53d8\u6362\uff1a} \\begin{bmatrix} 1 & 0\\ 0 & 1 \\end{bmatrix} $$ Inverse matrices \u9006\u77e9\u9635 Column space \u5217\u7a7a\u95f4 $$ \\text {\u6240\u6709\u53ef\u80fd\u7684\u8f93\u51fa\u5411\u91cf}A\\vec{v}\u6784\u6210\u7684\u96c6\u5408\\text{\u79f0\u4e3a\u77e9\u9635\u7684\u201c\u5217\u7a7a\u95f4\u201d} $$ Rank \u79e9 \u8868\u793a\u7ebf\u6027\u53d8\u5316\u540e\u7684\u7a7a\u95f4\u7ef4\u6570 Null space \u96f6\u7a7a\u95f4 \u7ebf\u6027\u53d8\u6362\u540e\u843d\u5728\u539f\u70b9\u7684\u96c6\u5408\u88ab\u79f0\u4e3a\u77e9\u9635\u7684\u201c\u96f6\u7a7a\u95f4\u201d\u6216\"\u6838\"","title":"\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4"},{"location":"Math/\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4/#_1","text":"n linear equations, n unknowns. Row picture column picture Matrix form This is a linear equation and that word linear got the letters for line in it. \u77e9\u9635\u80fd\u7528\u6765\u63cf\u8ff0\u5bf9\u7a7a\u95f4\u7684\u64cd\u7eb5 \u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u8868\u8ff0\u5f62\u5f0f \u65b9\u7a0b\u7ec4\uff1a $$ 2x + 5y + 3z = -3\\ 4x + 0y + 8z = 0\\ 1x + 3y + 0z = 2 $$ \u77e9\u9635\u5f62\u5f0f\uff1a $$ \\begin{bmatrix} 2 & 5 & 3\\ 4 & 0 & 8\\ 1 & 3 & 0 \\end{bmatrix} \\begin{bmatrix} x\\ y\\ z \\end{bmatrix} = \\begin{bmatrix} -3\\ 0\\ 2 \\end{bmatrix} $$ \u79f0\u7cfb\u6570\u77e9\u9635\u4e3aA \u672a\u77e5\u91cf\u7684\u5411\u91cf\u4e3a\u7c97\u4f53\u7684 x \u53f3\u4fa7\u7684\u5e38\u6570\u5411\u91cf\u4e3av $$ A\\vec{x}=\\vec{v} $$ \u4e24\u4e2a\u6570\u4e58\u5411\u91cf\u7684\u548c\u88ab\u79f0\u4e3a\u8fd9\u4e24\u4e2a\u5411\u91cf\u7684\u7ebf\u6027\u7ec4\u5408 \u4e00\u822c\u5730\uff0c\u7ec4\u6027\u7ec4\u5408\u662f\u4e00\u4e9b\u62bd\u8c61\u7684\u5411\u91cf\u5404\u81ea\u4e58\u4e0a\u4e00\u4e2a\u6807\u91cf\u540e\u518d\u76f8\u52a0 \u7ebf\u6027\u4ee3\u6570\u7d27\u7d27\u56f4\u7ed5\u5411\u91cf\u52a0\u6cd5\u4e0e\u6570\u4e58","title":"\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4"},{"location":"Math/\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4/#_2","text":"\u6240\u6709\u53ef\u4ee5\u8868\u793a\u4e3a\u7ed9\u5b9a\u5411\u91cf\u7ebf\u6027\u7ec4\u5408\u7684\u5411\u91cf\u7684\u96c6\u5408\u79f0\u4e3a\u201c\u5f20\u6210\u7684\u7a7a\u95f4\u201d \u5bf9\u5927\u90e8\u5206 \u4e8c\u7ef4\u5411\u91cf\u5bf9 \u6765\u8bf4\uff0c\u5b83\u4eec\u5f20\u6210\u7684\u7a7a\u95f4\u662f\u6240\u6709\u4e8c\u7ef4\u5411\u91cf\u7684\u96c6\u5408(\u6574\u4e2a\u65e0\u9650\u5927\u7684\u4e8c\u7ef4\u5e73\u9762) \u4f46\u5f53\u5171\u7ebf\u65f6\uff0c\u5b83\u4eec\u5f20\u6210\u7684\u7a7a\u95f4\u5c31\u662f\u7ec8\u70b9\u843d\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u7684\u5411\u91cf\u7684\u96c6\u5408(\u4e00\u6761\u76f4\u7ebf) \u6709\u591a\u4e2a\u5411\u91cf\uff0c\u5e76\u4e14\u53ef\u4ee5\u79fb\u9664\u5176\u4e2d\u4e00\u4e2a\u800c\u4e0d\u51cf\u5c0f\u5f20\u6210\u7684\u7a7a\u95f4\u65f6\uff0c\u79f0\u5b83\u4eec\u662f\u201c\u7ebf\u6027\u76f8\u5173\u201d\u7684\uff0c\u53e6\u4e00\u79cd\u8868\u8ff0\u65b9\u6cd5\u662f\u5176\u4e2d\u4e00\u4e2a\u5411\u91cf\u53ef\u4ee5\u8868\u793a\u4e3a\u5176\u5b83\u5411\u91cf\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5411\u91cf\u5df2\u7ecf\u843d\u5728\u5176\u5b83\u5411\u91cf\u5f20\u6210\u7684\u7a7a\u95f4\u4e4b\u4e2d \u5982\u679c\u6240\u6709\u5411\u91cf\u90fd\u7ed9\u5f20\u6210\u7684\u7a7a\u95f4\u589e\u6dfb\u4e86\u65b0\u7684\u7ef4\u5ea6\uff0c\u5b83\u4eec\u5c31\u88ab\u79f0\u4e3a\u662f\u201c\u7ebf\u6027\u65e0\u5173\u201d Technical definition of basis(\u57fa\u7684\u4e25\u683c\u5b9a\u4e49): The basis of a vector space is a set of linearly independent vectors that span the full space. \u5411\u91cf\u7a7a\u95f4\u7684\u4e00\u7ec4\u57fa\u662f\u5f20\u6210\u8be5\u7a7a\u95f4\u7684\u4e00\u4e2a\u7ebf\u6027\u65e0\u5173\u5411\u91cf\u96c6","title":"\u5f20\u6210\u7a7a\u95f4"},{"location":"Math/\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4/#linear-transformation","text":"\u4e25\u683c\u610f\u4e49\u4e0a\u8bf4\uff0c\u7ebf\u6027\u53d8\u6362\u662f\u5c06\u5411\u91cf\u4f5c\u4e3a\u8f93\u5165\u548c\u8f93\u51fa\u7684\u4e00\u7c7b\u51fd\u6570 \u5982\u679c\u4e00\u4e2a\u53d8\u6362\u5177\u6709\u4ee5\u4e0b\u4e24\u6761\u6027\u8d28\uff0c\u6211\u4eec\u5c31\u79f0\u5b83\u662f\u7ebf\u6027\u7684\uff1a \u76f4\u7ebf\u5728\u53d8\u6362\u540e\u4ecd\u7136\u4fdd\u6301\u4e3a\u76f4\u7ebf\uff0c\u4e0d\u80fd\u6709\u6240\u5f2f\u66f2(\u5e73\u884c\u4e14\u7b49\u8ddd) \u539f\u70b9\u5fc5\u987b\u4fdd\u6301\u56fa\u5b9a \u4e00\u4e2a\u4e8c\u7ef4\u7ebf\u6027\u53d8\u6362\u4ec5\u7531\u56db\u4e2a\u6570\u5b57\u5b8c\u5168\u786e\u5b9a\uff0c\u53d8\u6362\u540ei\u5e3d\u7684\u4e24\u4e2a\u5750\u6807\u4e0e\u53d8\u6362\u540ej\u5e3d\u7684\u4e24\u4e2a\u5750\u6807\uff0c\u901a\u5e38\u5c06\u8fd9\u4e9b\u5750\u6807\u5305\u88c5\u5728\u4e00\u4e2a2*2\u7684\u683c\u5b50\u4e2d\uff0c\u79f0\u5b83\u4e3a2*2\u77e9\u9635 \uff1a $$ { i(3,-2)\\ j(2,1) } = \\begin{bmatrix} 3 & 2\\ -2 & 1 \\end{bmatrix} $$","title":"Linear transformation \u7ebf\u6027\u53d8\u6362"},{"location":"Math/\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4/#linearly-dependent-columns","text":"\u5982\u679c\u53d8\u6362\u540e\u7684i\u5e3d\u548c\u53d8\u6362\u540e\u7684j\u5e3d\u662f\u7ebf\u6027\u76f8\u5173\u7684\uff0c\u5219\u79f0\u4e3a\u5217\u7ebf\u6027\u76f8\u5173\u3002 \u201c\u7ebf\u6027\u201d\u7684\u4e25\u683c\u5b9a\u4e49\u5982\u4e0b\uff1a \u82e5\u4e00\u4e2a\u53d8\u6362L\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u6761\u6027\u8d28\uff1a $$ L(\\vec{v}+\\vec{w})=L(\\vec{v})+L(\\vec{w})\\tag{1} $$ $$ L(c\\vec{v})=cL(\\vec{v})\\tag{2} $$ \u6027\u8d281\u4e3a \u201c\u53ef\u52a0\u6027\u201d \u6027\u8d282\u4e3a \u201c\u6210\u6bd4\u4f8b\u201d(\u4e00\u9636\u9f50\u6b21) \u5219\u79f0L\u662f\u7ebf\u6027\u7684\u3002","title":"Linearly dependent columns \u5217\u7ebf\u6027\u76f8\u5173"},{"location":"Math/\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4/#_3","text":"$$ \\begin{bmatrix} a & b\\ c & d \\end{bmatrix} + \\begin{bmatrix} x\\ y \\end{bmatrix} = x \\begin{bmatrix} a\\ c \\end{bmatrix} + y \\begin{bmatrix} b\\ d \\end{bmatrix} = \\begin{bmatrix} ax+by\\ cx+dy \\end{bmatrix} $$","title":"\u77e9\u9635\u5411\u91cf\u7684\u4e58\u79ef"},{"location":"Math/\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4/#_4","text":"$$ \\begin{bmatrix} 1 & 1\\ 0 & 1 \\end{bmatrix} (\\begin{bmatrix} 0 & -1\\ 1 & 0 \\end{bmatrix} \\begin{bmatrix} x\\ y \\end{bmatrix}) = \\begin{bmatrix} 1 & -1\\ 1 & 0 \\end{bmatrix} \\begin{bmatrix} x\\ y \\end{bmatrix}\\tag{3} $$ $$ \\begin{bmatrix} 1 & 1\\ 0 & 1 \\end{bmatrix} \\begin{bmatrix} 0 & -1\\ 1 & 0 \\end{bmatrix} = \\begin{bmatrix} 1 & -1\\ 1 & 0 \\end{bmatrix}\\tag{4} $$ $$ \\begin{bmatrix} a & b\\ c & d \\end{bmatrix} \\begin{bmatrix} e & f\\ g & h \\end{bmatrix} = \\begin{bmatrix} ae+bg & af+bh\\ ce+dg & cf+dh \\end{bmatrix}\\tag{5} $$ $$ M_1M_2\\neq M_2M_1 $$ \u4e24\u4e2a\u77e9\u9635\u76f8\u4e58\u6709\u7740\u51e0\u4f55\u610f\u4e49\uff0c\u4e5f\u5c31\u662f\u4e24\u4e2a\u7ebf\u6027\u53d8\u6362\u76f8\u7ee7\u4f5c\u7528(\u7531\u516c\u5f0f\u7684\u53f3\u81f3\u5de6)","title":"\u590d\u5408\u7ebf\u6027\u53d8\u6362"},{"location":"Math/\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4/#associativity","text":"$$ (AB)C=A(BC) $$ \u77e9\u9635\u7b26\u5408\u4e58\u6cd5\u7ed3\u5408\u5f8b $$ \\begin{bmatrix} 0 & -2 & 2\\ 5 & 1 & 5\\ 1 & 4 & -1 \\end{bmatrix} \\begin{bmatrix} 0 & 1 & 2\\ 3 & 4 & 5\\ 6 & 7 & 8 \\end{bmatrix} = \\begin{bmatrix} (\\begin{bmatrix} 0 & -2 & 2\\ 5 & 1 & 5\\ 1 & 4 & -1 \\end{bmatrix} \\begin{bmatrix} 0\\ 3\\ 6 \\end{bmatrix}) & (\\begin{bmatrix} 0 & -2 & 2\\ 5 & 1 & 5\\ 1 & 4 & -1 \\end{bmatrix} \\begin{bmatrix} 1\\ 4\\ 7 \\end{bmatrix}) & (\\begin{bmatrix} 0 & -2 & 2\\ 5 & 1 & 5\\ 1 & 4 & -1 \\end{bmatrix} \\begin{bmatrix} 2\\ 5\\ 8 \\end{bmatrix}) \\end{bmatrix} = \\begin{bmatrix} 6 & 6 & 6\\ 33 & 44 & 55\\ 6 & 10 & 14 \\end{bmatrix} $$","title":"Associativity \u7ed3\u5408\u5f8b"},{"location":"Math/\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4/#_5","text":"\u7ebf\u6027\u53d8\u6362\u6539\u53d8\u9762\u79ef\u7684\u6bd4\u4f8b\uff0c\u88ab\u79f0\u4e3a\u8fd9\u4e2a\u53d8\u6362\u7684\u884c\u5217\u5f0f $$ det(\\begin{bmatrix} a & b\\ c & d \\end{bmatrix}) = ad - bc $$","title":"\u884c\u5217\u5f0f"},{"location":"Math/\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4/#inverse-transformation","text":"$$ A^{-1}A= \\begin{bmatrix} 1 & 0\\ 0 & 1 \\end{bmatrix} $$ $$ A^{-1}A\\vec{x}=\\vec{x} $$","title":"Inverse transformation \u9006\u53d8\u6362"},{"location":"Math/\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4/#identity-transformation","text":"$$ \\text {\u4ec0\u4e48\u90fd\u4e0d\u505a\u7684\u53d8\u6362\uff1a} \\begin{bmatrix} 1 & 0\\ 0 & 1 \\end{bmatrix} $$","title":"identity transformation \u6052\u7b49\u53d8\u6362"},{"location":"Math/\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4/#inverse-matrices","text":"","title":"Inverse matrices \u9006\u77e9\u9635"},{"location":"Math/\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4/#column-space","text":"$$ \\text {\u6240\u6709\u53ef\u80fd\u7684\u8f93\u51fa\u5411\u91cf}A\\vec{v}\u6784\u6210\u7684\u96c6\u5408\\text{\u79f0\u4e3a\u77e9\u9635\u7684\u201c\u5217\u7a7a\u95f4\u201d} $$","title":"Column space \u5217\u7a7a\u95f4"},{"location":"Math/\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4/#rank","text":"\u8868\u793a\u7ebf\u6027\u53d8\u5316\u540e\u7684\u7a7a\u95f4\u7ef4\u6570","title":"Rank \u79e9"},{"location":"Math/\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4/#null-space","text":"\u7ebf\u6027\u53d8\u6362\u540e\u843d\u5728\u539f\u70b9\u7684\u96c6\u5408\u88ab\u79f0\u4e3a\u77e9\u9635\u7684\u201c\u96f6\u7a7a\u95f4\u201d\u6216\"\u6838\"","title":"Null space \u96f6\u7a7a\u95f4"},{"location":"Math/\u7ebf\u6027\u4ee3\u6570/","text":"\u7ebf\u6027\u4ee3\u6570 \u4ee3\u5165\u6d88\u5143\u6cd5 \u4ee3\u5165\u6d88\u5143\u6cd5\u662f\u4e00\u79cd\u6570\u5b66\u6570\u5b57\u8ba1\u7b97\u65b9\u6cd5\uff0c\u662f\u9ad8\u65af\u6d88\u5143\u6cd5\u7684\u7b80\u5355\u5e94\u7528\u3002\u7531\u4e8c\u5143\u4e00\u6b21\u65b9\u7a0b\u7ec4\u4e2d\u4e00\u4e2a\u65b9\u7a0b\uff0c\u5c06\u4e00\u4e2a\u672a\u77e5\u6570\u7528\u542b\u53e6\u4e00\u672a\u77e5\u6570\u7684\u5f0f\u5b50\u8868\u793a\u51fa\u6765\uff0c\u518d\u4ee3\u5165\u53e6\u4e00\u65b9\u7a0b\uff0c\u5b9e\u73b0\u6d88\u5143\uff0c\u8fdb\u800c\u6c42\u5f97\u8fd9\u4e2a\u4e8c\u5143\u4e00\u6b21\u65b9\u7a0b\u7ec4\u7684\u89e3\u3002\u8fd9\u79cd\u65b9\u6cd5\u53eb\u505a\u4ee3\u5165\u6d88\u5143\u6cd5\uff0c\u7b80\u79f0\u4ee3\u5165\u6cd5\u3002 \u77e9\u9635 \u7531 m \u00d7 n \u4e2a\u6570aij\u6392\u6210\u7684m\u884cn\u5217\u7684\u6570\u8868\u79f0\u4e3am\u884cn\u5217\u7684\u77e9\u9635\uff0c\u7b80\u79f0m \u00d7 n\u77e9\u9635\u3002\u8bb0\u4f5c\uff1a $$ A= \\begin{bmatrix} a & b & c & d & e\\ f & g & h & i & j \\ k & l & m & n & o \\ p & q & r & s & t \\end{bmatrix} $$ \u77e9\u9635\u8fd0\u7b97\u5728\u79d1\u5b66\u8ba1\u7b97\u4e2d\u975e\u5e38\u91cd\u8981\uff0c\u800c\u77e9\u9635\u7684\u57fa\u672c\u8fd0\u7b97\u5305\u62ec\u77e9\u9635\u7684\u52a0\u6cd5\uff0c\u51cf\u6cd5\uff0c\u6570\u4e58\uff0c\u8f6c\u7f6e\uff0c\u5171\u8f6d\u548c\u5171\u8f6d\u8f6c\u7f6e\u3002 \u52a0\u6cd5\uff1a $$ \\begin{bmatrix} 1 & 4 & 2\\ 2 & 0 & 0 \\end{bmatrix} + \\begin{bmatrix} 0 & 0 & 5\\ 7 & 5 & 0 \\end{bmatrix} = \\begin{bmatrix} 1+0 & 4+0 & 2+5\\ 2+7 & 0+5 & 0+0 \\end{bmatrix} = \\begin{bmatrix} 1 & 4 & 7\\ 9 & 5 & 0 \\end{bmatrix} $$ \u77e9\u9635\u7684\u52a0\u6cd5\u6ee1\u8db3\u4e0b\u5217\u8fd0\u7b97\u5f8b(A\uff0cB\uff0cC\u90fd\u662f\u540c\u578b\u77e9\u9635)\uff1a\u5e94\u8be5\u6ce8\u610f\u7684\u662f\u53ea\u6709\u540c\u578b\u77e9\u9635\u4e4b\u95f4\u624d\u53ef\u4ee5\u8fdb\u884c\u52a0\u6cd5 \u51cf\u6cd5\uff1a $$ \\begin{bmatrix} 1 & 4 & 2\\ 2 & 0 & 0 \\end{bmatrix} - \\begin{bmatrix} 0 & 0 & 5\\ 7 & 5 & 0 \\end{bmatrix} = \\begin{bmatrix} 1-0 & 4-0 & 2-5\\ 2-7 & 0-5 & 0-0 \\end{bmatrix} = \\begin{bmatrix} 1 & 4 & -3\\ -5 & -5 & 0 \\end{bmatrix} $$ \u6570\u4e58\uff1a $$ 2\\cdot \\begin{bmatrix} 1 & 8 & -3\\ 4 & -2 & 5 \\end{bmatrix} = \\begin{bmatrix} 2\\cdot1 & 2\\cdot8 & 2\\cdot(-3)\\ 2\\cdot4 & 2\\cdot(-2) & 2\\cdot5 \\end{bmatrix} = \\begin{bmatrix} 2 & 16 & -6\\ 8 & -4 & 10 \\end{bmatrix} $$ \u77e9\u9635\u7684\u6570\u4e58\u6ee1\u8db3\u4ee5\u4e0b\u8fd0\u7b97\u5f8b\uff1a $$ \\lambda(\\mu A) = \\mu(\\lambda A)\\ \\lambda(\\mu A) = (\\lambda\\mu)A\\ (\\lambda + \\mu)A = \\lambda A + \\mu A\\ \\lambda(A + B) = \\lambda A + \\lambda B $$ \u77e9\u9635\u7684\u52a0\u51cf\u6cd5\u548c\u77e9\u9635\u7684\u6570\u4e58\u5408\u79f0\u77e9\u9635\u7684\u7ebf\u6027\u8fd0\u7b97 \u8f6c\u7f6e\uff1a \u628a\u77e9\u9635A\u7684\u884c\u548c\u5217\u4e92\u76f8\u4ea4\u6362\u6240\u4ea7\u751f\u7684\u77e9\u9635\u79f0\u4e3aA\u7684\u8f6c\u7f6e\u77e9\u9635\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u79f0\u4e3a\u77e9\u9635\u7684\u8f6c\u7f6e $$ \\begin{bmatrix} 2 & 4 & 3\\ 0 & -2 & 8 \\end{bmatrix}^T = \\begin{bmatrix} 2 & 0\\ 4 & -2\\ 3 & 8 \\end{bmatrix} $$ \u77e9\u9635\u7684\u8f6c\u7f6e\u6ee1\u8db3\u4ee5\u4e0b\u8fd0\u7b97\u5f8b\uff1a $$ (A^T)^T = A\\ (\\lambda A)^T = \\lambda A^T\\ (AB)^T = B^TA^T $$","title":"\u7ebf\u6027\u4ee3\u6570"},{"location":"Math/\u7ebf\u6027\u4ee3\u6570/#_1","text":"","title":"\u7ebf\u6027\u4ee3\u6570"},{"location":"Math/\u7ebf\u6027\u4ee3\u6570/#_2","text":"\u4ee3\u5165\u6d88\u5143\u6cd5\u662f\u4e00\u79cd\u6570\u5b66\u6570\u5b57\u8ba1\u7b97\u65b9\u6cd5\uff0c\u662f\u9ad8\u65af\u6d88\u5143\u6cd5\u7684\u7b80\u5355\u5e94\u7528\u3002\u7531\u4e8c\u5143\u4e00\u6b21\u65b9\u7a0b\u7ec4\u4e2d\u4e00\u4e2a\u65b9\u7a0b\uff0c\u5c06\u4e00\u4e2a\u672a\u77e5\u6570\u7528\u542b\u53e6\u4e00\u672a\u77e5\u6570\u7684\u5f0f\u5b50\u8868\u793a\u51fa\u6765\uff0c\u518d\u4ee3\u5165\u53e6\u4e00\u65b9\u7a0b\uff0c\u5b9e\u73b0\u6d88\u5143\uff0c\u8fdb\u800c\u6c42\u5f97\u8fd9\u4e2a\u4e8c\u5143\u4e00\u6b21\u65b9\u7a0b\u7ec4\u7684\u89e3\u3002\u8fd9\u79cd\u65b9\u6cd5\u53eb\u505a\u4ee3\u5165\u6d88\u5143\u6cd5\uff0c\u7b80\u79f0\u4ee3\u5165\u6cd5\u3002","title":"\u4ee3\u5165\u6d88\u5143\u6cd5"},{"location":"Math/\u7ebf\u6027\u4ee3\u6570/#_3","text":"\u7531 m \u00d7 n \u4e2a\u6570aij\u6392\u6210\u7684m\u884cn\u5217\u7684\u6570\u8868\u79f0\u4e3am\u884cn\u5217\u7684\u77e9\u9635\uff0c\u7b80\u79f0m \u00d7 n\u77e9\u9635\u3002\u8bb0\u4f5c\uff1a $$ A= \\begin{bmatrix} a & b & c & d & e\\ f & g & h & i & j \\ k & l & m & n & o \\ p & q & r & s & t \\end{bmatrix} $$ \u77e9\u9635\u8fd0\u7b97\u5728\u79d1\u5b66\u8ba1\u7b97\u4e2d\u975e\u5e38\u91cd\u8981\uff0c\u800c\u77e9\u9635\u7684\u57fa\u672c\u8fd0\u7b97\u5305\u62ec\u77e9\u9635\u7684\u52a0\u6cd5\uff0c\u51cf\u6cd5\uff0c\u6570\u4e58\uff0c\u8f6c\u7f6e\uff0c\u5171\u8f6d\u548c\u5171\u8f6d\u8f6c\u7f6e\u3002 \u52a0\u6cd5\uff1a $$ \\begin{bmatrix} 1 & 4 & 2\\ 2 & 0 & 0 \\end{bmatrix} + \\begin{bmatrix} 0 & 0 & 5\\ 7 & 5 & 0 \\end{bmatrix} = \\begin{bmatrix} 1+0 & 4+0 & 2+5\\ 2+7 & 0+5 & 0+0 \\end{bmatrix} = \\begin{bmatrix} 1 & 4 & 7\\ 9 & 5 & 0 \\end{bmatrix} $$ \u77e9\u9635\u7684\u52a0\u6cd5\u6ee1\u8db3\u4e0b\u5217\u8fd0\u7b97\u5f8b(A\uff0cB\uff0cC\u90fd\u662f\u540c\u578b\u77e9\u9635)\uff1a\u5e94\u8be5\u6ce8\u610f\u7684\u662f\u53ea\u6709\u540c\u578b\u77e9\u9635\u4e4b\u95f4\u624d\u53ef\u4ee5\u8fdb\u884c\u52a0\u6cd5 \u51cf\u6cd5\uff1a $$ \\begin{bmatrix} 1 & 4 & 2\\ 2 & 0 & 0 \\end{bmatrix} - \\begin{bmatrix} 0 & 0 & 5\\ 7 & 5 & 0 \\end{bmatrix} = \\begin{bmatrix} 1-0 & 4-0 & 2-5\\ 2-7 & 0-5 & 0-0 \\end{bmatrix} = \\begin{bmatrix} 1 & 4 & -3\\ -5 & -5 & 0 \\end{bmatrix} $$ \u6570\u4e58\uff1a $$ 2\\cdot \\begin{bmatrix} 1 & 8 & -3\\ 4 & -2 & 5 \\end{bmatrix} = \\begin{bmatrix} 2\\cdot1 & 2\\cdot8 & 2\\cdot(-3)\\ 2\\cdot4 & 2\\cdot(-2) & 2\\cdot5 \\end{bmatrix} = \\begin{bmatrix} 2 & 16 & -6\\ 8 & -4 & 10 \\end{bmatrix} $$ \u77e9\u9635\u7684\u6570\u4e58\u6ee1\u8db3\u4ee5\u4e0b\u8fd0\u7b97\u5f8b\uff1a $$ \\lambda(\\mu A) = \\mu(\\lambda A)\\ \\lambda(\\mu A) = (\\lambda\\mu)A\\ (\\lambda + \\mu)A = \\lambda A + \\mu A\\ \\lambda(A + B) = \\lambda A + \\lambda B $$ \u77e9\u9635\u7684\u52a0\u51cf\u6cd5\u548c\u77e9\u9635\u7684\u6570\u4e58\u5408\u79f0\u77e9\u9635\u7684\u7ebf\u6027\u8fd0\u7b97 \u8f6c\u7f6e\uff1a \u628a\u77e9\u9635A\u7684\u884c\u548c\u5217\u4e92\u76f8\u4ea4\u6362\u6240\u4ea7\u751f\u7684\u77e9\u9635\u79f0\u4e3aA\u7684\u8f6c\u7f6e\u77e9\u9635\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u79f0\u4e3a\u77e9\u9635\u7684\u8f6c\u7f6e $$ \\begin{bmatrix} 2 & 4 & 3\\ 0 & -2 & 8 \\end{bmatrix}^T = \\begin{bmatrix} 2 & 0\\ 4 & -2\\ 3 & 8 \\end{bmatrix} $$ \u77e9\u9635\u7684\u8f6c\u7f6e\u6ee1\u8db3\u4ee5\u4e0b\u8fd0\u7b97\u5f8b\uff1a $$ (A^T)^T = A\\ (\\lambda A)^T = \\lambda A^T\\ (AB)^T = B^TA^T $$","title":"\u77e9\u9635"},{"location":"Openstack/Cinder Installation Tutorial for Ubuntu/","text":"Cinder Installation Tutorial for Ubuntu This section describes how to install and configure storage nodes for the Block Storage service. For simplicity, this configuration references one storage node with an empty local block storage device. The instructions use /dev/sdb , but you can substitute a different value for your particular node. The service provisions logical volumes on this device using the LVM driver and provides them to instances via iSCSI transport. You can follow these instructions with minor modifications to horizontally scale your environment with additional storage nodes. Ubuntu Cinder \u5b89\u88c5\u624b\u518c \u8fd9\u4e2a\u7ae0\u8282\u63cf\u8ff0\u5982\u4f55\u5b89\u88c5\u548c\u914d\u7f6e\u5b58\u50a8\u8282\u70b9\u5bf9\u4e8e\u5757\u5b58\u50a8\u670d\u52a1\u3002\u4e3a\u4e86\u7b80\u6613\uff0c\u914d\u7f6e\u53c2\u8003\u4e00\u4e2a\u8282\u70b9\u548c\u7a7a\u7684\u672c\u5730\u5757\u5b58\u50a8\u3002\u8fd9\u4e2a\u8bf4\u660e\u4f7f\u7528 /dev/sdb ,\u4f46\u5728\u5177\u4f53\u7684\u8282\u70b9\u4e0a\u4f60\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u503c\u4ee3\u66ff\u3002 \u670d\u52a1\u5728\u8bbe\u5907\u4e0a\u4f7f\u7528LVM\u9a71\u52a8\u63d0\u4f9b\u903b\u8f91\u5377\u548c\u901a\u8fc7iSCSI\u4f20\u8f93\u63d0\u4f9b\u5b83\u4eec\u7ed9\u5b9e\u4f8b\u3002\u4f60\u53ef\u4ee5\u6309\u7167\u8bf4\u660e\u53ca\u8f83\u5c0f\u7684\u4fee\u6539\uff0c\u5728\u4f60\u7684\u73af\u5883\u589e\u52a0\u5b58\u50a8\u8282\u70b9\u8fdb\u884c\u6c34\u5e73\u6269\u5c55\u3002 simplicity[s\u026am'pl\u026as\u026at\u026a] n.\u7b80\u6613 substitute['s\u028cbst\u026atju\u02d0t] vi. \u66ff\u4ee3 particular adj.\u7279\u522b\u7684 minor adj. \u8f83\u5c0f\u7684","title":"Cinder Installation Tutorial for Ubuntu"},{"location":"Openstack/Cinder Installation Tutorial for Ubuntu/#cinder-installation-tutorial-for-ubuntu","text":"This section describes how to install and configure storage nodes for the Block Storage service. For simplicity, this configuration references one storage node with an empty local block storage device. The instructions use /dev/sdb , but you can substitute a different value for your particular node. The service provisions logical volumes on this device using the LVM driver and provides them to instances via iSCSI transport. You can follow these instructions with minor modifications to horizontally scale your environment with additional storage nodes.","title":"Cinder Installation Tutorial for Ubuntu"},{"location":"Openstack/Cinder Installation Tutorial for Ubuntu/#ubuntu-cinder","text":"\u8fd9\u4e2a\u7ae0\u8282\u63cf\u8ff0\u5982\u4f55\u5b89\u88c5\u548c\u914d\u7f6e\u5b58\u50a8\u8282\u70b9\u5bf9\u4e8e\u5757\u5b58\u50a8\u670d\u52a1\u3002\u4e3a\u4e86\u7b80\u6613\uff0c\u914d\u7f6e\u53c2\u8003\u4e00\u4e2a\u8282\u70b9\u548c\u7a7a\u7684\u672c\u5730\u5757\u5b58\u50a8\u3002\u8fd9\u4e2a\u8bf4\u660e\u4f7f\u7528 /dev/sdb ,\u4f46\u5728\u5177\u4f53\u7684\u8282\u70b9\u4e0a\u4f60\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u503c\u4ee3\u66ff\u3002 \u670d\u52a1\u5728\u8bbe\u5907\u4e0a\u4f7f\u7528LVM\u9a71\u52a8\u63d0\u4f9b\u903b\u8f91\u5377\u548c\u901a\u8fc7iSCSI\u4f20\u8f93\u63d0\u4f9b\u5b83\u4eec\u7ed9\u5b9e\u4f8b\u3002\u4f60\u53ef\u4ee5\u6309\u7167\u8bf4\u660e\u53ca\u8f83\u5c0f\u7684\u4fee\u6539\uff0c\u5728\u4f60\u7684\u73af\u5883\u589e\u52a0\u5b58\u50a8\u8282\u70b9\u8fdb\u884c\u6c34\u5e73\u6269\u5c55\u3002 simplicity[s\u026am'pl\u026as\u026at\u026a] n.\u7b80\u6613 substitute['s\u028cbst\u026atju\u02d0t] vi. \u66ff\u4ee3 particular adj.\u7279\u522b\u7684 minor adj. \u8f83\u5c0f\u7684","title":"Ubuntu Cinder \u5b89\u88c5\u624b\u518c"},{"location":"Openstack/Cinder Installation Tutorial/","text":"Cinder Installation Tutorial The Block Storage service (cinder) provides block storage devices to guest instances. The method in which the storage is provisioned and consumed is determined by the Block Storage driver, or drivers in the case of a multi-backend configuration. There are a variety of drivers that are available: NAS/SAN, NFS, iSCSI, Ceph, and more. The Block Storage API and scheduler services typically run on the controller nodes. Depending upon the drivers used, the volume service can run on controller nodes, compute nodes, or standalone storage nodes. For more information, see the Configuration Reference . Cinder \u5b89\u88c5\u5411\u5bfc \u5757\u5b58\u50a8\u670d\u52a1(cinder)\u63d0\u4f9b\u5757\u5b58\u50a8\u8bbe\u5907\u7ed9\u5ba2\u6237\u673a\u3002\u901a\u8fc7\u54ea\u79cd\u65b9\u5f0f\u63d0\u4f9b\u6216\u4f7f\u7528\u5b58\u50a8\u53d6\u51b3\u4e8e\u5757\u5b58\u50a8\u8bbe\u5907\uff0c\u6216\u8005\u5728\u591a\u540e\u7aef\u914d\u7f6e\u7684\u60c5\u51b5\u4e0b\u7531\u9a71\u52a8\u51b3\u5b9a\u3002\u4ee5\u4e0b\u662f\u6709\u6548\u7684\u9a71\u52a8:NAS/SAN,NFS,iSCSI,Ceph,\u6216\u5176\u5b83\u3002 \u5757\u5b58\u50a8API\u548c\u8c03\u5ea6\u670d\u52a1\u901a\u5e38\u8fd0\u884c\u5728\u63a7\u5236\u8282\u70b9\u3002\u4f9d\u8d56\u4f7f\u7528\u7684\u9a71\u52a8\uff0c\u5377\u670d\u52a1\u53ef\u4ee5\u5b89\u88c5\u5728\u63a7\u5236\u8282\u70b9\u3001\u8ba1\u7b97\u8282\u70b9\u3001\u6216\u8005\u5355\u72ec\u7684\u5b58\u50a8\u8282\u70b9\u3002 \u66f4\u591a\u7684\u4fe1\u606f\uff0c\u89c1 \u914d\u7f6e\u53c2\u8003 \u3002 in which:\u5728\u54ea\u70b9\u4e0a consume[k\u0259n'sju\u02d0m] vt. vi. \u6d88\u8017 in the case of \u5728...\u60c5\u51b5\u4e0b typically['t\u026ap\u026ak\u0259l\u026a] adv. \u4ee3\u8868\u6027\u5730\uff1b\u4f5c\u4e3a\u7279\u8272\u5730 depend[d\u026a'pend] vi.\u4f9d\u8d56,\u4f9d\u9760;\u53d6\u51b3\u4e8e;\u76f8\u4fe1\uff0c\u4f9d\u8d56 standalone['st\u00e6nd\u0259,l\u0259\u028an] adj.\u5355\u72ec\u7684","title":"Cinder Installation Tutorial"},{"location":"Openstack/Cinder Installation Tutorial/#cinder-installation-tutorial","text":"The Block Storage service (cinder) provides block storage devices to guest instances. The method in which the storage is provisioned and consumed is determined by the Block Storage driver, or drivers in the case of a multi-backend configuration. There are a variety of drivers that are available: NAS/SAN, NFS, iSCSI, Ceph, and more. The Block Storage API and scheduler services typically run on the controller nodes. Depending upon the drivers used, the volume service can run on controller nodes, compute nodes, or standalone storage nodes. For more information, see the Configuration Reference .","title":"Cinder Installation Tutorial"},{"location":"Openstack/Cinder Installation Tutorial/#cinder","text":"\u5757\u5b58\u50a8\u670d\u52a1(cinder)\u63d0\u4f9b\u5757\u5b58\u50a8\u8bbe\u5907\u7ed9\u5ba2\u6237\u673a\u3002\u901a\u8fc7\u54ea\u79cd\u65b9\u5f0f\u63d0\u4f9b\u6216\u4f7f\u7528\u5b58\u50a8\u53d6\u51b3\u4e8e\u5757\u5b58\u50a8\u8bbe\u5907\uff0c\u6216\u8005\u5728\u591a\u540e\u7aef\u914d\u7f6e\u7684\u60c5\u51b5\u4e0b\u7531\u9a71\u52a8\u51b3\u5b9a\u3002\u4ee5\u4e0b\u662f\u6709\u6548\u7684\u9a71\u52a8:NAS/SAN,NFS,iSCSI,Ceph,\u6216\u5176\u5b83\u3002 \u5757\u5b58\u50a8API\u548c\u8c03\u5ea6\u670d\u52a1\u901a\u5e38\u8fd0\u884c\u5728\u63a7\u5236\u8282\u70b9\u3002\u4f9d\u8d56\u4f7f\u7528\u7684\u9a71\u52a8\uff0c\u5377\u670d\u52a1\u53ef\u4ee5\u5b89\u88c5\u5728\u63a7\u5236\u8282\u70b9\u3001\u8ba1\u7b97\u8282\u70b9\u3001\u6216\u8005\u5355\u72ec\u7684\u5b58\u50a8\u8282\u70b9\u3002 \u66f4\u591a\u7684\u4fe1\u606f\uff0c\u89c1 \u914d\u7f6e\u53c2\u8003 \u3002 in which:\u5728\u54ea\u70b9\u4e0a consume[k\u0259n'sju\u02d0m] vt. vi. \u6d88\u8017 in the case of \u5728...\u60c5\u51b5\u4e0b typically['t\u026ap\u026ak\u0259l\u026a] adv. \u4ee3\u8868\u6027\u5730\uff1b\u4f5c\u4e3a\u7279\u8272\u5730 depend[d\u026a'pend] vi.\u4f9d\u8d56,\u4f9d\u9760;\u53d6\u51b3\u4e8e;\u76f8\u4fe1\uff0c\u4f9d\u8d56 standalone['st\u00e6nd\u0259,l\u0259\u028an] adj.\u5355\u72ec\u7684","title":"Cinder \u5b89\u88c5\u5411\u5bfc"},{"location":"Openstack/Components/","text":"Components Object Storage uses the following components to deliver high availability, high durability, and high concurrency: Proxy servers - Handle all of the incoming API requests. Rings - Map logical names of data to locations on particular disks. Zones - Isolate data from other zones. A failure in one zone does not impact the rest of the cluster as data replicates across zones. Accounts and containers - Each account and container are individual databases that are distributed across the cluster. An account database contains the list of containers in that account. A container database contains the list of objects in that container. Objects - The data itself. Partitions - A partition stores objects, account databases, and container databases and helps manage locations where data lives in the cluster. Object Storage building blocks Proxy servers \u00b6 Proxy servers are the public face of Object Storage and handle all of the incoming API requests. Once a proxy server receives a request, it determines the storage node based on the object\u2019s URL, for example: https://swift.example.com/v1/account/container/object . Proxy servers also coordinate responses, handle failures, and coordinate timestamps. Proxy servers use a shared-nothing architecture and can be scaled as needed based on projected workloads. A minimum of two proxy servers should be deployed behind a separately-managed load balancer. If one proxy server fails, the others take over. Rings \u00b6 A ring represents a mapping between the names of entities stored in the cluster and their physical locations on disks. There are separate rings for accounts, containers, and objects. When components of the system need to perform an operation on an object, container, or account, they need to interact with the corresponding ring to determine the appropriate location in the cluster. The ring maintains this mapping using zones, devices, partitions, and replicas. Each partition in the ring is replicated, by default, three times across the cluster, and partition locations are stored in the mapping maintained by the ring. The ring is also responsible for determining which devices are used as handoffs in failure scenarios. Data can be isolated into zones in the ring. Each partition replica will try to reside in a different zone. A zone could represent a drive, a server, a cabinet, a switch, or even a data center. The partitions of the ring are distributed among all of the devices in the Object Storage installation. When partitions need to be moved around (for example, if a device is added to the cluster), the ring ensures that a minimum number of partitions are moved at a time, and only one replica of a partition is moved at a time. You can use weights to balance the distribution of partitions on drives across the cluster. This can be useful, for example, when differently sized drives are used in a cluster. The ring is used by the proxy server and several background processes (like replication). The ring These rings are externally managed. The server processes themselves do not modify the rings, they are instead given new rings modified by other tools. The ring uses a configurable number of bits from an MD5 hash for a path as a partition index that designates a device. The number of bits kept from the hash is known as the partition power, and 2 to the partition power indicates the partition count. Partitioning the full MD5 hash ring allows other parts of the cluster to work in batches of items at once which ends up either more efficient or at least less complex than working with each item separately or the entire cluster all at once. Another configurable value is the replica count, which indicates how many of the partition-device assignments make up a single ring. For a given partition index, each replica\u2019s device will not be in the same zone as any other replica\u2019s device. Zones can be used to group devices based on physical locations, power separations, network separations, or any other attribute that would improve the availability of multiple replicas at the same time. Zones \u00b6 Object Storage allows configuring zones in order to isolate failure boundaries. If possible, each data replica resides in a separate zone. At the smallest level, a zone could be a single drive or a grouping of a few drives. If there were five object storage servers, then each server would represent its own zone. Larger deployments would have an entire rack (or multiple racks) of object servers, each representing a zone. The goal of zones is to allow the cluster to tolerate significant outages of storage servers without losing all replicas of the data. Zones Accounts and containers \u00b6 Each account and container is an individual SQLite database that is distributed across the cluster. An account database contains the list of containers in that account. A container database contains the list of objects in that container. Accounts and containers To keep track of object data locations, each account in the system has a database that references all of its containers, and each container database references each object. Partitions \u00b6 A partition is a collection of stored data. This includes account databases, container databases, and objects. Partitions are core to the replication system. Think of a partition as a bin moving throughout a fulfillment center warehouse. Individual orders get thrown into the bin. The system treats that bin as a cohesive entity as it moves throughout the system. A bin is easier to deal with than many little things. It makes for fewer moving parts throughout the system. System replicators and object uploads/downloads operate on partitions. As the system scales up, its behavior continues to be predictable because the number of partitions is a fixed number. Implementing a partition is conceptually simple: a partition is just a directory sitting on a disk with a corresponding hash table of what it contains. Partitions Replicators \u00b6 In order to ensure that there are three copies of the data everywhere, replicators continuously examine each partition. For each local partition, the replicator compares it against the replicated copies in the other zones to see if there are any differences. The replicator knows if replication needs to take place by examining hashes. A hash file is created for each partition, which contains hashes of each directory in the partition. For a given partition, the hash files for each of the partition\u2019s copies are compared. If the hashes are different, then it is time to replicate, and the directory that needs to be replicated is copied over. This is where partitions come in handy. With fewer things in the system, larger chunks of data are transferred around (rather than lots of little TCP connections, which is inefficient) and there is a consistent number of hashes to compare. The cluster has an eventually-consistent behavior where old data may be served from partitions that missed updates, but replication will cause all partitions to converge toward the newest data. Replication If a zone goes down, one of the nodes containing a replica notices and proactively copies data to a handoff location. Use cases \u00b6 The following sections show use cases for object uploads and downloads and introduce the components. Upload \u00b6 A client uses the REST API to make a HTTP request to PUT an object into an existing container. The cluster receives the request. First, the system must figure out where the data is going to go. To do this, the account name, container name, and object name are all used to determine the partition where this object should live. Then a lookup in the ring figures out which storage nodes contain the partitions in question. The data is then sent to each storage node where it is placed in the appropriate partition. At least two of the three writes must be successful before the client is notified that the upload was successful. Next, the container database is updated asynchronously to reflect that there is a new object in it. Object Storage in use Download \u00b6 A request comes in for an account/container/object. Using the same consistent hashing, the partition index is determined. A lookup in the ring reveals which storage nodes contain that partition. A request is made to one of the storage nodes to fetch the object and, if that fails, requests are made to the other nodes.","title":"Components"},{"location":"Openstack/Components/#components","text":"Object Storage uses the following components to deliver high availability, high durability, and high concurrency: Proxy servers - Handle all of the incoming API requests. Rings - Map logical names of data to locations on particular disks. Zones - Isolate data from other zones. A failure in one zone does not impact the rest of the cluster as data replicates across zones. Accounts and containers - Each account and container are individual databases that are distributed across the cluster. An account database contains the list of containers in that account. A container database contains the list of objects in that container. Objects - The data itself. Partitions - A partition stores objects, account databases, and container databases and helps manage locations where data lives in the cluster. Object Storage building blocks","title":"Components"},{"location":"Openstack/Components/#proxy-servers","text":"Proxy servers are the public face of Object Storage and handle all of the incoming API requests. Once a proxy server receives a request, it determines the storage node based on the object\u2019s URL, for example: https://swift.example.com/v1/account/container/object . Proxy servers also coordinate responses, handle failures, and coordinate timestamps. Proxy servers use a shared-nothing architecture and can be scaled as needed based on projected workloads. A minimum of two proxy servers should be deployed behind a separately-managed load balancer. If one proxy server fails, the others take over.","title":"Proxy servers\u00b6"},{"location":"Openstack/Components/#rings","text":"A ring represents a mapping between the names of entities stored in the cluster and their physical locations on disks. There are separate rings for accounts, containers, and objects. When components of the system need to perform an operation on an object, container, or account, they need to interact with the corresponding ring to determine the appropriate location in the cluster. The ring maintains this mapping using zones, devices, partitions, and replicas. Each partition in the ring is replicated, by default, three times across the cluster, and partition locations are stored in the mapping maintained by the ring. The ring is also responsible for determining which devices are used as handoffs in failure scenarios. Data can be isolated into zones in the ring. Each partition replica will try to reside in a different zone. A zone could represent a drive, a server, a cabinet, a switch, or even a data center. The partitions of the ring are distributed among all of the devices in the Object Storage installation. When partitions need to be moved around (for example, if a device is added to the cluster), the ring ensures that a minimum number of partitions are moved at a time, and only one replica of a partition is moved at a time. You can use weights to balance the distribution of partitions on drives across the cluster. This can be useful, for example, when differently sized drives are used in a cluster. The ring is used by the proxy server and several background processes (like replication). The ring These rings are externally managed. The server processes themselves do not modify the rings, they are instead given new rings modified by other tools. The ring uses a configurable number of bits from an MD5 hash for a path as a partition index that designates a device. The number of bits kept from the hash is known as the partition power, and 2 to the partition power indicates the partition count. Partitioning the full MD5 hash ring allows other parts of the cluster to work in batches of items at once which ends up either more efficient or at least less complex than working with each item separately or the entire cluster all at once. Another configurable value is the replica count, which indicates how many of the partition-device assignments make up a single ring. For a given partition index, each replica\u2019s device will not be in the same zone as any other replica\u2019s device. Zones can be used to group devices based on physical locations, power separations, network separations, or any other attribute that would improve the availability of multiple replicas at the same time.","title":"Rings\u00b6"},{"location":"Openstack/Components/#zones","text":"Object Storage allows configuring zones in order to isolate failure boundaries. If possible, each data replica resides in a separate zone. At the smallest level, a zone could be a single drive or a grouping of a few drives. If there were five object storage servers, then each server would represent its own zone. Larger deployments would have an entire rack (or multiple racks) of object servers, each representing a zone. The goal of zones is to allow the cluster to tolerate significant outages of storage servers without losing all replicas of the data. Zones","title":"Zones\u00b6"},{"location":"Openstack/Components/#accounts-and-containers","text":"Each account and container is an individual SQLite database that is distributed across the cluster. An account database contains the list of containers in that account. A container database contains the list of objects in that container. Accounts and containers To keep track of object data locations, each account in the system has a database that references all of its containers, and each container database references each object.","title":"Accounts and containers\u00b6"},{"location":"Openstack/Components/#partitions","text":"A partition is a collection of stored data. This includes account databases, container databases, and objects. Partitions are core to the replication system. Think of a partition as a bin moving throughout a fulfillment center warehouse. Individual orders get thrown into the bin. The system treats that bin as a cohesive entity as it moves throughout the system. A bin is easier to deal with than many little things. It makes for fewer moving parts throughout the system. System replicators and object uploads/downloads operate on partitions. As the system scales up, its behavior continues to be predictable because the number of partitions is a fixed number. Implementing a partition is conceptually simple: a partition is just a directory sitting on a disk with a corresponding hash table of what it contains. Partitions","title":"Partitions\u00b6"},{"location":"Openstack/Components/#replicators","text":"In order to ensure that there are three copies of the data everywhere, replicators continuously examine each partition. For each local partition, the replicator compares it against the replicated copies in the other zones to see if there are any differences. The replicator knows if replication needs to take place by examining hashes. A hash file is created for each partition, which contains hashes of each directory in the partition. For a given partition, the hash files for each of the partition\u2019s copies are compared. If the hashes are different, then it is time to replicate, and the directory that needs to be replicated is copied over. This is where partitions come in handy. With fewer things in the system, larger chunks of data are transferred around (rather than lots of little TCP connections, which is inefficient) and there is a consistent number of hashes to compare. The cluster has an eventually-consistent behavior where old data may be served from partitions that missed updates, but replication will cause all partitions to converge toward the newest data. Replication If a zone goes down, one of the nodes containing a replica notices and proactively copies data to a handoff location.","title":"Replicators\u00b6"},{"location":"Openstack/Components/#use-cases","text":"The following sections show use cases for object uploads and downloads and introduce the components.","title":"Use cases\u00b6"},{"location":"Openstack/Components/#upload","text":"A client uses the REST API to make a HTTP request to PUT an object into an existing container. The cluster receives the request. First, the system must figure out where the data is going to go. To do this, the account name, container name, and object name are all used to determine the partition where this object should live. Then a lookup in the ring figures out which storage nodes contain the partitions in question. The data is then sent to each storage node where it is placed in the appropriate partition. At least two of the three writes must be successful before the client is notified that the upload was successful. Next, the container database is updated asynchronously to reflect that there is a new object in it. Object Storage in use","title":"Upload\u00b6"},{"location":"Openstack/Components/#download","text":"A request comes in for an account/container/object. Using the same consistent hashing, the partition index is determined. A lookup in the ring reveals which storage nodes contain that partition. A request is made to one of the storage nodes to fetch the object and, if that fails, requests are made to the other nodes.","title":"Download\u00b6"},{"location":"Openstack/Identity service overview/","text":"Identity service overview The OpenStack Identity service provides a single point of integration for managing authentication, authorization, and a catalog of services. The Identity service is typically the first service a user interacts with. Once authenticated, an end user can use their identity to access other OpenStack services. Likewise, other OpenStack services leverage the Identity service to ensure users are who they say they are and discover where other services are within the deployment. The Identity service can also integrate with some external user management systems (such as LDAP). Users and services can locate other services by using the service catalog, which is managed by the Identity service. As the name implies, a service catalog is a collection of available services in an OpenStack deployment. Each service can have one or many endpoints and each endpoint can be one of three types: admin, internal, or public. In a production environment, different endpoint types might reside on separate networks exposed to different types of users for security reasons. For instance, the public API network might be visible from the Internet so customers can manage their clouds. The admin API network might be restricted to operators within the organization that manages cloud infrastructure. The internal API network might be restricted to the hosts that contain OpenStack services. Also, OpenStack supports multiple regions for scalability. For simplicity, this guide uses the management network for all endpoint types and the default RegionOne region. Together, regions, services, and endpoints created within the Identity service comprise the service catalog for a deployment. Each OpenStack service in your deployment needs a service entry with corresponding endpoints stored in the Identity service. This can all be done after the Identity service has been installed and configured. The Identity service contains these components: Server A centralized server provides authentication and authorization services using a RESTful interface. Drivers Drivers or a service back end are integrated to the centralized server. They are used for accessing identity information in repositories external to OpenStack, and may already exist in the infrastructure where OpenStack is deployed (for example, SQL databases or LDAP servers). Modules Middleware modules run in the address space of the OpenStack component that is using the Identity service. These modules intercept service requests, extract user credentials, and send them to the centralized server for authorization. The integration between the middleware modules and OpenStack components uses the Python Web Server Gateway Interface. \u8eab\u4efd\u670d\u52a1\u6982\u89c8 Opentsack\u7684\u8eab\u4efd\u670d\u52a1\u63d0\u4f9b\u5355\u70b9\u96c6\u6210\u4e86\u7ba1\u7406\u8ba4\u8bc1\u3001\u9274\u6743\u548c\u670d\u52a1\u76ee\u5f55\u3002","title":"Identity service overview"},{"location":"Openstack/Identity service overview/#identity-service-overview","text":"The OpenStack Identity service provides a single point of integration for managing authentication, authorization, and a catalog of services. The Identity service is typically the first service a user interacts with. Once authenticated, an end user can use their identity to access other OpenStack services. Likewise, other OpenStack services leverage the Identity service to ensure users are who they say they are and discover where other services are within the deployment. The Identity service can also integrate with some external user management systems (such as LDAP). Users and services can locate other services by using the service catalog, which is managed by the Identity service. As the name implies, a service catalog is a collection of available services in an OpenStack deployment. Each service can have one or many endpoints and each endpoint can be one of three types: admin, internal, or public. In a production environment, different endpoint types might reside on separate networks exposed to different types of users for security reasons. For instance, the public API network might be visible from the Internet so customers can manage their clouds. The admin API network might be restricted to operators within the organization that manages cloud infrastructure. The internal API network might be restricted to the hosts that contain OpenStack services. Also, OpenStack supports multiple regions for scalability. For simplicity, this guide uses the management network for all endpoint types and the default RegionOne region. Together, regions, services, and endpoints created within the Identity service comprise the service catalog for a deployment. Each OpenStack service in your deployment needs a service entry with corresponding endpoints stored in the Identity service. This can all be done after the Identity service has been installed and configured. The Identity service contains these components: Server A centralized server provides authentication and authorization services using a RESTful interface. Drivers Drivers or a service back end are integrated to the centralized server. They are used for accessing identity information in repositories external to OpenStack, and may already exist in the infrastructure where OpenStack is deployed (for example, SQL databases or LDAP servers). Modules Middleware modules run in the address space of the OpenStack component that is using the Identity service. These modules intercept service requests, extract user credentials, and send them to the centralized server for authorization. The integration between the middleware modules and OpenStack components uses the Python Web Server Gateway Interface.","title":"Identity service overview"},{"location":"Openstack/Identity service overview/#_1","text":"Opentsack\u7684\u8eab\u4efd\u670d\u52a1\u63d0\u4f9b\u5355\u70b9\u96c6\u6210\u4e86\u7ba1\u7406\u8ba4\u8bc1\u3001\u9274\u6743\u548c\u670d\u52a1\u76ee\u5f55\u3002","title":"\u8eab\u4efd\u670d\u52a1\u6982\u89c8"},{"location":"Openstack/Introduction to Object Storage/","text":"Introduction to Object Storage OpenStack Object Storage (swift) is used for redundant, scalable data storage using clusters of standardized servers to store petabytes of accessible data. It is a long-term storage system for large amounts of static data which can be retrieved and updated. Object Storage uses a distributed architecture with no central point of control, providing greater scalability, redundancy, and permanence. Objects are written to multiple hardware devices, with the OpenStack software responsible for ensuring data replication and integrity across the cluster. Storage clusters scale horizontally by adding new nodes. Should a node fail, OpenStack works to replicate its content from other active nodes. Because OpenStack uses software logic to ensure data replication and distribution across different devices, inexpensive commodity hard drives and servers can be used in lieu of more expensive equipment. Object Storage is ideal for cost effective, scale-out storage. It provides a fully distributed, API-accessible storage platform that can be integrated directly into applications or used for backup, archiving, and data retention. \u5bf9\u8c61\u5b58\u50a8\u4ecb\u7ecd Openstack\u5bf9\u8c61\u5b58\u50a8(swift)\u88ab\u5b9e\u73b0\u6210\u5197\u4f59\u3001\u53ef\u4f38\u7f29\u7684\u6570\u636e\u5b58\u50a8\uff0c\u4f7f\u7528\u6807\u51c6\u7684\u670d\u52a1\u5668\u96c6\u7fa4\u7528\u4e8e\u5b58\u653ePB\u7ea7\u7684\u53ef\u8bbf\u95ee\u6570\u636e\u3002\u8fd9\u662f\u4e00\u4e2a\u957f\u671f\u7684\u5b58\u50a8\u7cfb\u7edf\uff0c\u7528\u4e8e\u5927\u91cf\u7684\u9759\u6001\u6570\u636e\u80fd\u591f\u88ab\u6062\u590d\u548c\u66f4\u65b0\u3002\u5bf9\u8c61\u5b58\u50a8\u4f7f\u7528\u6ca1\u6709\u63a7\u5236\u4e2d\u5fc3\u7684\u5206\u5e03\u5f0f\u67b6\u6784\uff0c\u63d0\u4f9b\u8f83\u5927\u7684\u6269\u5c55\u6027\u3001\u5197\u4f59\u6027\u548c\u6301\u4e45\u5316\u3002\u5bf9\u8c61\u88ab\u5199\u5230\u591a\u4e2a\u786c\u4ef6\u8bbe\u5907\uff0cOpenstack\u8f6f\u4ef6\u8d1f\u8d23\u786e\u4fdd\u6570\u636e\u590d\u5236\u53ca\u5b8c\u6574\u8bbf\u95ee\u96c6\u7fa4\u3002\u5b58\u50a8\u96c6\u7fa4\u652f\u6301\u6c34\u5e73\u6269\u5c55\u901a\u8fc7\u6dfb\u52a0\u65b0\u7684\u8282\u70b9\u3002\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u5931\u8d25\uff0cOpenstack\u5c06\u4f1a\u4ece\u5176\u5b83\u6d3b\u52a8\u7684\u8282\u70b9\u590d\u5236\u5b83\u7684\u5185\u5bb9\u3002\u56e0\u4e3aOpenstack\u4f7f\u7528\u8f6f\u4ef6\u903b\u8f91\u786e\u4fdd\u6570\u636e\u590d\u5236\u548c\u5206\u5e03\u5f0f\u8bbf\u95ee\u4e0d\u540c\u7684\u8bbe\u5907\uff0c\u4fbf\u5b9c\u7684\u5546\u54c1\u786c\u4ef6\u9a71\u52a8\u548c\u670d\u52a1\u5668\u80fd\u88ab\u7528\u4e8e\u4ee3\u66ff\u66f4\u6602\u8d35\u7684\u8bbe\u5907\u3002 \u5bf9\u8c61\u5b58\u50a8\u662f\u7406\u60f3\u7684\u5177\u5907\u6210\u672c\u6548\u76ca\u3001\u6a2a\u5411\u6269\u5c55\u7684\u5b58\u50a8\u3002\u5b83\u63d0\u4f9b\u4e00\u4e2a\u5b8c\u5168\u5206\u5e03\u5f0f\u7684\u3001API\u8bbf\u95ee\u5b58\u50a8\u5e73\u53f0\uff0c\u80fd\u591f\u76f4\u63a5\u96c6\u6210\u5165\u5e94\u7528\u6216\u7528\u4e8e\u5907\u4efd\u3001\u5f52\u6863\u548c\u6570\u636e\u4fdd\u7559\u3002 redundant [r\u026a'd\u028cnd(\u0259)nt] adj.\u591a\u4f59\u7684\uff0c\u8fc7\u5269\u7684 scalable ['ske\u026al\u0259b(\u0259)l] adj. \u53ef\u4f38\u7f29\u7684 standardized ['st\u00e6nd\u0259,daizd] adj. \u6807\u51c6\u7684 long term \u957f\u671f\u7684 retrieved [ri'tri:vd] v. \u6062\u590d architecture ['\u0251\u02d0k\u026atekt\u0283\u0259] n.\u67b6\u6784 permanence ['p\u025c\u02d0m\u0259n\u0259ns] n. \u6301\u4e45;\u6c38\u4e45 multiple ['m\u028clt\u026apl] adj.\u591a\u6837\u7684 responsible [r\u026a'sp\u0252ns\u026ab(\u0259)l] adj.\u8d1f\u8d23\u7684 integrity [\u026an'tegr\u026at\u026a] n. \u5b8c\u6574 commodity [k\u0259'm\u0252d\u026at\u026a] n.\u5546\u54c1 drive [dra\u026av] n.\u9a71\u52a8 lieu [lju\u02d0; lu\u02d0]n. \u4ee3\u66ff equipment [\u026a'kw\u026apm(\u0259)nt] n.\u8bbe\u5907 ideal [a\u026a'd\u026a\u0259l; a\u026a'di\u02d0\u0259l] adj.\u7406\u60f3\u7684 effective [\u026a'fekt\u026av] adj.\u6709\u6548\u7684 cost effective \u6709\u6210\u672c\u6548\u76ca\u7684\uff1b\u5212\u7b97\u7684 fully ['f\u028al\u026a] adv.\u5145\u5206\u5730 retention [r\u026a'ten\u0283(\u0259)n] n.\u4fdd\u7559","title":"Introduction to Object Storage"},{"location":"Openstack/Introduction to Object Storage/#introduction-to-object-storage","text":"OpenStack Object Storage (swift) is used for redundant, scalable data storage using clusters of standardized servers to store petabytes of accessible data. It is a long-term storage system for large amounts of static data which can be retrieved and updated. Object Storage uses a distributed architecture with no central point of control, providing greater scalability, redundancy, and permanence. Objects are written to multiple hardware devices, with the OpenStack software responsible for ensuring data replication and integrity across the cluster. Storage clusters scale horizontally by adding new nodes. Should a node fail, OpenStack works to replicate its content from other active nodes. Because OpenStack uses software logic to ensure data replication and distribution across different devices, inexpensive commodity hard drives and servers can be used in lieu of more expensive equipment. Object Storage is ideal for cost effective, scale-out storage. It provides a fully distributed, API-accessible storage platform that can be integrated directly into applications or used for backup, archiving, and data retention.","title":"Introduction to Object Storage"},{"location":"Openstack/Introduction to Object Storage/#_1","text":"Openstack\u5bf9\u8c61\u5b58\u50a8(swift)\u88ab\u5b9e\u73b0\u6210\u5197\u4f59\u3001\u53ef\u4f38\u7f29\u7684\u6570\u636e\u5b58\u50a8\uff0c\u4f7f\u7528\u6807\u51c6\u7684\u670d\u52a1\u5668\u96c6\u7fa4\u7528\u4e8e\u5b58\u653ePB\u7ea7\u7684\u53ef\u8bbf\u95ee\u6570\u636e\u3002\u8fd9\u662f\u4e00\u4e2a\u957f\u671f\u7684\u5b58\u50a8\u7cfb\u7edf\uff0c\u7528\u4e8e\u5927\u91cf\u7684\u9759\u6001\u6570\u636e\u80fd\u591f\u88ab\u6062\u590d\u548c\u66f4\u65b0\u3002\u5bf9\u8c61\u5b58\u50a8\u4f7f\u7528\u6ca1\u6709\u63a7\u5236\u4e2d\u5fc3\u7684\u5206\u5e03\u5f0f\u67b6\u6784\uff0c\u63d0\u4f9b\u8f83\u5927\u7684\u6269\u5c55\u6027\u3001\u5197\u4f59\u6027\u548c\u6301\u4e45\u5316\u3002\u5bf9\u8c61\u88ab\u5199\u5230\u591a\u4e2a\u786c\u4ef6\u8bbe\u5907\uff0cOpenstack\u8f6f\u4ef6\u8d1f\u8d23\u786e\u4fdd\u6570\u636e\u590d\u5236\u53ca\u5b8c\u6574\u8bbf\u95ee\u96c6\u7fa4\u3002\u5b58\u50a8\u96c6\u7fa4\u652f\u6301\u6c34\u5e73\u6269\u5c55\u901a\u8fc7\u6dfb\u52a0\u65b0\u7684\u8282\u70b9\u3002\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u5931\u8d25\uff0cOpenstack\u5c06\u4f1a\u4ece\u5176\u5b83\u6d3b\u52a8\u7684\u8282\u70b9\u590d\u5236\u5b83\u7684\u5185\u5bb9\u3002\u56e0\u4e3aOpenstack\u4f7f\u7528\u8f6f\u4ef6\u903b\u8f91\u786e\u4fdd\u6570\u636e\u590d\u5236\u548c\u5206\u5e03\u5f0f\u8bbf\u95ee\u4e0d\u540c\u7684\u8bbe\u5907\uff0c\u4fbf\u5b9c\u7684\u5546\u54c1\u786c\u4ef6\u9a71\u52a8\u548c\u670d\u52a1\u5668\u80fd\u88ab\u7528\u4e8e\u4ee3\u66ff\u66f4\u6602\u8d35\u7684\u8bbe\u5907\u3002 \u5bf9\u8c61\u5b58\u50a8\u662f\u7406\u60f3\u7684\u5177\u5907\u6210\u672c\u6548\u76ca\u3001\u6a2a\u5411\u6269\u5c55\u7684\u5b58\u50a8\u3002\u5b83\u63d0\u4f9b\u4e00\u4e2a\u5b8c\u5168\u5206\u5e03\u5f0f\u7684\u3001API\u8bbf\u95ee\u5b58\u50a8\u5e73\u53f0\uff0c\u80fd\u591f\u76f4\u63a5\u96c6\u6210\u5165\u5e94\u7528\u6216\u7528\u4e8e\u5907\u4efd\u3001\u5f52\u6863\u548c\u6570\u636e\u4fdd\u7559\u3002 redundant [r\u026a'd\u028cnd(\u0259)nt] adj.\u591a\u4f59\u7684\uff0c\u8fc7\u5269\u7684 scalable ['ske\u026al\u0259b(\u0259)l] adj. \u53ef\u4f38\u7f29\u7684 standardized ['st\u00e6nd\u0259,daizd] adj. \u6807\u51c6\u7684 long term \u957f\u671f\u7684 retrieved [ri'tri:vd] v. \u6062\u590d architecture ['\u0251\u02d0k\u026atekt\u0283\u0259] n.\u67b6\u6784 permanence ['p\u025c\u02d0m\u0259n\u0259ns] n. \u6301\u4e45;\u6c38\u4e45 multiple ['m\u028clt\u026apl] adj.\u591a\u6837\u7684 responsible [r\u026a'sp\u0252ns\u026ab(\u0259)l] adj.\u8d1f\u8d23\u7684 integrity [\u026an'tegr\u026at\u026a] n. \u5b8c\u6574 commodity [k\u0259'm\u0252d\u026at\u026a] n.\u5546\u54c1 drive [dra\u026av] n.\u9a71\u52a8 lieu [lju\u02d0; lu\u02d0]n. \u4ee3\u66ff equipment [\u026a'kw\u026apm(\u0259)nt] n.\u8bbe\u5907 ideal [a\u026a'd\u026a\u0259l; a\u026a'di\u02d0\u0259l] adj.\u7406\u60f3\u7684 effective [\u026a'fekt\u026av] adj.\u6709\u6548\u7684 cost effective \u6709\u6210\u672c\u6548\u76ca\u7684\uff1b\u5212\u7b97\u7684 fully ['f\u028al\u026a] adv.\u5145\u5206\u5730 retention [r\u026a'ten\u0283(\u0259)n] n.\u4fdd\u7559","title":"\u5bf9\u8c61\u5b58\u50a8\u4ecb\u7ecd"},{"location":"Openstack/Keystone_Token/","text":"Keystone_Token \u5173\u952e\u70b9 \u4f5c\u4e3a\u4f7f\u7528API Endpoint\u7684Client \uff0c\u5176\u6570\u91cf\u3001\u7c7b\u578b\u90fd\u662f\u590d\u6742\u7684\uff0c\u56e0\u4e3a\u9700\u8981\u5bf9 Client\u7684\u8eab\u4efd\u8fdb\u884c\u9a8c\u8bc1 \u660e\u6587\u4f20\u8f93\u5bc6\u7801\u4e0d\u5b8c\u5168 Token \u4f5c\u4e3a\u4e34\u65f6\u51ed\u8bc1\uff0c\u53ef\u4ee5\u589e\u52a0\u8ba4\u8bc1\u8fc7\u7a0b\u4e2d\u7684\u5b89\u5168\u6027 \u9700\u8981\u9a8c\u8bc1 Token \u7684\u5408\u6cd5\u6027 API \u9700\u8981\u4ec0\u4e48\u4e1c\u897f role Project expire date Client \u9700\u8981\u4ec0\u4e48\u4e1c\u897f Project Catalog \u56db\u79cd\u7c7b\u578b UUID tokens Fernet tokens PKI tokens PKIZ tokens UUID tokens \u57fa\u4e8e Client \u63d0\u4f9b\u7684\u7528\u6237\u540d/\u5bc6\u7801\u662f\u6b63\u786e\u7684\uff1a keystone: \u751f\u6210 UUID token \u5c06 UUID token \u5b58\u50a8\u5728\u5176\u540e\u7aef \u5c06 UUID token \u7684\u526f\u672c\u53d1\u9001\u56de\u5ba2\u6237\u7aef \u5ba2\u6237\u7aef\u5c06\u7f13\u5b58 token \u7136\u540e\uff0cUUID token \u5c06\u968f\u5ba2\u6237\u7aef\u7684\u6bcf\u4e2a API \u8c03\u7528\u4e00\u8d77\u4f20\u9012 \u5728\u6536\u5230\u6bcf\u6b21\u7528\u6237\u7684\u8bf7\u6c42\u540e\uff0cAPI Endpoint \u4f1a\u5c06\u6b64 UUID token \u53d1\u9001\u5230 keystone \u8fdb\u884c\u9a8c\u8bc1 keystone \u5c06\u6536\u5230\u7684 UUID Token \u4e0e\u5b58\u653e\u5728\u540e\u7aef\u7684\u5339\u914d(\u68c0\u67e5 UUID \u5b57\u7b26\u4e32\uff0c\u5230\u671f\u65e5\u671f) keystone \u5c06\u5411 API \u7aef\u70b9\u8fd4\u56de\u201c\u6210\u529f\u201d\u6216\u201c\u5931\u8d25\u201d\u6d88\u606f PKI Token \u6bcf\u4e2aAPI Endpoint \u90fd\u4f1a\u4fdd\u7559 keystone \u7684\u526f\u672c\uff1a Signing certificate Revocation list CA certificate \u751f\u6210CMS Token \uff0c\u4f7f\u7528\u5982\u4e0b\u6570\u636e\uff1a Service catalog User roles Metadata \u751f\u6210\u4ee3\u7801\uff1a def _get_token_id(self, token_data): try: token_json = jsonutils.dumps(token_data, cls=utils.PKIEncoder) token_id = str(cms.cms_sign_token(token_json, CONF.signing.certfile, CONF.signing.keyfile)) return token_id \u5185\u5bb9\u5982\u4e0b\uff1a { \"token\": { \"methods\": [ \"password\" ], \"roles\": [{\"id\": \"5642056d336b4c2a894882425ce22a86\", \"name\": \"admin\"}], \"expires_at\": \"2015-12-25T09:57:28.404275Z\", \"project\": { \"domain\": { \"id\": \"default\", \"name\": \"Default\"}, \"id\": \"144d8a99a42447379ac37f78bf0ef608\", \"name\": \"admin\"}, \"catalog\": [ { \"endpoints\": [ { \"region_id\": \"RegionOne\", \"url\": \"http://controller:5000/v2.0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"3837de623efd4af799e050d4d8d1f307\" }, ...... ]}], \"extras\": {}, \"user\": { \"domain\": {\"id\": \"default\", \"name\": \"Default\"}, \"id\": \"1552d60a042e4a2caa07ea7ae6aa2f09\", \"name\": \"admin\"}, \"audit_ids\": [\"ZCvZW2TtTgiaAsVA8qmc3A\"], \"issued_at\": \"2015-12-25T08:57:28.404304Z\" } } token_data \u7ecf cms.cms_sign_token \u7b7e\u540d\u751f\u6210\u7684 token_id \u5982\u4e0b\uff0c\u5171 1932 Byte\uff1a MIIKoZIhvcNAQcCoIIFljCCBZICAQExDTALBglghkgBZQMEAgEwggPzBgkqhkiG9w0B ...... rhr0acV3bMKzmqvViHf-fPVnLDMJajOWSuhimqfLZHRdr+ck0WVQosB6+M6iAvrEF7v \u6ce8\u610f\u4e8b\u9879\uff1a \u4e0e\u6570\u5b57\u8bc1\u4e66\u7684\u7b7e\u540d\u65b9\u5f0f\u5b58\u5728\u5dee\u5f02\uff0c\u76f4\u63a5\u5c06token_data\u7ecf\u8fc7CMS\u52a0\u5bc6\u6210token\u3002API Endpoint\u6536\u5230Client\u53d1\u9001\u7684token\u540e\uff0c\u76f4\u63a5\u4f7f\u7528CA Certificate\u5185\u7684\u516c\u94a5\u89e3\u5bc6\u3002 Token\u9a8c\u8bc1\u548c\u5230\u671f PKI Token\u4f7fOpenstack API Endpoint\u80fd\u591f\u901a\u8fc7\u68c0\u67e5Keystone\u7684\u7b7e\u540d\u8fdb\u884c\u4ee4\u724c\u6709\u6548\u6027\u548c\u79bb\u7ebf\u9a8c\u8bc1 \u4ee5\u4e0b\u4e09\u6837\u4e1c\u897f\u90fd\u5e94\u8be5\u88ab\u9a8c\u8bc1\uff1a Token \u7684\u7b7e\u540d Token \u7684\u6709\u6548\u671f Token \u662f\u5426\u88ab\u5220\u9664\uff08\u64a4\u9500\uff09 \u88ab\u5220\u9664\u7684token\u88ab\u5f3a\u5236\u653e\u5165Keystone CA\u5185\u7684\u64a4\u9500\u5217\u8868\u4e2d\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u5217\u8868\u88abAPI Endpoint \u6bcf\u79d2\u4ece\u4e0b\u5217url\u4e2d\u66f4\u65b0\uff1a curl http://[KEYSTONE ip]:3537/V2.0/tokens/revoked \u5217\u8868\u7684\u5f62\u5f0f\u662f\u4e00\u4e2a\u7b80\u5355\u7684json\u6587\u4ef6\uff1a { \"revoked\": [ { \"expires\": \"2013-05-27T08:31:37Z\", \"id\": \"aef56cc3d1c9192b0257fba1a420fc37\" } \u2026 ] } CA\u8bc1\u4e66\u53ca\u6570\u5b57\u7b7e\u540d curl http://[KEYSTONE IP]:35357/v2.0/certificates/signing curl http://[KEYSTONE IP]:35357/v2.0/certificates/ca PKIZ Token PKIZ \u5728 PKI \u7684\u57fa\u7840\u4e0a\u505a\u4e86\u538b\u7f29\u5904\u7406\uff0c\u4f46\u662f\u538b\u7f29\u7684\u6548\u679c\u6781\u5176\u6709\u9650\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u538b\u7f29\u540e\u7684\u5927\u5c0f\u4e3a PKI token \u7684 90% \u5de6\u53f3\uff0c\u6240\u4ee5 PKIZ \u4e0d\u80fd\u53cb\u597d\u7684\u89e3\u51b3 token size \u592a\u5927\u95ee\u9898\u3002 Fernet Token Reference: Understanding OpenStack Authentication: Keystone PKI \u7406\u89e3 Keystone \u7684\u56db\u79cd Token","title":"Keystone Token"},{"location":"Openstack/Keystone_Token/#keystone_token","text":"","title":"Keystone_Token"},{"location":"Openstack/Keystone_Token/#_1","text":"\u4f5c\u4e3a\u4f7f\u7528API Endpoint\u7684Client \uff0c\u5176\u6570\u91cf\u3001\u7c7b\u578b\u90fd\u662f\u590d\u6742\u7684\uff0c\u56e0\u4e3a\u9700\u8981\u5bf9 Client\u7684\u8eab\u4efd\u8fdb\u884c\u9a8c\u8bc1 \u660e\u6587\u4f20\u8f93\u5bc6\u7801\u4e0d\u5b8c\u5168 Token \u4f5c\u4e3a\u4e34\u65f6\u51ed\u8bc1\uff0c\u53ef\u4ee5\u589e\u52a0\u8ba4\u8bc1\u8fc7\u7a0b\u4e2d\u7684\u5b89\u5168\u6027 \u9700\u8981\u9a8c\u8bc1 Token \u7684\u5408\u6cd5\u6027 API \u9700\u8981\u4ec0\u4e48\u4e1c\u897f role Project expire date Client \u9700\u8981\u4ec0\u4e48\u4e1c\u897f Project Catalog","title":"\u5173\u952e\u70b9"},{"location":"Openstack/Keystone_Token/#_2","text":"UUID tokens Fernet tokens PKI tokens PKIZ tokens","title":"\u56db\u79cd\u7c7b\u578b"},{"location":"Openstack/Keystone_Token/#uuid-tokens","text":"\u57fa\u4e8e Client \u63d0\u4f9b\u7684\u7528\u6237\u540d/\u5bc6\u7801\u662f\u6b63\u786e\u7684\uff1a keystone: \u751f\u6210 UUID token \u5c06 UUID token \u5b58\u50a8\u5728\u5176\u540e\u7aef \u5c06 UUID token \u7684\u526f\u672c\u53d1\u9001\u56de\u5ba2\u6237\u7aef \u5ba2\u6237\u7aef\u5c06\u7f13\u5b58 token \u7136\u540e\uff0cUUID token \u5c06\u968f\u5ba2\u6237\u7aef\u7684\u6bcf\u4e2a API \u8c03\u7528\u4e00\u8d77\u4f20\u9012 \u5728\u6536\u5230\u6bcf\u6b21\u7528\u6237\u7684\u8bf7\u6c42\u540e\uff0cAPI Endpoint \u4f1a\u5c06\u6b64 UUID token \u53d1\u9001\u5230 keystone \u8fdb\u884c\u9a8c\u8bc1 keystone \u5c06\u6536\u5230\u7684 UUID Token \u4e0e\u5b58\u653e\u5728\u540e\u7aef\u7684\u5339\u914d(\u68c0\u67e5 UUID \u5b57\u7b26\u4e32\uff0c\u5230\u671f\u65e5\u671f) keystone \u5c06\u5411 API \u7aef\u70b9\u8fd4\u56de\u201c\u6210\u529f\u201d\u6216\u201c\u5931\u8d25\u201d\u6d88\u606f","title":"UUID tokens"},{"location":"Openstack/Keystone_Token/#pki-token","text":"","title":"PKI Token"},{"location":"Openstack/Keystone_Token/#api-endpoint-keystone","text":"Signing certificate Revocation list CA certificate","title":"\u6bcf\u4e2aAPI Endpoint \u90fd\u4f1a\u4fdd\u7559 keystone \u7684\u526f\u672c\uff1a"},{"location":"Openstack/Keystone_Token/#cms-token","text":"Service catalog User roles Metadata \u751f\u6210\u4ee3\u7801\uff1a def _get_token_id(self, token_data): try: token_json = jsonutils.dumps(token_data, cls=utils.PKIEncoder) token_id = str(cms.cms_sign_token(token_json, CONF.signing.certfile, CONF.signing.keyfile)) return token_id \u5185\u5bb9\u5982\u4e0b\uff1a { \"token\": { \"methods\": [ \"password\" ], \"roles\": [{\"id\": \"5642056d336b4c2a894882425ce22a86\", \"name\": \"admin\"}], \"expires_at\": \"2015-12-25T09:57:28.404275Z\", \"project\": { \"domain\": { \"id\": \"default\", \"name\": \"Default\"}, \"id\": \"144d8a99a42447379ac37f78bf0ef608\", \"name\": \"admin\"}, \"catalog\": [ { \"endpoints\": [ { \"region_id\": \"RegionOne\", \"url\": \"http://controller:5000/v2.0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"3837de623efd4af799e050d4d8d1f307\" }, ...... ]}], \"extras\": {}, \"user\": { \"domain\": {\"id\": \"default\", \"name\": \"Default\"}, \"id\": \"1552d60a042e4a2caa07ea7ae6aa2f09\", \"name\": \"admin\"}, \"audit_ids\": [\"ZCvZW2TtTgiaAsVA8qmc3A\"], \"issued_at\": \"2015-12-25T08:57:28.404304Z\" } } token_data \u7ecf cms.cms_sign_token \u7b7e\u540d\u751f\u6210\u7684 token_id \u5982\u4e0b\uff0c\u5171 1932 Byte\uff1a MIIKoZIhvcNAQcCoIIFljCCBZICAQExDTALBglghkgBZQMEAgEwggPzBgkqhkiG9w0B ...... rhr0acV3bMKzmqvViHf-fPVnLDMJajOWSuhimqfLZHRdr+ck0WVQosB6+M6iAvrEF7v","title":"\u751f\u6210CMS Token \uff0c\u4f7f\u7528\u5982\u4e0b\u6570\u636e\uff1a"},{"location":"Openstack/Keystone_Token/#_3","text":"\u4e0e\u6570\u5b57\u8bc1\u4e66\u7684\u7b7e\u540d\u65b9\u5f0f\u5b58\u5728\u5dee\u5f02\uff0c\u76f4\u63a5\u5c06token_data\u7ecf\u8fc7CMS\u52a0\u5bc6\u6210token\u3002API Endpoint\u6536\u5230Client\u53d1\u9001\u7684token\u540e\uff0c\u76f4\u63a5\u4f7f\u7528CA Certificate\u5185\u7684\u516c\u94a5\u89e3\u5bc6\u3002","title":"\u6ce8\u610f\u4e8b\u9879\uff1a"},{"location":"Openstack/Keystone_Token/#token","text":"PKI Token\u4f7fOpenstack API Endpoint\u80fd\u591f\u901a\u8fc7\u68c0\u67e5Keystone\u7684\u7b7e\u540d\u8fdb\u884c\u4ee4\u724c\u6709\u6548\u6027\u548c\u79bb\u7ebf\u9a8c\u8bc1 \u4ee5\u4e0b\u4e09\u6837\u4e1c\u897f\u90fd\u5e94\u8be5\u88ab\u9a8c\u8bc1\uff1a Token \u7684\u7b7e\u540d Token \u7684\u6709\u6548\u671f Token \u662f\u5426\u88ab\u5220\u9664\uff08\u64a4\u9500\uff09 \u88ab\u5220\u9664\u7684token\u88ab\u5f3a\u5236\u653e\u5165Keystone CA\u5185\u7684\u64a4\u9500\u5217\u8868\u4e2d\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u5217\u8868\u88abAPI Endpoint \u6bcf\u79d2\u4ece\u4e0b\u5217url\u4e2d\u66f4\u65b0\uff1a curl http://[KEYSTONE ip]:3537/V2.0/tokens/revoked \u5217\u8868\u7684\u5f62\u5f0f\u662f\u4e00\u4e2a\u7b80\u5355\u7684json\u6587\u4ef6\uff1a { \"revoked\": [ { \"expires\": \"2013-05-27T08:31:37Z\", \"id\": \"aef56cc3d1c9192b0257fba1a420fc37\" } \u2026 ] }","title":"Token\u9a8c\u8bc1\u548c\u5230\u671f"},{"location":"Openstack/Keystone_Token/#ca","text":"curl http://[KEYSTONE IP]:35357/v2.0/certificates/signing curl http://[KEYSTONE IP]:35357/v2.0/certificates/ca","title":"CA\u8bc1\u4e66\u53ca\u6570\u5b57\u7b7e\u540d"},{"location":"Openstack/Keystone_Token/#pkiz-token","text":"PKIZ \u5728 PKI \u7684\u57fa\u7840\u4e0a\u505a\u4e86\u538b\u7f29\u5904\u7406\uff0c\u4f46\u662f\u538b\u7f29\u7684\u6548\u679c\u6781\u5176\u6709\u9650\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u538b\u7f29\u540e\u7684\u5927\u5c0f\u4e3a PKI token \u7684 90% \u5de6\u53f3\uff0c\u6240\u4ee5 PKIZ \u4e0d\u80fd\u53cb\u597d\u7684\u89e3\u51b3 token size \u592a\u5927\u95ee\u9898\u3002","title":"PKIZ Token"},{"location":"Openstack/Keystone_Token/#fernet-token","text":"Reference: Understanding OpenStack Authentication: Keystone PKI \u7406\u89e3 Keystone \u7684\u56db\u79cd Token","title":"Fernet Token"},{"location":"Openstack/Networking (neutron) concepts/","text":"Networking (neutron) concepts OpenStack Networking (neutron) manages all networking facets for the Virtual Networking Infrastructure (VNI) and the access layer aspects of the Physical Networking Infrastructure (PNI) in your OpenStack environment. OpenStack Networking enables projects to create advanced virtual network topologies which may include services such as a firewall, a load balancer, and a virtual private network (VPN). Networking provides networks, subnets, and routers as object abstractions. Each abstraction has functionality that mimics its physical counterpart: networks contain subnets, and routers route traffic between different subnets and networks. Any given Networking set up has at least one external network. Unlike the other networks, the external network is not merely a virtually defined network. Instead, it represents a view into a slice of the physical, external network accessible outside the OpenStack installation. IP addresses on the external network are accessible by anybody physically on the outside network. In addition to external networks, any Networking set up has one or more internal networks. These software-defined networks connect directly to the VMs. Only the VMs on any given internal network, or those on subnets connected through interfaces to a similar router, can access VMs connected to that network directly. For the outside network to access VMs, and vice versa, routers between the networks are needed. Each router has one gateway that is connected to an external network and one or more interfaces connected to internal networks. Like a physical router, subnets can access machines on other subnets that are connected to the same router, and machines can access the outside network through the gateway for the router. Additionally, you can allocate IP addresses on external networks to ports on the internal network. Whenever something is connected to a subnet, that connection is called a port. You can associate external network IP addresses with ports to VMs. This way, entities on the outside network can access VMs. Networking also supports security groups . Security groups enable administrators to define firewall rules in groups. A VM can belong to one or more security groups, and Networking applies the rules in those security groups to block or unblock ports, port ranges, or traffic types for that VM. Each plug-in that Networking uses has its own concepts. While not vital to operating the VNI and OpenStack environment, understanding these concepts can help you set up Networking. All Networking installations use a core plug-in and a security group plug-in (or just the No-Op security group plug-in). Additionally, Firewall-as-a-Service (FWaaS) and Load-Balancer-as-a-Service (LBaaS) plug-ins are available. \u7f51\u7edc(neutron)\u6982\u5ff5 Openstack \u7f51\u7edc(neutron)\u7ba1\u7406\u5728Openstack \u73af\u5883\u4e2d\u7684\u865a\u62df\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd(VNI)\u7684\u7f51\u7edc\u5e73\u9762\u548c\u7269\u7406\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u7684\u63a5\u5165\u5c42\u3002Openstack\u7f51\u7edc\u4f7f\u80fd\u9879\u76ee\u521b\u5efa\u9ad8\u7ea7\u7684\u865a\u62df\u7f51\u7edc\u62d3\u6251\uff0c\u53ef\u80fd\u5305\u62ec\u670d\u52a1\u6709\u9632\u706b\u5899\u3001\u8d1f\u8f7d\u5747\u8861\u5668\u4ee5\u53ca\u4e00\u4e2a\u865a\u62df\u7684\u79c1\u6709\u7f51\u7edc(VPN)\u3002 \u7f51\u7edc(Networking)\u63d0\u4f9b\u7f51\u7edc(network)\u3001\u5b50\u7f51\u548c\u8def\u7531\u5668\u8fd9\u4e9b\u5bf9\u8c61\u7684\u62bd\u8c61\u3002\u6bcf\u4e2a\u62bd\u8c61\u90fd\u80fd\u6a21\u5f77\u7269\u7406\u526f\u672c\u7684\u529f\u80fd\uff1a\u7f51\u7edc\u5305\u542b\u5b50\u7f51\u548c\u8def\u7531\u5668\u5728\u4e0d\u540c\u7684\u5b50\u7f51\u548c\u7f51\u7edc\u95f4\u8def\u7531\u6d41\u91cf\u3002 \u4efb\u4f55\u7ed9\u5b9a\u7684\u7f51\u7edc(Networking)\u90fd\u9700\u8981\u8bbe\u7f6e\u81f3\u5c11\u4e00\u4e2a\u5916\u90e8\u7f51\u7edc(network)\u3002\u5b83\u4e0d\u50cf\u5176\u5b83\u7f51\u7edc\uff0c\u8fd9\u4e2a\u5916\u90e8\u7f51\u7edc\u4e0d\u4ec5\u4ec5\u662f\u4e2a\u865a\u62df\u5b9a\u4e49\u7684\u7f51\u7edc\u3002\u53cd\u800c\uff0c\u5b83\u4ee3\u8868\u7740\u7269\u7406\u7684\u67d0\u4e00\u90e8\u5206\u7684\u89c6\u56fe\uff0c\u901a\u8fc7\u5916\u90e8\u7f51\u7edc\u80fd\u591f\u8bbf\u95eeOpenstack\u7ba1\u7406\u7684\u5916\u90e8\u533a\u57df\u3002\u5728\u5916\u90e8\u7f51\u7edc\u4e0a\u7684IP\u5730\u5740\u80fd\u591f\u901a\u8fc7\u5916\u90e8\u533a\u57df\u7f51\u7edc\u7684\u4efb\u610f\u7269\u7406\u90e8\u5206\u8bbf\u95ee\u3002 \u9664\u4e86\u5916\u90e8\u7f51\u7edc\uff0c\u6240\u6709\u7684\u7f51\u7edc\uff08Networking\uff09\u90fd\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u6216\u66f4\u591a\u7684\u5185\u7edc\u7f51\u7edc\u3002\u8fd9\u4e2a\u8f6f\u4ef6\u5b9a\u4e49\u7684\u7f51\u7edc\u76f4\u63a5\u4e0e\u865a\u62df\u673a\u76f8\u8fde\u3002\u53ea\u6709\u5728\u4efb\u610f\u7ed9\u5b9a\u7684\u5185\u90e8\u7f51\u7edc\u7684\u865a\u62df\u673a\uff0c\u6216\u8005\u90a3\u4e9b\u901a\u8fc7\u63a5\u53e3\u8fde\u63a5\u5b50\u7f51\u7684\u7c7b\u4f3c\u8def\u7531\u5668\uff0c\u624d\u80fd\u901a\u8fc7\u7f51\u7edc\u76f4\u63a5\u8bbf\u95ee\u865a\u62df\u673a\u3002 \u5bf9\u4e8e\u5916\u90e8\u533a\u57df\u7684\u7f51\u7edc\u8bbf\u95ee\u865a\u62df\u673a\uff0c\u53cd\u4e4b\u4ea6\u7136\uff0c\u5728\u8fd9\u4e9b\u7f51\u7edc\u4e4b\u95f4\u8def\u7531\u5668\u662f\u5fc5\u987b\u7684\u3002\u6bcf\u4e2a\u8def\u7531\u5668\u62e5\u6709\u4e00\u4e2a\u8fde\u63a5\u5916\u90e8\u7f51\u7edc\u7684\u7f51\u5173\u548c\u4e00\u4e2a\u6216\u591a\u4e2a\u8fde\u63a5\u5185\u90e8\u7f51\u7edc\u7684\u63a5\u53e3\u3002\u5c31\u50cf\u4e00\u4e2a\u7269\u7406\u7684\u8def\u7531\u5668\uff0c\u8fde\u63a5\u5230\u540c\u4e00\u4e2a\u8def\u7531\u5668\u4e0a\u7684\u4e00\u4e2a\u5b50\u7f51\u80fd\u591f\u8bbf\u95ee\u53e6\u4e00\u4e2a\u5b50\u7f51\uff0c\u5e76\u4e14\u8bbe\u5907\u4e5f\u80fd\u901a\u8fc7\u8def\u7531\u5668\u4e0a\u7684\u7f51\u5173\u8bbf\u95ee\u5916\u90e8\u533a\u57df\u7684\u7f51\u7edc\u3002 \u6b64\u5916\uff0c\u4f60\u53ef\u4ee5\u5206\u914d\u5916\u90e8\u7f51\u7edc\u4e0a\u7684IP\u5730\u5740\u7ed9\u5185\u90e8\u7f51\u7edc\u7684\u7aef\u53e3\u3002\u6bcf\u5f53\u6709\u4e00\u4e2a\u4e1c\u897f\u8fde\u63a5\u5230\u5b50\u7f51\uff0c\u8fd9\u4e2a\u8fde\u63a5\u53eb\u4f5c\u7aef\u53e3\u3002\u4f60\u80fd\u591f\u5c06\u5916\u90e8\u7f51\u7edc\u7684IP\u5730\u5740\u548c\u8fde\u63a5\u865a\u62df\u673a\u7684\u7aef\u53e3\u5173\u8054\u3002\u8fd9\u6837\uff0c\u5728\u5916\u90e8\u533a\u57df\u7f51\u7edc\u7684\u5b9e\u4f53\u5c31\u80fd\u8bbf\u95ee\u865a\u62df\u673a\u4e86\u3002 \u7f51\u7edc(Networking)\u4e5f\u652f\u6301 \u5b89\u5168\u7ec4 \u3002\u5b89\u5168\u7ec4\u4f7f\u80fd\u7ba1\u7406\u5458\u5728\u7ec4\u5185\u5b9a\u4e49\u9632\u706b\u5899\u89c4\u5219\u3002\u4e00\u4e2a\u865a\u62df\u673a\u53ef\u4ee5\u5c5e\u4e8e\u4e00\u4e2a\u6216\u591a\u4e2a\u5b89\u5168\u7ec4\uff0c\u7f51\u7edc\uff08Networking\uff09\u5728\u90a3\u4e9b\u5b89\u5168\u7ec4\u5185\u4e3a\u865a\u62df\u673a\u63d0\u4f9b\u89c4\u5219\u963b\u585e\u6216\u4e0d\u963b\u585e\u7aef\u53e3\u3001\u7aef\u53e3\u8303\u56f4\u6216\u8005\u6d41\u91cf\u7684\u6d41\u91cf\u3002 \u6bcf\u4e2a\u7f51\u7edc(Networking)\u63d2\u4ef6\u90fd\u4f7f\u7528\u5b83\u62e5\u6709\u7684\u6982\u5ff5\u3002\u867d\u7136\u8fd9\u4e9b\u5bf9\u4e8e\u64cd\u4f5cVNI\u548cOpenstack\u73af\u5883\u4e0d\u662f\u81f3\u5173\u91cd\u8981\u7684\uff0c\u660e\u767d\u8fd9\u4e9b\u6982\u5ff5\u80fd\u591f\u5e2e\u52a9\u4f60\u914d\u7f6e\u7f51\u7edc\uff08Networking)\u3002\u6240\u6709\u7684\u7f51\u7edc\u5b89\u88c5\u90fd\u4f7f\u7528\u4e00\u4e2acore \u63d2\u4ef6\u548c\u4e00\u4e2a\u5b89\u5168\u7ec4\u63d2\u4ef6\uff08\u6216\u8005\u53ea\u662f\u4e00\u4e2aNo-Op \u5b89\u5168\u7ec4\u63d2\u4ef6\uff09\u3002\u53e6\u5916\uff0c\u9632\u706b\u5899\u5373\u670d\u52a1\uff08FWaaS)\u548c\u8d1f\u8f7d\u5747\u8861\u5373\u670d\u52a1(LBaaS)\u63d2\u4ef6\u4e5f\u662f\u6709\u6548\u7684\u3002 facet[n.]\u9762\uff1b\u65b9\u9762\uff1b\u5c0f\u5e73\u9762 aspect[n.]\u65b9\u9762\uff1b\u65b9\u5411 abstraction[n.]\u62bd\u8c61 functionality[n.]\u529f\u80fd mimic[vt.]\u6a21\u4eff counterpart[n.]\u526f\u672c least[adj.]\u6700\u5c0f\u7684\uff1b\u6700\u5c11\u7684 merely[adv.]\u4ec5\u4ec5 represent[vt.]\u4ee3\u8868 slice[n.]\u8584\u7247\uff1b\u90e8\u5206 physically[adv.]\u8eab\u4f53\u4e0a in addition to \u9664...\u4e4b\u5916 vice[prep]\u4ee3\u66ff versa[adj.]\u53cd\u7684 vice versa \u53cd\u4e4b\u4ea6\u7136 additionally[adv.]\u6b64\u5916 whenever[conj.]\u6bcf\u5f53\uff1b\u65e0\u8bba\u4f55\u65f6 assoiate[vt.]\u8054\u60f3\uff1b\u4f7f\u8054\u5408 entity[n.]\u5b9e\u4f53 vital[adj.]\u81f3\u5173\u91cd\u8981\u7684 while[conj.]\u867d\u7136\uff1b\u7136\u800c\uff1b\u5f53...\u7684\u65f6\u5019","title":"Networking (neutron) concepts"},{"location":"Openstack/Networking (neutron) concepts/#networking-neutron-concepts","text":"OpenStack Networking (neutron) manages all networking facets for the Virtual Networking Infrastructure (VNI) and the access layer aspects of the Physical Networking Infrastructure (PNI) in your OpenStack environment. OpenStack Networking enables projects to create advanced virtual network topologies which may include services such as a firewall, a load balancer, and a virtual private network (VPN). Networking provides networks, subnets, and routers as object abstractions. Each abstraction has functionality that mimics its physical counterpart: networks contain subnets, and routers route traffic between different subnets and networks. Any given Networking set up has at least one external network. Unlike the other networks, the external network is not merely a virtually defined network. Instead, it represents a view into a slice of the physical, external network accessible outside the OpenStack installation. IP addresses on the external network are accessible by anybody physically on the outside network. In addition to external networks, any Networking set up has one or more internal networks. These software-defined networks connect directly to the VMs. Only the VMs on any given internal network, or those on subnets connected through interfaces to a similar router, can access VMs connected to that network directly. For the outside network to access VMs, and vice versa, routers between the networks are needed. Each router has one gateway that is connected to an external network and one or more interfaces connected to internal networks. Like a physical router, subnets can access machines on other subnets that are connected to the same router, and machines can access the outside network through the gateway for the router. Additionally, you can allocate IP addresses on external networks to ports on the internal network. Whenever something is connected to a subnet, that connection is called a port. You can associate external network IP addresses with ports to VMs. This way, entities on the outside network can access VMs. Networking also supports security groups . Security groups enable administrators to define firewall rules in groups. A VM can belong to one or more security groups, and Networking applies the rules in those security groups to block or unblock ports, port ranges, or traffic types for that VM. Each plug-in that Networking uses has its own concepts. While not vital to operating the VNI and OpenStack environment, understanding these concepts can help you set up Networking. All Networking installations use a core plug-in and a security group plug-in (or just the No-Op security group plug-in). Additionally, Firewall-as-a-Service (FWaaS) and Load-Balancer-as-a-Service (LBaaS) plug-ins are available.","title":"Networking (neutron) concepts"},{"location":"Openstack/Networking (neutron) concepts/#neutron","text":"Openstack \u7f51\u7edc(neutron)\u7ba1\u7406\u5728Openstack \u73af\u5883\u4e2d\u7684\u865a\u62df\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd(VNI)\u7684\u7f51\u7edc\u5e73\u9762\u548c\u7269\u7406\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u7684\u63a5\u5165\u5c42\u3002Openstack\u7f51\u7edc\u4f7f\u80fd\u9879\u76ee\u521b\u5efa\u9ad8\u7ea7\u7684\u865a\u62df\u7f51\u7edc\u62d3\u6251\uff0c\u53ef\u80fd\u5305\u62ec\u670d\u52a1\u6709\u9632\u706b\u5899\u3001\u8d1f\u8f7d\u5747\u8861\u5668\u4ee5\u53ca\u4e00\u4e2a\u865a\u62df\u7684\u79c1\u6709\u7f51\u7edc(VPN)\u3002 \u7f51\u7edc(Networking)\u63d0\u4f9b\u7f51\u7edc(network)\u3001\u5b50\u7f51\u548c\u8def\u7531\u5668\u8fd9\u4e9b\u5bf9\u8c61\u7684\u62bd\u8c61\u3002\u6bcf\u4e2a\u62bd\u8c61\u90fd\u80fd\u6a21\u5f77\u7269\u7406\u526f\u672c\u7684\u529f\u80fd\uff1a\u7f51\u7edc\u5305\u542b\u5b50\u7f51\u548c\u8def\u7531\u5668\u5728\u4e0d\u540c\u7684\u5b50\u7f51\u548c\u7f51\u7edc\u95f4\u8def\u7531\u6d41\u91cf\u3002 \u4efb\u4f55\u7ed9\u5b9a\u7684\u7f51\u7edc(Networking)\u90fd\u9700\u8981\u8bbe\u7f6e\u81f3\u5c11\u4e00\u4e2a\u5916\u90e8\u7f51\u7edc(network)\u3002\u5b83\u4e0d\u50cf\u5176\u5b83\u7f51\u7edc\uff0c\u8fd9\u4e2a\u5916\u90e8\u7f51\u7edc\u4e0d\u4ec5\u4ec5\u662f\u4e2a\u865a\u62df\u5b9a\u4e49\u7684\u7f51\u7edc\u3002\u53cd\u800c\uff0c\u5b83\u4ee3\u8868\u7740\u7269\u7406\u7684\u67d0\u4e00\u90e8\u5206\u7684\u89c6\u56fe\uff0c\u901a\u8fc7\u5916\u90e8\u7f51\u7edc\u80fd\u591f\u8bbf\u95eeOpenstack\u7ba1\u7406\u7684\u5916\u90e8\u533a\u57df\u3002\u5728\u5916\u90e8\u7f51\u7edc\u4e0a\u7684IP\u5730\u5740\u80fd\u591f\u901a\u8fc7\u5916\u90e8\u533a\u57df\u7f51\u7edc\u7684\u4efb\u610f\u7269\u7406\u90e8\u5206\u8bbf\u95ee\u3002 \u9664\u4e86\u5916\u90e8\u7f51\u7edc\uff0c\u6240\u6709\u7684\u7f51\u7edc\uff08Networking\uff09\u90fd\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u6216\u66f4\u591a\u7684\u5185\u7edc\u7f51\u7edc\u3002\u8fd9\u4e2a\u8f6f\u4ef6\u5b9a\u4e49\u7684\u7f51\u7edc\u76f4\u63a5\u4e0e\u865a\u62df\u673a\u76f8\u8fde\u3002\u53ea\u6709\u5728\u4efb\u610f\u7ed9\u5b9a\u7684\u5185\u90e8\u7f51\u7edc\u7684\u865a\u62df\u673a\uff0c\u6216\u8005\u90a3\u4e9b\u901a\u8fc7\u63a5\u53e3\u8fde\u63a5\u5b50\u7f51\u7684\u7c7b\u4f3c\u8def\u7531\u5668\uff0c\u624d\u80fd\u901a\u8fc7\u7f51\u7edc\u76f4\u63a5\u8bbf\u95ee\u865a\u62df\u673a\u3002 \u5bf9\u4e8e\u5916\u90e8\u533a\u57df\u7684\u7f51\u7edc\u8bbf\u95ee\u865a\u62df\u673a\uff0c\u53cd\u4e4b\u4ea6\u7136\uff0c\u5728\u8fd9\u4e9b\u7f51\u7edc\u4e4b\u95f4\u8def\u7531\u5668\u662f\u5fc5\u987b\u7684\u3002\u6bcf\u4e2a\u8def\u7531\u5668\u62e5\u6709\u4e00\u4e2a\u8fde\u63a5\u5916\u90e8\u7f51\u7edc\u7684\u7f51\u5173\u548c\u4e00\u4e2a\u6216\u591a\u4e2a\u8fde\u63a5\u5185\u90e8\u7f51\u7edc\u7684\u63a5\u53e3\u3002\u5c31\u50cf\u4e00\u4e2a\u7269\u7406\u7684\u8def\u7531\u5668\uff0c\u8fde\u63a5\u5230\u540c\u4e00\u4e2a\u8def\u7531\u5668\u4e0a\u7684\u4e00\u4e2a\u5b50\u7f51\u80fd\u591f\u8bbf\u95ee\u53e6\u4e00\u4e2a\u5b50\u7f51\uff0c\u5e76\u4e14\u8bbe\u5907\u4e5f\u80fd\u901a\u8fc7\u8def\u7531\u5668\u4e0a\u7684\u7f51\u5173\u8bbf\u95ee\u5916\u90e8\u533a\u57df\u7684\u7f51\u7edc\u3002 \u6b64\u5916\uff0c\u4f60\u53ef\u4ee5\u5206\u914d\u5916\u90e8\u7f51\u7edc\u4e0a\u7684IP\u5730\u5740\u7ed9\u5185\u90e8\u7f51\u7edc\u7684\u7aef\u53e3\u3002\u6bcf\u5f53\u6709\u4e00\u4e2a\u4e1c\u897f\u8fde\u63a5\u5230\u5b50\u7f51\uff0c\u8fd9\u4e2a\u8fde\u63a5\u53eb\u4f5c\u7aef\u53e3\u3002\u4f60\u80fd\u591f\u5c06\u5916\u90e8\u7f51\u7edc\u7684IP\u5730\u5740\u548c\u8fde\u63a5\u865a\u62df\u673a\u7684\u7aef\u53e3\u5173\u8054\u3002\u8fd9\u6837\uff0c\u5728\u5916\u90e8\u533a\u57df\u7f51\u7edc\u7684\u5b9e\u4f53\u5c31\u80fd\u8bbf\u95ee\u865a\u62df\u673a\u4e86\u3002 \u7f51\u7edc(Networking)\u4e5f\u652f\u6301 \u5b89\u5168\u7ec4 \u3002\u5b89\u5168\u7ec4\u4f7f\u80fd\u7ba1\u7406\u5458\u5728\u7ec4\u5185\u5b9a\u4e49\u9632\u706b\u5899\u89c4\u5219\u3002\u4e00\u4e2a\u865a\u62df\u673a\u53ef\u4ee5\u5c5e\u4e8e\u4e00\u4e2a\u6216\u591a\u4e2a\u5b89\u5168\u7ec4\uff0c\u7f51\u7edc\uff08Networking\uff09\u5728\u90a3\u4e9b\u5b89\u5168\u7ec4\u5185\u4e3a\u865a\u62df\u673a\u63d0\u4f9b\u89c4\u5219\u963b\u585e\u6216\u4e0d\u963b\u585e\u7aef\u53e3\u3001\u7aef\u53e3\u8303\u56f4\u6216\u8005\u6d41\u91cf\u7684\u6d41\u91cf\u3002 \u6bcf\u4e2a\u7f51\u7edc(Networking)\u63d2\u4ef6\u90fd\u4f7f\u7528\u5b83\u62e5\u6709\u7684\u6982\u5ff5\u3002\u867d\u7136\u8fd9\u4e9b\u5bf9\u4e8e\u64cd\u4f5cVNI\u548cOpenstack\u73af\u5883\u4e0d\u662f\u81f3\u5173\u91cd\u8981\u7684\uff0c\u660e\u767d\u8fd9\u4e9b\u6982\u5ff5\u80fd\u591f\u5e2e\u52a9\u4f60\u914d\u7f6e\u7f51\u7edc\uff08Networking)\u3002\u6240\u6709\u7684\u7f51\u7edc\u5b89\u88c5\u90fd\u4f7f\u7528\u4e00\u4e2acore \u63d2\u4ef6\u548c\u4e00\u4e2a\u5b89\u5168\u7ec4\u63d2\u4ef6\uff08\u6216\u8005\u53ea\u662f\u4e00\u4e2aNo-Op \u5b89\u5168\u7ec4\u63d2\u4ef6\uff09\u3002\u53e6\u5916\uff0c\u9632\u706b\u5899\u5373\u670d\u52a1\uff08FWaaS)\u548c\u8d1f\u8f7d\u5747\u8861\u5373\u670d\u52a1(LBaaS)\u63d2\u4ef6\u4e5f\u662f\u6709\u6548\u7684\u3002 facet[n.]\u9762\uff1b\u65b9\u9762\uff1b\u5c0f\u5e73\u9762 aspect[n.]\u65b9\u9762\uff1b\u65b9\u5411 abstraction[n.]\u62bd\u8c61 functionality[n.]\u529f\u80fd mimic[vt.]\u6a21\u4eff counterpart[n.]\u526f\u672c least[adj.]\u6700\u5c0f\u7684\uff1b\u6700\u5c11\u7684 merely[adv.]\u4ec5\u4ec5 represent[vt.]\u4ee3\u8868 slice[n.]\u8584\u7247\uff1b\u90e8\u5206 physically[adv.]\u8eab\u4f53\u4e0a in addition to \u9664...\u4e4b\u5916 vice[prep]\u4ee3\u66ff versa[adj.]\u53cd\u7684 vice versa \u53cd\u4e4b\u4ea6\u7136 additionally[adv.]\u6b64\u5916 whenever[conj.]\u6bcf\u5f53\uff1b\u65e0\u8bba\u4f55\u65f6 assoiate[vt.]\u8054\u60f3\uff1b\u4f7f\u8054\u5408 entity[n.]\u5b9e\u4f53 vital[adj.]\u81f3\u5173\u91cd\u8981\u7684 while[conj.]\u867d\u7136\uff1b\u7136\u800c\uff1b\u5f53...\u7684\u65f6\u5019","title":"\u7f51\u7edc(neutron)\u6982\u5ff5"},{"location":"Openstack/Networking service overview/","text":"Networking service overview OpenStack Networking (neutron) allows you to create and attach interface devices managed by other OpenStack services to networks. Plug-ins can be implemented to accommodate different networking equipment and software, providing flexibility to OpenStack architecture and deployment. It includes the following components: neutron-server Accepts and routes API requests to the appropriate OpenStack Networking plug-in for action. OpenStack Networking plug-ins and agents Plug and unplug ports, create networks or subnets, and provide IP addressing. These plug-ins and agents differ depending on the vendor and technologies used in the particular cloud. OpenStack Networking ships with plug-ins and agents for Cisco virtual and physical switches, NEC OpenFlow products, Open vSwitch, Linux bridging, and the VMware NSX product.The common agents are L3 (layer 3), DHCP (dynamic host IP addressing), and a plug-in agent. Messaging queue Used by most OpenStack Networking installations to route information between the neutron-server and various agents. Also acts as a database to store networking state for particular plug-ins. OpenStack Networking mainly interacts with OpenStack Compute to provide networks and connectivity for its instances. implement[vt.]\u5b9e\u65bd\uff0c\u6267\u884c\uff1b\u5b9e\u73b0\uff0c\u4f7f\u751f\u6548 accommodate[vt.]\u5bb9\u7eb3\uff1b\u4f7f\u9002\u5e94\uff1b\u4f9b\u5e94\uff1b\u8c03\u89e3 equipement[n.]\u8bbe\u5907\uff0c\u88c5\u5907\uff1b\u5668\u6750 flexibility[n.]\u7075\u6d3b\u6027\uff1b\u5f39\u6027\uff1b\u9002\u5e94\u6027 appropriate[adj.]\u9002\u5f53\u7684\uff1b\u6070\u5f53\u7684\uff1b\u5408\u9002\u7684 depend[vt.]\u4f9d\u8d56 particular[adj.]\u7279\u522b\u7684\uff1b\u8be6\u7ec6\u7684\uff1b\u72ec\u6709\u7684\uff1b ship with \u9644\u5e26 installation[n.]\u5b89\u88c5\uff0c\u88c5\u7f6e\uff1b\u5c31\u804c various[adj.]\u5404\u79cd\u5404\u6837\u7684\uff1b\u591a\u65b9\u9762\u7684 mainly[adv.]\u4e3b\u8981\u5730\uff0c\u5927\u4f53\u4e0a \u7f51\u7edc\u670d\u52a1\u6982\u89c8 Openstack Networking(neutron) \u5141\u8bb8\u4f60\u521b\u5efa\u548c\u8fde\u63a5\u63a5\u53e3\u8bbe\u5907\uff0c\u901a\u8fc7\u5176\u5b83\u7684Openstack\u670d\u52a1\u5bf9\u7f51\u7edc\u8fdb\u884c\u7ba1\u7406\u3002\u63d2\u4ef6\u80fd\u591f\u88ab\u5b9e\u73b0\u6210\u80fd\u591f\u9002\u5e94\u4e0d\u540c\u7684\u7f51\u7edc\u8bbe\u5907\u548c\u8f6f\u4ef6\uff0c\u5bf9Openstack \u7684\u67b6\u6784\u548c\u5b9e\u73b0\u63d0\u4f9b\u7075\u6d3b\u6027\u3002 \u5b83\u5305\u62ec\u4e86\u4ee5\u4e0b\u7ec4\u4ef6\uff1a neutron-server \u63a5\u53d7API\u8bf7\u6c42\u5e76\u5c06\u5176\u8def\u7531\u5230\u9002\u5f53\u7684Openstack \u7f51\u7edc\u63d2\u4ef6\u6267\u884c\u52a8\u4f5c\u3002 Openstack Networking plug-ins and agents \u63d2\u5165\u548c\u62d4\u51fa\u7aef\u53e3\uff0c\u521b\u5efa\u7f51\u7edc\u6216\u5b50\u7f51\uff0c\u4ee5\u53ca\u63d0\u4f9bIP\u5730\u5740\u3002\u63d2\u4ef6\u548c\u4ee3\u7406\u5728\u63d0\u4f9b\u5546\u548c\u5728\u4e2a\u522b\u4e91\u7684\u6280\u672f\u4f7f\u7528\u4e0a\u6709\u7740\u4e0d\u540c\u7684\u4f9d\u8d56\u3002Openstack \u7f51\u7edc\u9644\u5e26\u63d2\u4ef6\u548c\u4ee3\u7406\u7528\u4e8e\u601d\u79d1\u7684\u865a\u62df\u3001\u7269\u7406\u4ea4\u6362\u673a\uff0cNEC OpenFlow\u4ea7\u54c1\uff0cOpenstack vSwitch,Linux bridging,\u548cVMware NSX \u4ea7\u54c1\u3002 \u5e38\u89c1\u7684\u4ee3\u7406\u6709L3\uff08layer 3)\uff0cDHCP\uff08\u52a8\u6001\u4e3b\u673aIP\u5730\u5740\uff09\uff0c\u548c\u63d2\u4ef6\u4ee3\u7406\u3002 \u6d88\u606f\u961f\u5217 \u7528\u5728\u5927\u90e8\u5206\u7684Openstack \u7f51\u7edc\u88c5\u7f6e\u5728neutron-server\u548c\u5404\u79cd\u5404\u6837\u7684\u4ee3\u7406\u4e4b\u95f4\u8def\u7531\u4fe1\u606f\u3002\u4e5f\u5145\u5f53\u4e00\u4e2a\u6570\u636e\u5e93\u4e3a\u4e2a\u522b\u63d2\u4ef6\u5b58\u50a8\u7f51\u7edc\u72b6\u6001\u3002 Openstack Networking\u4e3b\u8981\u548cOpenstack Compute\u4ea4\u4e92\uff0c\u7528\u4e8e\u63d0\u4f9b\u7f51\u7edc\u548c\u8fde\u63a5\u5b9e\u4f8b\u3002","title":"Networking service overview"},{"location":"Openstack/Networking service overview/#networking-service-overview","text":"OpenStack Networking (neutron) allows you to create and attach interface devices managed by other OpenStack services to networks. Plug-ins can be implemented to accommodate different networking equipment and software, providing flexibility to OpenStack architecture and deployment. It includes the following components: neutron-server Accepts and routes API requests to the appropriate OpenStack Networking plug-in for action. OpenStack Networking plug-ins and agents Plug and unplug ports, create networks or subnets, and provide IP addressing. These plug-ins and agents differ depending on the vendor and technologies used in the particular cloud. OpenStack Networking ships with plug-ins and agents for Cisco virtual and physical switches, NEC OpenFlow products, Open vSwitch, Linux bridging, and the VMware NSX product.The common agents are L3 (layer 3), DHCP (dynamic host IP addressing), and a plug-in agent. Messaging queue Used by most OpenStack Networking installations to route information between the neutron-server and various agents. Also acts as a database to store networking state for particular plug-ins. OpenStack Networking mainly interacts with OpenStack Compute to provide networks and connectivity for its instances. implement[vt.]\u5b9e\u65bd\uff0c\u6267\u884c\uff1b\u5b9e\u73b0\uff0c\u4f7f\u751f\u6548 accommodate[vt.]\u5bb9\u7eb3\uff1b\u4f7f\u9002\u5e94\uff1b\u4f9b\u5e94\uff1b\u8c03\u89e3 equipement[n.]\u8bbe\u5907\uff0c\u88c5\u5907\uff1b\u5668\u6750 flexibility[n.]\u7075\u6d3b\u6027\uff1b\u5f39\u6027\uff1b\u9002\u5e94\u6027 appropriate[adj.]\u9002\u5f53\u7684\uff1b\u6070\u5f53\u7684\uff1b\u5408\u9002\u7684 depend[vt.]\u4f9d\u8d56 particular[adj.]\u7279\u522b\u7684\uff1b\u8be6\u7ec6\u7684\uff1b\u72ec\u6709\u7684\uff1b ship with \u9644\u5e26 installation[n.]\u5b89\u88c5\uff0c\u88c5\u7f6e\uff1b\u5c31\u804c various[adj.]\u5404\u79cd\u5404\u6837\u7684\uff1b\u591a\u65b9\u9762\u7684 mainly[adv.]\u4e3b\u8981\u5730\uff0c\u5927\u4f53\u4e0a","title":"Networking service overview"},{"location":"Openstack/Networking service overview/#_1","text":"Openstack Networking(neutron) \u5141\u8bb8\u4f60\u521b\u5efa\u548c\u8fde\u63a5\u63a5\u53e3\u8bbe\u5907\uff0c\u901a\u8fc7\u5176\u5b83\u7684Openstack\u670d\u52a1\u5bf9\u7f51\u7edc\u8fdb\u884c\u7ba1\u7406\u3002\u63d2\u4ef6\u80fd\u591f\u88ab\u5b9e\u73b0\u6210\u80fd\u591f\u9002\u5e94\u4e0d\u540c\u7684\u7f51\u7edc\u8bbe\u5907\u548c\u8f6f\u4ef6\uff0c\u5bf9Openstack \u7684\u67b6\u6784\u548c\u5b9e\u73b0\u63d0\u4f9b\u7075\u6d3b\u6027\u3002 \u5b83\u5305\u62ec\u4e86\u4ee5\u4e0b\u7ec4\u4ef6\uff1a neutron-server \u63a5\u53d7API\u8bf7\u6c42\u5e76\u5c06\u5176\u8def\u7531\u5230\u9002\u5f53\u7684Openstack \u7f51\u7edc\u63d2\u4ef6\u6267\u884c\u52a8\u4f5c\u3002 Openstack Networking plug-ins and agents \u63d2\u5165\u548c\u62d4\u51fa\u7aef\u53e3\uff0c\u521b\u5efa\u7f51\u7edc\u6216\u5b50\u7f51\uff0c\u4ee5\u53ca\u63d0\u4f9bIP\u5730\u5740\u3002\u63d2\u4ef6\u548c\u4ee3\u7406\u5728\u63d0\u4f9b\u5546\u548c\u5728\u4e2a\u522b\u4e91\u7684\u6280\u672f\u4f7f\u7528\u4e0a\u6709\u7740\u4e0d\u540c\u7684\u4f9d\u8d56\u3002Openstack \u7f51\u7edc\u9644\u5e26\u63d2\u4ef6\u548c\u4ee3\u7406\u7528\u4e8e\u601d\u79d1\u7684\u865a\u62df\u3001\u7269\u7406\u4ea4\u6362\u673a\uff0cNEC OpenFlow\u4ea7\u54c1\uff0cOpenstack vSwitch,Linux bridging,\u548cVMware NSX \u4ea7\u54c1\u3002 \u5e38\u89c1\u7684\u4ee3\u7406\u6709L3\uff08layer 3)\uff0cDHCP\uff08\u52a8\u6001\u4e3b\u673aIP\u5730\u5740\uff09\uff0c\u548c\u63d2\u4ef6\u4ee3\u7406\u3002 \u6d88\u606f\u961f\u5217 \u7528\u5728\u5927\u90e8\u5206\u7684Openstack \u7f51\u7edc\u88c5\u7f6e\u5728neutron-server\u548c\u5404\u79cd\u5404\u6837\u7684\u4ee3\u7406\u4e4b\u95f4\u8def\u7531\u4fe1\u606f\u3002\u4e5f\u5145\u5f53\u4e00\u4e2a\u6570\u636e\u5e93\u4e3a\u4e2a\u522b\u63d2\u4ef6\u5b58\u50a8\u7f51\u7edc\u72b6\u6001\u3002 Openstack Networking\u4e3b\u8981\u548cOpenstack Compute\u4ea4\u4e92\uff0c\u7528\u4e8e\u63d0\u4f9b\u7f51\u7edc\u548c\u8fde\u63a5\u5b9e\u4f8b\u3002","title":"\u7f51\u7edc\u670d\u52a1\u6982\u89c8"},{"location":"Openstack/Openstack Image Service/","text":"Openstack Image Service Introduction The Openstack image service allows users to discover, register, share, and retrieve virtual machine(VM) images and related metadata. It exposes a RESTful API to expose this functionality over a web-based API. \u5173\u952e\u70b9 \u8be5\u670d\u52a1\u63d0\u4f9b\u7684\u955c\u50cf\u4ec5\u4f5c\u4e3a\u4ea7\u751f\u7cfb\u7edf\u76d8 Image format format description Raw This is an unstructured disk image format. vhd This is the VHD disk format, a common disk format used by virtual machine monitors from VMWare. vmdk Another common disk format supported by many common virtual machine monitors. VDI A disk format supported by VirtualBox virtual machine monitor and the QEMU emulator ISO An archive format for the data contents of an optical disc(e.g.CDROM) QCOW2 A disk format supported by the QEMU emulator that can expand dynamically and supports Copy on Write. aki This indicates what is stored in Glance is an Amazon kernel image. ari This indicates what is stored in Glance is an Amazon ramdisk image. ami This indicates what is stored in Glance is an Amazon ma image. vhdx Hyper-V Virtual Hard Disk Format sploop Ploop is a disk loopback block device, not unlike loop but with many features like dynamic resize, snapshots, backups etc. The main idea is to put container filesystem in a file.","title":"Openstack Image Service"},{"location":"Openstack/Openstack Image Service/#openstack-image-service","text":"","title":"Openstack Image Service"},{"location":"Openstack/Openstack Image Service/#introduction","text":"The Openstack image service allows users to discover, register, share, and retrieve virtual machine(VM) images and related metadata. It exposes a RESTful API to expose this functionality over a web-based API.","title":"Introduction"},{"location":"Openstack/Openstack Image Service/#_1","text":"\u8be5\u670d\u52a1\u63d0\u4f9b\u7684\u955c\u50cf\u4ec5\u4f5c\u4e3a\u4ea7\u751f\u7cfb\u7edf\u76d8","title":"\u5173\u952e\u70b9"},{"location":"Openstack/Openstack Image Service/#image-format","text":"format description Raw This is an unstructured disk image format. vhd This is the VHD disk format, a common disk format used by virtual machine monitors from VMWare. vmdk Another common disk format supported by many common virtual machine monitors. VDI A disk format supported by VirtualBox virtual machine monitor and the QEMU emulator ISO An archive format for the data contents of an optical disc(e.g.CDROM) QCOW2 A disk format supported by the QEMU emulator that can expand dynamically and supports Copy on Write. aki This indicates what is stored in Glance is an Amazon kernel image. ari This indicates what is stored in Glance is an Amazon ramdisk image. ami This indicates what is stored in Glance is an Amazon ma image. vhdx Hyper-V Virtual Hard Disk Format sploop Ploop is a disk loopback block device, not unlike loop but with many features like dynamic resize, snapshots, backups etc. The main idea is to put container filesystem in a file.","title":"Image format"},{"location":"Openstack/Openstack Keystone/","text":"Openstack Keystone Identity concepts Authentication The process of confirming the identity of a user. To confirm an incoming request, OpenStack Identity validates a set of credentials users supply. Initially, these credentials are a user name and password, or a user name and API key. When OpenStack Identity validates user credentials, it issues an authentication token. Users provide the token in subsequent requests. Credentials Data that confirms the identity of the user. For example, user name and password, user name and API key, or an authentication token that the Identity service provides. Domain An Identity service API v3 entity. Domains are a collection of projects and users that define administrative boundaries for managing Identity entities. Domains can represent an individual, company, or operator-owned space. They expose administrative activities directly to system users. Users can be granted the administrator role for a domain. A domain administrator can create projects, users, and groups in a domain and assign roles to users and groups in a domain. Endpoint A network-accessible address, usually a URL, through which you can access a service. If you are using an extension for templates, you can create an endpoint template that represents the templates of all consumable services that are available across the regions. Group An Identity service API v3 entity. Groups are a collection of users owned by a domain. A group role, granted to a domain or project, applies to all users in the group. Adding or removing users to or from a group grants or revokes their role and authentication to the associated domain or project. OpenStackClient A command-line interface for several OpenStack services including the Identity API. For example, a user can run the openstack service create and openstack endpoint create commands to register services in their OpenStack installation. Project A container that groups or isolates resources or identity objects. Depending on the service operator, a project might map to a customer, account, organization, or tenant. Region An Identity service API v3 entity. Represents a general division in an OpenStack deployment. You can associate zero or more sub-regions with a region to make a tree-like structured hierarchy. Although a region does not have a geographical connotation, a deployment can use a geographical name for a region, such as us-east . Role A personality with a defined set of user rights and privileges to perform a specific set of operations. The Identity service issues a token to a user that includes a list of roles. When a user calls a service, that service interprets the user role set, and determines to which operations or resources each role grants access. Service An OpenStack service, such as Compute (nova), Object Storage (swift), or Image service (glance), that provides one or more endpoints through which users can access resources and perform operations. Token An alpha-numeric text string that enables access to OpenStack APIs and resources. A token may be revoked at any time and is valid for a finite duration. While OpenStack Identity supports token-based authentication in this release, it intends to support additional protocols in the future. OpenStack Identity is an integration service that does not aspire to be a full-fledged identity store and management solution. User A digital representation of a person, system, or service that uses OpenStack cloud services. The Identity service validates that incoming requests are made by the user who claims to be making the call. Users have a login and can access resources by using assigned tokens. Users can be directly assigned to a particular project and behave as if they are contained in that project.","title":"Openstack Keystone"},{"location":"Openstack/Openstack Keystone/#openstack-keystone","text":"","title":"Openstack Keystone"},{"location":"Openstack/Openstack Keystone/#identity-concepts","text":"","title":"Identity concepts"},{"location":"Openstack/Openstack Keystone/#authentication","text":"The process of confirming the identity of a user. To confirm an incoming request, OpenStack Identity validates a set of credentials users supply. Initially, these credentials are a user name and password, or a user name and API key. When OpenStack Identity validates user credentials, it issues an authentication token. Users provide the token in subsequent requests.","title":"Authentication"},{"location":"Openstack/Openstack Keystone/#credentials","text":"Data that confirms the identity of the user. For example, user name and password, user name and API key, or an authentication token that the Identity service provides.","title":"Credentials"},{"location":"Openstack/Openstack Keystone/#domain","text":"An Identity service API v3 entity. Domains are a collection of projects and users that define administrative boundaries for managing Identity entities. Domains can represent an individual, company, or operator-owned space. They expose administrative activities directly to system users. Users can be granted the administrator role for a domain. A domain administrator can create projects, users, and groups in a domain and assign roles to users and groups in a domain.","title":"Domain"},{"location":"Openstack/Openstack Keystone/#endpoint","text":"A network-accessible address, usually a URL, through which you can access a service. If you are using an extension for templates, you can create an endpoint template that represents the templates of all consumable services that are available across the regions.","title":"Endpoint"},{"location":"Openstack/Openstack Keystone/#group","text":"An Identity service API v3 entity. Groups are a collection of users owned by a domain. A group role, granted to a domain or project, applies to all users in the group. Adding or removing users to or from a group grants or revokes their role and authentication to the associated domain or project.","title":"Group"},{"location":"Openstack/Openstack Keystone/#openstackclient","text":"A command-line interface for several OpenStack services including the Identity API. For example, a user can run the openstack service create and openstack endpoint create commands to register services in their OpenStack installation.","title":"OpenStackClient"},{"location":"Openstack/Openstack Keystone/#project","text":"A container that groups or isolates resources or identity objects. Depending on the service operator, a project might map to a customer, account, organization, or tenant.","title":"Project"},{"location":"Openstack/Openstack Keystone/#region","text":"An Identity service API v3 entity. Represents a general division in an OpenStack deployment. You can associate zero or more sub-regions with a region to make a tree-like structured hierarchy. Although a region does not have a geographical connotation, a deployment can use a geographical name for a region, such as us-east .","title":"Region"},{"location":"Openstack/Openstack Keystone/#role","text":"A personality with a defined set of user rights and privileges to perform a specific set of operations. The Identity service issues a token to a user that includes a list of roles. When a user calls a service, that service interprets the user role set, and determines to which operations or resources each role grants access.","title":"Role"},{"location":"Openstack/Openstack Keystone/#service","text":"An OpenStack service, such as Compute (nova), Object Storage (swift), or Image service (glance), that provides one or more endpoints through which users can access resources and perform operations.","title":"Service"},{"location":"Openstack/Openstack Keystone/#token","text":"An alpha-numeric text string that enables access to OpenStack APIs and resources. A token may be revoked at any time and is valid for a finite duration. While OpenStack Identity supports token-based authentication in this release, it intends to support additional protocols in the future. OpenStack Identity is an integration service that does not aspire to be a full-fledged identity store and management solution.","title":"Token"},{"location":"Openstack/Openstack Keystone/#user","text":"A digital representation of a person, system, or service that uses OpenStack cloud services. The Identity service validates that incoming requests are made by the user who claims to be making the call. Users have a login and can access resources by using assigned tokens. Users can be directly assigned to a particular project and behave as if they are contained in that project.","title":"User"},{"location":"Openstack/Openstack_Block Storage/","text":"Openstack_Block Storage The Openstack Block Storage service works through the interaction of a series of daemon processes named cinder-* that reside persistently on the host machine or machines. Cinder \u67b6\u6784 graph TD A1[cinder-api] B1[cinder-volume] C1[volume provider] C2[cinder database] C3[Queue] D1[cinder-scheduler] A1 --> C3 B1 --> C3 D1 --> C3 B1 --> C1 B1 --> C2 D1 --> C2 cinder-api \u63a5\u6536 API \u8bf7\u6c42\uff0c\u8c03\u7528 cinder-volume cinder-volume \u7ba1\u7406 volume \u7684\u670d\u52a1\uff0c\u4e0e volume provider \u534f\u8c03\u5de5\u4f5c\uff0c\u7ba1\u7406 volume \u7684\u751f\u547d\u5468\u671f\u3002\u8fd0\u884c cinder-volume \u670d\u52a1\u7684\u8282\u70b9\u88ab\u79f0\u4f5c\u4e3a\u5b58\u50a8\u8282\u70b9\u3002 cinder-scheduler scheduler \u901a\u8fc7\u8c03\u5ea6\u7b97\u6cd5\u9009\u62e9\u6700\u5408\u9002\u7684\u5b58\u50a8\u8282\u70b9\u521b\u5efa volume volume provider \u6570\u636e\u7684\u5b58\u50a8\u8bbe\u5907\uff0c\u4e3a volume \u63d0\u4f9b\u7269\u7406\u5b58\u50a8\u7a7a\u95f4 cinder-volume \u652f\u6301\u591a\u79cd volume provider\uff0c\u6bcf\u79cd volume provider \u901a\u8fc7\u81ea\u5df1\u7684 driver \u4e0ecinder-volume \u534f\u8c03\u5de5\u4f5c Message Queue Cinder \u5404\u4e2a\u5b50\u670d\u52a1\u901a\u8fc7\u6d88\u606f\u5bf9\u6d88\u606f\u961f\u5217\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u901a\u4fe1\u548c\u76f8\u4e92\u534f\u4f5c\u3002\u56e0\u4e3a\u6709\u4e86\u6d88\u606f\u5bf9\u5217\uff0c\u5b50\u670d\u52a1\u4e4b\u95f4\u5b9e\u73b0\u4e86\u89e3\u8026\uff0c\u8fd9\u79cd\u677e\u6563\u7684\u7ed3\u6784\u4e5f\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u91cd\u8981\u7279\u5f81\u3002 Database Cinder \u6709\u4e00\u4e9b\u6570\u636e\u9700\u8981\u5b58\u653e\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u4e00\u822c\u4f7f\u7528 MySQL\u3002\u6570\u636e\u5e93\u662f\u5b89\u88c5\u5728\u63a7\u5236\u8282\u70b9\u4e0a\u7684\u3002","title":"Openstack Block Storage"},{"location":"Openstack/Openstack_Block Storage/#openstack_block-storage","text":"The Openstack Block Storage service works through the interaction of a series of daemon processes named cinder-* that reside persistently on the host machine or machines.","title":"Openstack_Block Storage"},{"location":"Openstack/Openstack_Block Storage/#cinder","text":"graph TD A1[cinder-api] B1[cinder-volume] C1[volume provider] C2[cinder database] C3[Queue] D1[cinder-scheduler] A1 --> C3 B1 --> C3 D1 --> C3 B1 --> C1 B1 --> C2 D1 --> C2","title":"Cinder \u67b6\u6784"},{"location":"Openstack/Openstack_Block Storage/#cinder-api","text":"\u63a5\u6536 API \u8bf7\u6c42\uff0c\u8c03\u7528 cinder-volume","title":"cinder-api"},{"location":"Openstack/Openstack_Block Storage/#cinder-volume","text":"\u7ba1\u7406 volume \u7684\u670d\u52a1\uff0c\u4e0e volume provider \u534f\u8c03\u5de5\u4f5c\uff0c\u7ba1\u7406 volume \u7684\u751f\u547d\u5468\u671f\u3002\u8fd0\u884c cinder-volume \u670d\u52a1\u7684\u8282\u70b9\u88ab\u79f0\u4f5c\u4e3a\u5b58\u50a8\u8282\u70b9\u3002","title":"cinder-volume"},{"location":"Openstack/Openstack_Block Storage/#cinder-scheduler","text":"scheduler \u901a\u8fc7\u8c03\u5ea6\u7b97\u6cd5\u9009\u62e9\u6700\u5408\u9002\u7684\u5b58\u50a8\u8282\u70b9\u521b\u5efa volume","title":"cinder-scheduler"},{"location":"Openstack/Openstack_Block Storage/#volume-provider","text":"\u6570\u636e\u7684\u5b58\u50a8\u8bbe\u5907\uff0c\u4e3a volume \u63d0\u4f9b\u7269\u7406\u5b58\u50a8\u7a7a\u95f4 cinder-volume \u652f\u6301\u591a\u79cd volume provider\uff0c\u6bcf\u79cd volume provider \u901a\u8fc7\u81ea\u5df1\u7684 driver \u4e0ecinder-volume \u534f\u8c03\u5de5\u4f5c","title":"volume provider"},{"location":"Openstack/Openstack_Block Storage/#message-queue","text":"Cinder \u5404\u4e2a\u5b50\u670d\u52a1\u901a\u8fc7\u6d88\u606f\u5bf9\u6d88\u606f\u961f\u5217\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u901a\u4fe1\u548c\u76f8\u4e92\u534f\u4f5c\u3002\u56e0\u4e3a\u6709\u4e86\u6d88\u606f\u5bf9\u5217\uff0c\u5b50\u670d\u52a1\u4e4b\u95f4\u5b9e\u73b0\u4e86\u89e3\u8026\uff0c\u8fd9\u79cd\u677e\u6563\u7684\u7ed3\u6784\u4e5f\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u91cd\u8981\u7279\u5f81\u3002","title":"Message Queue"},{"location":"Openstack/Openstack_Block Storage/#database","text":"Cinder \u6709\u4e00\u4e9b\u6570\u636e\u9700\u8981\u5b58\u653e\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u4e00\u822c\u4f7f\u7528 MySQL\u3002\u6570\u636e\u5e93\u662f\u5b89\u88c5\u5728\u63a7\u5236\u8282\u70b9\u4e0a\u7684\u3002","title":"Database"},{"location":"Openstack/Openstack_Log/","text":"Openstack_Log \u65e5\u5fd7\u683c\u5f0f Openstack \u7684\u65e5\u5fd7\u683c\u5f0f\u90fd\u662f\u7edf\u4e00\u7684\uff0c\u5982\u4e0b <\u65f6\u95f4\u6233> <\u65e5\u5fd7\u7b49\u7ea7> <\u4ee3\u7801\u6a21\u5757> <\u65e5\u5fd7\u5185\u5bb9> <\u6e90\u4ee3\u7801\u4f4d\u7f6e> \u65e5\u5fd7\u8bb0\u5f55\u7684\u65f6\u95f4\uff0c\u5305\u62ec \u5e74 \u6708 \u65e5 \u65f6 \u5206 \u79d2 \u6beb\u79d2 \u6709INFO WARNING ERROR DEBUG \u7b49 \u5f53\u524d\u8fd0\u884c\u7684\u6a21\u5757 \u65e5\u5fd7\u4f1a\u8bb0\u5f55\u8fde\u7eed\u4e0d\u540c\u7684\u64cd\u4f5c\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u533a\u5206\u548c\u589e\u52a0\u53ef\u8bfb\u6027\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u88ab\u5206\u914d\u552f\u4e00\u7684Request ID\uff0c\u4fbf\u4e8e\u67e5\u627e \u8fd9\u662f\u65e5\u5fd7\u7684\u4e3b\u4f53\uff0c\u8bb0\u5f55\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u64cd\u4f5c\u548c\u7ed3\u679c\u7b49\u91cd\u8981\u4fe1\u606f \u65e5\u5fd7\u4ee3\u7801\u7684\u4f4d\u7f6e\uff0c\u5305\u62ec\u65b9\u6cd5\u540d\u79f0\uff0c\u6e90\u4ee3\u7801\u6587\u4ef6\u7684\u76ee\u5f55\u4f4d\u7f6e\u548c\u884c\u53f7\u3002\u8fd9\u4e00\u9879\u4e0d\u662f\u6240\u6709\u65e5\u5fd7\u90fd\u6709","title":"Openstack_Log"},{"location":"Openstack/Openstack_Log/#openstack_log","text":"","title":"Openstack_Log"},{"location":"Openstack/Openstack_Log/#_1","text":"Openstack \u7684\u65e5\u5fd7\u683c\u5f0f\u90fd\u662f\u7edf\u4e00\u7684\uff0c\u5982\u4e0b <\u65f6\u95f4\u6233> <\u65e5\u5fd7\u7b49\u7ea7> <\u4ee3\u7801\u6a21\u5757> <\u65e5\u5fd7\u5185\u5bb9> <\u6e90\u4ee3\u7801\u4f4d\u7f6e> \u65e5\u5fd7\u8bb0\u5f55\u7684\u65f6\u95f4\uff0c\u5305\u62ec \u5e74 \u6708 \u65e5 \u65f6 \u5206 \u79d2 \u6beb\u79d2 \u6709INFO WARNING ERROR DEBUG \u7b49 \u5f53\u524d\u8fd0\u884c\u7684\u6a21\u5757 \u65e5\u5fd7\u4f1a\u8bb0\u5f55\u8fde\u7eed\u4e0d\u540c\u7684\u64cd\u4f5c\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u533a\u5206\u548c\u589e\u52a0\u53ef\u8bfb\u6027\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u88ab\u5206\u914d\u552f\u4e00\u7684Request ID\uff0c\u4fbf\u4e8e\u67e5\u627e \u8fd9\u662f\u65e5\u5fd7\u7684\u4e3b\u4f53\uff0c\u8bb0\u5f55\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u64cd\u4f5c\u548c\u7ed3\u679c\u7b49\u91cd\u8981\u4fe1\u606f \u65e5\u5fd7\u4ee3\u7801\u7684\u4f4d\u7f6e\uff0c\u5305\u62ec\u65b9\u6cd5\u540d\u79f0\uff0c\u6e90\u4ee3\u7801\u6587\u4ef6\u7684\u76ee\u5f55\u4f4d\u7f6e\u548c\u884c\u53f7\u3002\u8fd9\u4e00\u9879\u4e0d\u662f\u6240\u6709\u65e5\u5fd7\u90fd\u6709","title":"\u65e5\u5fd7\u683c\u5f0f"},{"location":"Openstack/Openstack_ML2 Core Plugin/","text":"Openstack_ML2 Core Plugin What Moduler Layer 2 (ML2) \u662f Neutron \u5728 Havana \u7248\u672c\u5b9e\u540c\u4e00\u4e2a\u65b0\u7684 core plugin\uff0c\u7528\u4e8e\u66ff\u4ee3\u539f\u6709\u7684 linux bridge plugin \u548c openstack vswitch plugin Why \u4f20\u7edf core plugin \u7684\u95ee\u9898\uff1a \u65e0\u6cd5\u540c\u65f6\u4f7f\u7528\u591a\u79cd network provider \u200b","title":"Openstack ML2 Core Plugin"},{"location":"Openstack/Openstack_ML2 Core Plugin/#openstack_ml2-core-plugin","text":"","title":"Openstack_ML2 Core Plugin"},{"location":"Openstack/Openstack_ML2 Core Plugin/#what","text":"Moduler Layer 2 (ML2) \u662f Neutron \u5728 Havana \u7248\u672c\u5b9e\u540c\u4e00\u4e2a\u65b0\u7684 core plugin\uff0c\u7528\u4e8e\u66ff\u4ee3\u539f\u6709\u7684 linux bridge plugin \u548c openstack vswitch plugin","title":"What"},{"location":"Openstack/Openstack_ML2 Core Plugin/#why","text":"\u4f20\u7edf core plugin \u7684\u95ee\u9898\uff1a \u65e0\u6cd5\u540c\u65f6\u4f7f\u7528\u591a\u79cd network provider \u200b","title":"Why"},{"location":"Openstack/Openstack_Neutron Server/","text":"Openstack_Neutron Server \u5206\u5c42\u6a21\u578b Core API \u5bf9\u5916\u63d0\u4f9b\u7ba1\u7406 network\uff0c subnet \u548c port \u7684RESTful API Extension API \u5bf9\u5916\u63d0\u4f9b\u7ba1\u7406 route, load balance, firewall \u7b49\u8d44\u6e90\u7684 RESTful API Common Service \u8ba4\u8bc1\u548c\u6821\u9a8c API \u8bf7\u6c42 Neutron Core Neutron server \u7684\u6838\u5fc3\u5904\u7406\u7a0b\u5e8f\uff0c\u901a\u8fc7\u8c03\u7528\u76f8\u5e94\u7684 Plugin \u5904\u7406\u8bf7\u6c42 Core Plugin API \u5b9a\u4e49\u4e86 Core Plugin \u7684\u62bd\u8c61\u529f\u80fd\u96c6\u5408\uff0cNeutron Core \u901a\u8fc7\u8be5 API \u8c03\u7528\u76f8\u5e94\u7684 Core Plugin Extension Plugin API \u5b9a\u4e49\u4e86 Service Plugin \u62bd\u8c61\u529f\u80fd\u96c6\u5408\uff0cNeutron Core \u901a\u8fc7\u8be5 API \u8c03\u7528\u76f8\u5e94\u7684 Service Plugin Core Plugin \u5b9e\u73b0\u4e86 Core Plugin API\uff0c\u5728\u6570\u636e\u5e93\u4e2d\u7ef4\u62a4 network, subnet \u548c port \u7684\u72b6\u6001\uff0c\u5e76\u8d1f\u8d23\u8c03\u7528\u76f8\u5e94\u7684 agent \u5728 network provider \u4e0a\u6267\u884c\u76f8\u5173\u64cd\u4f5c\uff0c\u6bd4\u5982\u521b\u5efa network Service Plugin \u5b9e\u73b0\u4e86 Extension Plugin API\uff0c\u5728\u6570\u636e\u5e93\u4e2d\u7ef4\u62a4 route, load balance, security group \u7b49\u8d44\u6e90\u7684\u72b6\u6001\uff0c\u5e76\u8d1f\u8d23\u8c03\u7528\u76f8\u5e94\u7684 agent \u5728 network provider \u4e0a\u6267\u884c\u76f8\u5173\u64cd\u4f5c\uff0c\u6bd4\u5982\u521b\u5efa router \u5f52\u7eb3\u8d77\u6765\uff0cNeutron Server \u5305\u62ec\u4e24\u90e8\u5206\uff1a \u63d0\u4f9b API \u670d\u52a1 \u8fd0\u884c Plugin","title":"Openstack Neutron Server"},{"location":"Openstack/Openstack_Neutron Server/#openstack_neutron-server","text":"","title":"Openstack_Neutron Server \u5206\u5c42\u6a21\u578b"},{"location":"Openstack/Openstack_Neutron Server/#core-api","text":"\u5bf9\u5916\u63d0\u4f9b\u7ba1\u7406 network\uff0c subnet \u548c port \u7684RESTful API","title":"Core API"},{"location":"Openstack/Openstack_Neutron Server/#extension-api","text":"\u5bf9\u5916\u63d0\u4f9b\u7ba1\u7406 route, load balance, firewall \u7b49\u8d44\u6e90\u7684 RESTful API","title":"Extension API"},{"location":"Openstack/Openstack_Neutron Server/#common-service","text":"\u8ba4\u8bc1\u548c\u6821\u9a8c API \u8bf7\u6c42","title":"Common Service"},{"location":"Openstack/Openstack_Neutron Server/#neutron-core","text":"Neutron server \u7684\u6838\u5fc3\u5904\u7406\u7a0b\u5e8f\uff0c\u901a\u8fc7\u8c03\u7528\u76f8\u5e94\u7684 Plugin \u5904\u7406\u8bf7\u6c42","title":"Neutron Core"},{"location":"Openstack/Openstack_Neutron Server/#core-plugin-api","text":"\u5b9a\u4e49\u4e86 Core Plugin \u7684\u62bd\u8c61\u529f\u80fd\u96c6\u5408\uff0cNeutron Core \u901a\u8fc7\u8be5 API \u8c03\u7528\u76f8\u5e94\u7684 Core Plugin","title":"Core Plugin API"},{"location":"Openstack/Openstack_Neutron Server/#extension-plugin-api","text":"\u5b9a\u4e49\u4e86 Service Plugin \u62bd\u8c61\u529f\u80fd\u96c6\u5408\uff0cNeutron Core \u901a\u8fc7\u8be5 API \u8c03\u7528\u76f8\u5e94\u7684 Service Plugin","title":"Extension Plugin API"},{"location":"Openstack/Openstack_Neutron Server/#core-plugin","text":"\u5b9e\u73b0\u4e86 Core Plugin API\uff0c\u5728\u6570\u636e\u5e93\u4e2d\u7ef4\u62a4 network, subnet \u548c port \u7684\u72b6\u6001\uff0c\u5e76\u8d1f\u8d23\u8c03\u7528\u76f8\u5e94\u7684 agent \u5728 network provider \u4e0a\u6267\u884c\u76f8\u5173\u64cd\u4f5c\uff0c\u6bd4\u5982\u521b\u5efa network","title":"Core Plugin"},{"location":"Openstack/Openstack_Neutron Server/#service-plugin","text":"\u5b9e\u73b0\u4e86 Extension Plugin API\uff0c\u5728\u6570\u636e\u5e93\u4e2d\u7ef4\u62a4 route, load balance, security group \u7b49\u8d44\u6e90\u7684\u72b6\u6001\uff0c\u5e76\u8d1f\u8d23\u8c03\u7528\u76f8\u5e94\u7684 agent \u5728 network provider \u4e0a\u6267\u884c\u76f8\u5173\u64cd\u4f5c\uff0c\u6bd4\u5982\u521b\u5efa router","title":"Service Plugin"},{"location":"Openstack/Openstack_Neutron Server/#neutron-server","text":"\u63d0\u4f9b API \u670d\u52a1 \u8fd0\u884c Plugin","title":"\u5f52\u7eb3\u8d77\u6765\uff0cNeutron Server \u5305\u62ec\u4e24\u90e8\u5206\uff1a"},{"location":"Openstack/Openstack_Neutron_Concept/","text":"Openstack_Neutron_Concept Neutron \u7ba1\u7406\u7684\u7f51\u7edc\u8d44\u6e90\u5305\u62ec Netwrk, subnet, \u548c port Network network \u662f\u4e00\u4e2a\u9694\u79bb\u7684\u4e8c\u5c42\u5e7f\u64ad\u57df\u3002Neutron \u652f\u6301\u591a\u79cd\u7c7b\u4f3c\u7684 network\uff0c\u5305\u62ec local, flat, vlan, vxlan, gre network \u5fc5\u987b\u5c5e\u4e8e\u67d0\u4eba Projec\uff0cProject \u4e2d\u53ef\u4ee5\u521b\u5efa\u591a\u4e2a network\u3002network \u4e0e project \u662f\u591a\u5bf9\u4e00\u5173\u7cfb local local \u7f51\u7edc\u4e0e\u5176\u4ed6\u7f51\u7edc\u548c\u8282\u70b9\u9694\u79bb\u3002local \u7f51\u7edc\u4e2d\u7684 instance \u53ea\u80fd\u4e0e\u4f4d\u4e8e\u540c\u4e00\u8282\u70b9\u4e0a\u540c\u4e00\u7f51\u7edc\u7684 instance \u901a\u4fe1\uff0clocal \u7f51\u7edc\u4e3b\u8981\u7528\u4e8e\u5355\u673a\u6d4b\u8bd5\u3002 flat flat \u7f51\u7edc\u662f\u65e0 vlan tagging \u7684\u7f51\u7edc\u3002flat \u7f51\u7edc\u4e2d\u7684 instance \u80fd\u4e0e\u4f4d\u4e8e\u540c\u4e00\u7f51\u7edc\u7684 instance \u901a\u4fe1\uff0c\u5e76\u4e14\u53ef\u4ee5\u8de8\u591a\u4e2a\u8282\u70b9 vlan vlan \u7f51\u7edc\u662f\u5177\u6709 802.1q tagging \u7684\u7f51\u7edc\u3002vlan \u662f\u4e00\u4e2a\u4e8c\u5c42\u7684\u5e7f\u64ad\u57df\uff0c\u540c\u4e00 vlan \u4e2d\u7684 instance \u53ef\u4ee5\u901a\u4fe1\uff0c\u4e0d\u540c vlan \u53ea\u80fd\u901a\u8fc7 router \u901a\u4fe1\u3002vlan \u7f51\u7edc\u53ef\u8de8\u8282\u70b9\uff0c\u662f\u5e94\u7528\u6700\u5e7f\u6cdb\u7684\u7f51\u7edc\u7c7b\u578b\u3002 vxlan vxlan \u662f\u57fa\u4e8e\u96a7\u9053\u6280\u672f\u7684 overlay \u7f51\u7edc\u3002vxlan \u7f51\u7edc\u901a\u8fc7\u552f\u4e00\u7684 segmentation ID(\u4e5f\u79f0 VNI )\u4e0e\u5176\u4ed6 vxlan \u7f51\u7edc\u533a\u5206\u3002vxlan \u4e2d\u6570\u636e\u5305\u4f1a\u901a\u8fc7 VNI \u5c01\u88c5\u6210 UDP \u5305\u8fdb\u884c\u4f20\u8f93\u3002\u56e0\u4e3a\u4e8c\u5c42\u7684\u5305\u901a\u8fc7\u5c01\u88c5\u5728\u4e09\u5c42\u4f20\u8f93\uff0c\u80fd\u591f\u514b\u670d vlan \u548c\u7269\u7406\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u7684\u9650\u5236\u3002 gre gre \u662f\u4e0e vxlan \u7c7b\u4f3c\u7684\u4e00\u79cd overlay \u7f51\u7edc\u3002\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u4f7f\u7528 IP \u5305\u800c\u975e UDP \u8fdb\u884c\u5c01\u88c5\u3002 Subnet subnet \u662f\u4e00\u4e2a IPv4 \u6216\u8005 IPv6 \u5730\u5740\u6bb5\u3002instance \u7684 IP \u4ece subnet \u4e2d\u5206\u914d\u3002\u6bcf\u4e2a subnet \u9700\u8981\u5b9a\u4e49 IP \u5730\u5740\u7684\u8303\u56f4\u548c\u63a9\u7801\u3002 subnet \u4e0e network \u662f\u591a\u5bf9\u4e00\u5173\u7cfb\u3002\u4e00\u4e2a network \u53ef\u4ee5\u6709\u591a\u4e2a subnet\uff0c\u8fd9\u4e9b subnet \u53ef\u4ee5\u662f\u4e0d\u540c\u7684 IP \u6bb5\uff0c\u4f46\u4e0d\u80fd\u91cd\u53e0\u3002 \u5982\u679c subnet \u5728\u4e0d\u540c\u7684 network \u4e2d\uff0cCIDR \u548c IP \u90fd\u662f\u53ef\u4ee5\u91cd\u53e0\u7684 Port port \u53ef\u4ee5\u770b\u505a\u865a\u62df\u4ea4\u6362\u673a\u4e0a\u7684\u4e00\u4e2a\u7aef\u53e3 port \u4e0a\u5b9a\u4e49\u4e86 MAC \u5730\u5740\u548c IP \u5730\u5740\uff0c\u5f53 instance \u7684\u865a\u62df\u7f51\u5361 VIF(Virtual Interface)\u7ed1\u5b9a\u5230port\u65f6\uff0cport \u4f1a\u5c06 MAC \u548c IP \u5206\u914d\u7ed9 VIF port \u4e0e subnet \u662f\u4e00\u5bf9\u591a\u5173\u7cfb\u3002\u4e00\u4e2a port \u5fc5\u987b\u5c5e\u4e8e\u67d0\u4e2a subnet\uff1b\u4e00\u4e2a subnet \u53ef\u4ee5\u6709\u591a\u4eba port \u603b\u7ed3","title":"Openstack Neutron Concept"},{"location":"Openstack/Openstack_Neutron_Concept/#openstack_neutron_concept","text":"Neutron \u7ba1\u7406\u7684\u7f51\u7edc\u8d44\u6e90\u5305\u62ec Netwrk, subnet, \u548c port","title":"Openstack_Neutron_Concept"},{"location":"Openstack/Openstack_Neutron_Concept/#network","text":"network \u662f\u4e00\u4e2a\u9694\u79bb\u7684\u4e8c\u5c42\u5e7f\u64ad\u57df\u3002Neutron \u652f\u6301\u591a\u79cd\u7c7b\u4f3c\u7684 network\uff0c\u5305\u62ec local, flat, vlan, vxlan, gre network \u5fc5\u987b\u5c5e\u4e8e\u67d0\u4eba Projec\uff0cProject \u4e2d\u53ef\u4ee5\u521b\u5efa\u591a\u4e2a network\u3002network \u4e0e project \u662f\u591a\u5bf9\u4e00\u5173\u7cfb","title":"Network"},{"location":"Openstack/Openstack_Neutron_Concept/#local","text":"local \u7f51\u7edc\u4e0e\u5176\u4ed6\u7f51\u7edc\u548c\u8282\u70b9\u9694\u79bb\u3002local \u7f51\u7edc\u4e2d\u7684 instance \u53ea\u80fd\u4e0e\u4f4d\u4e8e\u540c\u4e00\u8282\u70b9\u4e0a\u540c\u4e00\u7f51\u7edc\u7684 instance \u901a\u4fe1\uff0clocal \u7f51\u7edc\u4e3b\u8981\u7528\u4e8e\u5355\u673a\u6d4b\u8bd5\u3002","title":"local"},{"location":"Openstack/Openstack_Neutron_Concept/#flat","text":"flat \u7f51\u7edc\u662f\u65e0 vlan tagging \u7684\u7f51\u7edc\u3002flat \u7f51\u7edc\u4e2d\u7684 instance \u80fd\u4e0e\u4f4d\u4e8e\u540c\u4e00\u7f51\u7edc\u7684 instance \u901a\u4fe1\uff0c\u5e76\u4e14\u53ef\u4ee5\u8de8\u591a\u4e2a\u8282\u70b9","title":"flat"},{"location":"Openstack/Openstack_Neutron_Concept/#vlan","text":"vlan \u7f51\u7edc\u662f\u5177\u6709 802.1q tagging \u7684\u7f51\u7edc\u3002vlan \u662f\u4e00\u4e2a\u4e8c\u5c42\u7684\u5e7f\u64ad\u57df\uff0c\u540c\u4e00 vlan \u4e2d\u7684 instance \u53ef\u4ee5\u901a\u4fe1\uff0c\u4e0d\u540c vlan \u53ea\u80fd\u901a\u8fc7 router \u901a\u4fe1\u3002vlan \u7f51\u7edc\u53ef\u8de8\u8282\u70b9\uff0c\u662f\u5e94\u7528\u6700\u5e7f\u6cdb\u7684\u7f51\u7edc\u7c7b\u578b\u3002","title":"vlan"},{"location":"Openstack/Openstack_Neutron_Concept/#vxlan","text":"vxlan \u662f\u57fa\u4e8e\u96a7\u9053\u6280\u672f\u7684 overlay \u7f51\u7edc\u3002vxlan \u7f51\u7edc\u901a\u8fc7\u552f\u4e00\u7684 segmentation ID(\u4e5f\u79f0 VNI )\u4e0e\u5176\u4ed6 vxlan \u7f51\u7edc\u533a\u5206\u3002vxlan \u4e2d\u6570\u636e\u5305\u4f1a\u901a\u8fc7 VNI \u5c01\u88c5\u6210 UDP \u5305\u8fdb\u884c\u4f20\u8f93\u3002\u56e0\u4e3a\u4e8c\u5c42\u7684\u5305\u901a\u8fc7\u5c01\u88c5\u5728\u4e09\u5c42\u4f20\u8f93\uff0c\u80fd\u591f\u514b\u670d vlan \u548c\u7269\u7406\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u7684\u9650\u5236\u3002","title":"vxlan"},{"location":"Openstack/Openstack_Neutron_Concept/#gre","text":"gre \u662f\u4e0e vxlan \u7c7b\u4f3c\u7684\u4e00\u79cd overlay \u7f51\u7edc\u3002\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u4f7f\u7528 IP \u5305\u800c\u975e UDP \u8fdb\u884c\u5c01\u88c5\u3002","title":"gre"},{"location":"Openstack/Openstack_Neutron_Concept/#subnet","text":"subnet \u662f\u4e00\u4e2a IPv4 \u6216\u8005 IPv6 \u5730\u5740\u6bb5\u3002instance \u7684 IP \u4ece subnet \u4e2d\u5206\u914d\u3002\u6bcf\u4e2a subnet \u9700\u8981\u5b9a\u4e49 IP \u5730\u5740\u7684\u8303\u56f4\u548c\u63a9\u7801\u3002 subnet \u4e0e network \u662f\u591a\u5bf9\u4e00\u5173\u7cfb\u3002\u4e00\u4e2a network \u53ef\u4ee5\u6709\u591a\u4e2a subnet\uff0c\u8fd9\u4e9b subnet \u53ef\u4ee5\u662f\u4e0d\u540c\u7684 IP \u6bb5\uff0c\u4f46\u4e0d\u80fd\u91cd\u53e0\u3002 \u5982\u679c subnet \u5728\u4e0d\u540c\u7684 network \u4e2d\uff0cCIDR \u548c IP \u90fd\u662f\u53ef\u4ee5\u91cd\u53e0\u7684","title":"Subnet"},{"location":"Openstack/Openstack_Neutron_Concept/#port","text":"port \u53ef\u4ee5\u770b\u505a\u865a\u62df\u4ea4\u6362\u673a\u4e0a\u7684\u4e00\u4e2a\u7aef\u53e3 port \u4e0a\u5b9a\u4e49\u4e86 MAC \u5730\u5740\u548c IP \u5730\u5740\uff0c\u5f53 instance \u7684\u865a\u62df\u7f51\u5361 VIF(Virtual Interface)\u7ed1\u5b9a\u5230port\u65f6\uff0cport \u4f1a\u5c06 MAC \u548c IP \u5206\u914d\u7ed9 VIF port \u4e0e subnet \u662f\u4e00\u5bf9\u591a\u5173\u7cfb\u3002\u4e00\u4e2a port \u5fc5\u987b\u5c5e\u4e8e\u67d0\u4e2a subnet\uff1b\u4e00\u4e2a subnet \u53ef\u4ee5\u6709\u591a\u4eba port","title":"Port"},{"location":"Openstack/Openstack_Neutron_Concept/#_1","text":"","title":"\u603b\u7ed3"},{"location":"Openstack/Openstack_Neutron_T/","text":"Openstack_Neutron Network\u3001subnet\u3001port \u64cd\u4f5c\u4e0a\uff0c\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u53ea\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u8bb0\u5f55\uff0c\u800c\u4e0d\u4f1a\u88ab\u521b\u5efa\uff0c\u53ea\u6709port\u88ab\u8fde\u63a5\u65f6\uff0c\u624d\u4f1a\u5728\u8282\u70b9\u8fdb\u884c\u5177\u4f53\u5b9e\u73b0\u3002 \u865a\u62df\u673a\u8fc1\u79fb\u4f1a\u4fdd\u7559\u539ftap\u4fe1\u606f\u8fdb\u884c\u8fc1\u79fb\uff0c\u539f\u56e0\u662f\u865a\u62df\u673a\u662f\u8fde\u63a5\u4e86Port\uff0c\u800cport\u5c5e\u4e8esubnet\uff0c\u5e76\u4e0d\u5c5e\u4e8e\u865a\u62df\u673a tap \u8bbe\u5907\u5728\u5bbf\u4e3b\u673a\u4e0a\u7684mac\u5730\u5740\u4e0eport mac\u5730\u5740\u5e76\u4e0d\u4e00\u81f4 /etc/neutron/dhcp_agent.ini dhcp_driver\uff1a\u4f7f\u7528 dnsmasp \u5b9e\u73b0dhcp interface_driver\uff1a\u4f7f\u7528 linux bridge \u8fde\u63a5 DHCP namespace interface \u5f53\u521b\u5efanetwork \u5e76\u5728 subnet \u4e0a enable dhcp \u65f6\uff0c\u7f51\u7edc\u8282\u70b9\u4e0a\u7684 dhcp agent \u4f1a\u542f\u52a8\u4e00\u4e2a dnsmasq \u8fdb\u7a0b\u4e3a\u8be5 network \u63d0\u4f9b dhcp \u670d\u52a1\u3002dnsmasq \u4e0e network \u662f\u4e00\u5bf9\u4e00\u5173\u7cfb network_vlan_ranges = default:3001:4000 \u53ea\u662f\u5bf9\u666e\u901a\u7528\u6237\u9650\u5236\uff0c\u4e0d\u4f1a\u5bf9\u7ba1\u7406\u5458\u9650\u5236 dhcp\u3001route \u90fd\u6709\u81ea\u5df1\u5355\u72ec\u7684\u547d\u540d\u7a7a\u95f4 \u8bbe\u5907\u547d\u540d linux bridge:brq*** tap:tap*** namespace: dhcp:qdhcp-* router:qrouter-* dhcp:ns-* \u5185\u90e8qr-xxx \u5916\u90e8qg-xxx qvo qvb","title":"Openstack Neutron T"},{"location":"Openstack/Openstack_Neutron_T/#openstack_neutron","text":"Network\u3001subnet\u3001port \u64cd\u4f5c\u4e0a\uff0c\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u53ea\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u8bb0\u5f55\uff0c\u800c\u4e0d\u4f1a\u88ab\u521b\u5efa\uff0c\u53ea\u6709port\u88ab\u8fde\u63a5\u65f6\uff0c\u624d\u4f1a\u5728\u8282\u70b9\u8fdb\u884c\u5177\u4f53\u5b9e\u73b0\u3002 \u865a\u62df\u673a\u8fc1\u79fb\u4f1a\u4fdd\u7559\u539ftap\u4fe1\u606f\u8fdb\u884c\u8fc1\u79fb\uff0c\u539f\u56e0\u662f\u865a\u62df\u673a\u662f\u8fde\u63a5\u4e86Port\uff0c\u800cport\u5c5e\u4e8esubnet\uff0c\u5e76\u4e0d\u5c5e\u4e8e\u865a\u62df\u673a tap \u8bbe\u5907\u5728\u5bbf\u4e3b\u673a\u4e0a\u7684mac\u5730\u5740\u4e0eport mac\u5730\u5740\u5e76\u4e0d\u4e00\u81f4 /etc/neutron/dhcp_agent.ini dhcp_driver\uff1a\u4f7f\u7528 dnsmasp \u5b9e\u73b0dhcp interface_driver\uff1a\u4f7f\u7528 linux bridge \u8fde\u63a5 DHCP namespace interface \u5f53\u521b\u5efanetwork \u5e76\u5728 subnet \u4e0a enable dhcp \u65f6\uff0c\u7f51\u7edc\u8282\u70b9\u4e0a\u7684 dhcp agent \u4f1a\u542f\u52a8\u4e00\u4e2a dnsmasq \u8fdb\u7a0b\u4e3a\u8be5 network \u63d0\u4f9b dhcp \u670d\u52a1\u3002dnsmasq \u4e0e network \u662f\u4e00\u5bf9\u4e00\u5173\u7cfb network_vlan_ranges = default:3001:4000 \u53ea\u662f\u5bf9\u666e\u901a\u7528\u6237\u9650\u5236\uff0c\u4e0d\u4f1a\u5bf9\u7ba1\u7406\u5458\u9650\u5236 dhcp\u3001route \u90fd\u6709\u81ea\u5df1\u5355\u72ec\u7684\u547d\u540d\u7a7a\u95f4","title":"Openstack_Neutron"},{"location":"Openstack/Openstack_Neutron_T/#_1","text":"linux bridge:brq*** tap:tap*** namespace: dhcp:qdhcp-* router:qrouter-* dhcp:ns-* \u5185\u90e8qr-xxx \u5916\u90e8qg-xxx qvo qvb","title":"\u8bbe\u5907\u547d\u540d"},{"location":"Openstack/Openstack_Policy.json/","text":"Openstack_Policy.json \u5173\u952e\u70b9 Any changes to policy.json are effective immediately, which allows new policies to be immediately, which allows new policies to be implemented while the service is running. A policy.json file is a text file JSON(Javascript Object Notation) format. Each policy is defined by a one-line statement in the form \" \":\" \". The policy target, also named \"action\", represents an API call like \"Start an instance\" or \"attach a volume\". The policy target, also named \"action\", represents an API call like \"start an instance \" or \"attach a volume\". \u53e5\u6cd5 A policy.json file consists \u7531...\u7ec4\u6210vi. of policies and aliases of the form target:rule or alias:definition , separated separated by commas \u9017\u53f7.n and enclosed \u653e\u5165vt. in curly \u5377\u7531\u7684adj. braces \u5927\u62ec\u53f7n. : { \"alias 1\":\"definition 1\", \"alias 2\":\"definition 2\", ... \"target 1\":\"rule 1\", \"target 2\":\"rule 2\", ... } Targets are APIs and are written \"service:API\" or simply \"API\". For example, \"compute:create\" or \"add_image\" . Rules determine wheter the API call is allowed. Rules can be: always true. The action is always permitted. This can be written as \"\"(empty string), [], or \"@\" always false. The action is never permitted. Written as \"!\". a special check a comparison \u6bd4\u8f83 of two values boolean expressions \u8868\u8fbe\u5f0f base on simpler rules Special checks are <role>:<role name> , a test whether the API credentials contain \u5305\u542bvt. this role. <rule>:<rule name> , the definition of an alias. http:<target URL> , which delegates \u4ee3\u8868 the check to a remote server. The API is authorized when the server returns True. Developers can define additional special checks. Two values are compared \u6bd4\u8f83\u7684adj. in the following way: \"value1:value2\" Possible values are constants \u5e38\u91cfn. : Strings, numbers, true , false API attributes target object attriutes the flag is admin API attributes can be project_id , user_id , or domain_id . Target object attributes are fields \u5b57\u6bb5n. from the object description in the database. For example in the case \u60c5\u51b5\uff1b\u5b9e\u4f8b.n of the \"compute:start\" API, the object is the instance to be started. The policy for starting instances could use the %(project id)s attribute, that is the project that owns the instance. The trailing \u5c3e\u90e8adj. s indicates \u8868\u660ev. this s a string. is_admin indicates that administrative privileges \u7279\u6743n. are granted \u6388\u4e88vt. via the admin token mechanism \u673a\u5236n. (the --os-token option of the keystone command). The admin token allows initialisation \u521d\u59cb\u5316n. of he identit database bdfore the admin role exists. The alias construct \u6784\u60f3n. exists for convenience \u4fbf\u5229n. An alias is short name for a complex \u590d\u5408\u4f53n. or hard \u56f0\u96be\u7684adj. to understand rule. It is defined in the same way as a policy: alias name : alias definition Once an alias is defined, use the rule keyword to use it in a policy rule. Reference The policy.json file","title":"Openstack_Policy.json"},{"location":"Openstack/Openstack_Policy.json/#openstack_policyjson","text":"","title":"Openstack_Policy.json"},{"location":"Openstack/Openstack_Policy.json/#_1","text":"Any changes to policy.json are effective immediately, which allows new policies to be immediately, which allows new policies to be implemented while the service is running. A policy.json file is a text file JSON(Javascript Object Notation) format. Each policy is defined by a one-line statement in the form \" \":\" \". The policy target, also named \"action\", represents an API call like \"Start an instance\" or \"attach a volume\". The policy target, also named \"action\", represents an API call like \"start an instance \" or \"attach a volume\".","title":"\u5173\u952e\u70b9"},{"location":"Openstack/Openstack_Policy.json/#_2","text":"A policy.json file consists \u7531...\u7ec4\u6210vi. of policies and aliases of the form target:rule or alias:definition , separated separated by commas \u9017\u53f7.n and enclosed \u653e\u5165vt. in curly \u5377\u7531\u7684adj. braces \u5927\u62ec\u53f7n. : { \"alias 1\":\"definition 1\", \"alias 2\":\"definition 2\", ... \"target 1\":\"rule 1\", \"target 2\":\"rule 2\", ... } Targets are APIs and are written \"service:API\" or simply \"API\". For example, \"compute:create\" or \"add_image\" . Rules determine wheter the API call is allowed. Rules can be: always true. The action is always permitted. This can be written as \"\"(empty string), [], or \"@\" always false. The action is never permitted. Written as \"!\". a special check a comparison \u6bd4\u8f83 of two values boolean expressions \u8868\u8fbe\u5f0f base on simpler rules Special checks are <role>:<role name> , a test whether the API credentials contain \u5305\u542bvt. this role. <rule>:<rule name> , the definition of an alias. http:<target URL> , which delegates \u4ee3\u8868 the check to a remote server. The API is authorized when the server returns True. Developers can define additional special checks. Two values are compared \u6bd4\u8f83\u7684adj. in the following way: \"value1:value2\" Possible values are constants \u5e38\u91cfn. : Strings, numbers, true , false API attributes target object attriutes the flag is admin API attributes can be project_id , user_id , or domain_id . Target object attributes are fields \u5b57\u6bb5n. from the object description in the database. For example in the case \u60c5\u51b5\uff1b\u5b9e\u4f8b.n of the \"compute:start\" API, the object is the instance to be started. The policy for starting instances could use the %(project id)s attribute, that is the project that owns the instance. The trailing \u5c3e\u90e8adj. s indicates \u8868\u660ev. this s a string. is_admin indicates that administrative privileges \u7279\u6743n. are granted \u6388\u4e88vt. via the admin token mechanism \u673a\u5236n. (the --os-token option of the keystone command). The admin token allows initialisation \u521d\u59cb\u5316n. of he identit database bdfore the admin role exists. The alias construct \u6784\u60f3n. exists for convenience \u4fbf\u5229n. An alias is short name for a complex \u590d\u5408\u4f53n. or hard \u56f0\u96be\u7684adj. to understand rule. It is defined in the same way as a policy: alias name : alias definition Once an alias is defined, use the rule keyword to use it in a policy rule.","title":"\u53e5\u6cd5"},{"location":"Openstack/Openstack_Policy.json/#reference","text":"The policy.json file","title":"Reference"},{"location":"Openstack/Openstack_Tenant_to_Resource/","text":"Openstack_Tenant_to_Resource set_env #modify the env below if you need export OS_USERNAME=dc1_admin export OS_TENANT_NAME=dc_system_dc1 export OS_REGION_NAME=az1.dc1 export OS_AUTH_URL=https://identity.az1.dc1.hwcloud.com:443/identity/v2.0 export OS_PASSWORD=$password export NOVA_ENDPOINT_TYPE=internalURL export OS_ENDPOINT_TYPE=internalURL export CINDER_ENDPOINT_TYPE=internalURL export OS_VOLUME_API_VERSION=2 export BASE_BOND=brcps \u7531\u4e0a\u53ef\u77e5,Client\u83b7\u5f97\u4ee5\u4e0b\u4fe1\u606f\uff1a project region keystone_url","title":"Openstack Tenant to Resource"},{"location":"Openstack/Openstack_Tenant_to_Resource/#openstack_tenant_to_resource","text":"","title":"Openstack_Tenant_to_Resource"},{"location":"Openstack/Openstack_Tenant_to_Resource/#set_env","text":"#modify the env below if you need export OS_USERNAME=dc1_admin export OS_TENANT_NAME=dc_system_dc1 export OS_REGION_NAME=az1.dc1 export OS_AUTH_URL=https://identity.az1.dc1.hwcloud.com:443/identity/v2.0 export OS_PASSWORD=$password export NOVA_ENDPOINT_TYPE=internalURL export OS_ENDPOINT_TYPE=internalURL export CINDER_ENDPOINT_TYPE=internalURL export OS_VOLUME_API_VERSION=2 export BASE_BOND=brcps \u7531\u4e0a\u53ef\u77e5,Client\u83b7\u5f97\u4ee5\u4e0b\u4fe1\u606f\uff1a project region keystone_url","title":"set_env"},{"location":"Openstack/json/","text":"JSON\u603b\u7ed3 what JSON \u6307\u7684\u662f JavaScript \u5bf9\u8c61\u8868\u793a\u6cd5( j ava s cript O bject N otation) JSON \u662f\u8f7b\u91cf\u7ea7\u7684\u6587\u672c\u6570\u636e\u4ea4\u6362\u683c\u5f0f JSON \u6587\u4ef6\u7684\u6587\u4ef6\u7c7b\u578b\u662f\".json\" JSON \u6587\u672c\u7684 MIME \u7c7b\u578b\u662f\"application/json\" JSON \u540d\u79f0/\u503c\u5bf9 \u540d\u79f0/\u503c\u5bf9\u5305\u62ec\u5b57\u6bb5\u540d\u79f0\uff08\u5728\u53cc\u5f15\u53f7\u4e2d\uff09\uff0c\u540e\u9762\u5199\u4e00\u4e2a\u5192\u53f7\uff0c\u7136\u540e\u662f\u503c\uff1a \"name\" : \"convex\" JSON \u503c \u6570\u5b57\uff08\u6574\u6570\u6216\u6d6e\u70b9\u6570\uff09 \u5b57\u7b26\u4e32\uff08\u5728\u53cc\u5f15\u53f7\u4e2d\uff09 \u903b\u8f91\u503c\uff08true \u6216 false\uff09 \u6570\u7ec4\uff08\u5728\u4e2d\u62ec\u53f7\u4e2d\uff09 \u6570\u7ec4\u53ef\u5305\u542b\u591a\u4e2a\u5bf9\u8c61 \u5bf9\u8c61\uff08\u5728\u5927\u62ec\u53f7\u4e2d\uff09 \u5bf9\u8c61\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u540d\u79f0/\u503c\u5bf9 null","title":"Json"},{"location":"Openstack/json/#json","text":"","title":"JSON\u603b\u7ed3"},{"location":"Openstack/json/#what","text":"JSON \u6307\u7684\u662f JavaScript \u5bf9\u8c61\u8868\u793a\u6cd5( j ava s cript O bject N otation) JSON \u662f\u8f7b\u91cf\u7ea7\u7684\u6587\u672c\u6570\u636e\u4ea4\u6362\u683c\u5f0f JSON \u6587\u4ef6\u7684\u6587\u4ef6\u7c7b\u578b\u662f\".json\" JSON \u6587\u672c\u7684 MIME \u7c7b\u578b\u662f\"application/json\"","title":"what"},{"location":"Openstack/json/#json_1","text":"\u540d\u79f0/\u503c\u5bf9\u5305\u62ec\u5b57\u6bb5\u540d\u79f0\uff08\u5728\u53cc\u5f15\u53f7\u4e2d\uff09\uff0c\u540e\u9762\u5199\u4e00\u4e2a\u5192\u53f7\uff0c\u7136\u540e\u662f\u503c\uff1a \"name\" : \"convex\"","title":"JSON \u540d\u79f0/\u503c\u5bf9"},{"location":"Openstack/json/#json_2","text":"\u6570\u5b57\uff08\u6574\u6570\u6216\u6d6e\u70b9\u6570\uff09 \u5b57\u7b26\u4e32\uff08\u5728\u53cc\u5f15\u53f7\u4e2d\uff09 \u903b\u8f91\u503c\uff08true \u6216 false\uff09 \u6570\u7ec4\uff08\u5728\u4e2d\u62ec\u53f7\u4e2d\uff09 \u6570\u7ec4\u53ef\u5305\u542b\u591a\u4e2a\u5bf9\u8c61 \u5bf9\u8c61\uff08\u5728\u5927\u62ec\u53f7\u4e2d\uff09 \u5bf9\u8c61\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u540d\u79f0/\u503c\u5bf9 null","title":"JSON \u503c"},{"location":"Other/8_10b/","text":"8b/10b\u7f16\u7801 8b/10b\u7f16\u7801\u662f1983\u5e74\u7531IBM\u7684 Al Widmer \u4e0e Peter Franaszek \u6240\u63d0\u51fa\uff0c\u5e94\u7528\u4e8eESCON\uff0c\u540e\u6765\u7533\u8bf7\u6210\u4e13\u5229\u3002\u76ee\u524d\u5e7f\u53d7\u4e32\u5217\u603b\u7ebf\u6240\u91c7\u7528\u3002\u4f8b\u5982\uff1aIEEE 1394b\u3001SATA\u3001PCI Express\u3001Infini-band\u3001Fiber Channel\u3001RapidIO\u7b49\u603b\u7ebf\uff0c\u90fd\u662f\u91c7\u75288b/10b\u7f16\u7801\u30022008\u5e74\u63a8\u51fa\u7684USB 3.0\u89c4\u683c\u4e66\u4ea6\u660e\u8a00\u91c7\u7528\u4e868b/10b\u7f16\u7801\u3002 8b/10b\u7f16\u7801\u7684\u63d0\u51fa\u5373\u662f\u56e0\u5e94\u5149\u7ea4\u7684\u4f20\u8f93\u6280\u672f\uff0c8b/10b\u6280\u672f\u662f\u5c068\u4e2a\u6bd4\u7279\u7ecf\u8fc7\u67d0\u79cd\u6620\u5c04\u7684\u673a\u5236\u8f6c\u5316\u4e3a10\u4e2a\u6bd4\u7279\u7684\u5b57\u7801\uff0c\u5206\u4e24\u4e2a\u90e8\u4f4d\u5206\u522b\u8fdb\u884c\u6620\u5c04\u7684\u5904\u7406\uff0c\u5206\u522b\u662f 5B/6B \u4e0e 3B/4B \u7684\u5904\u7406\uff0c\u53e6\u5916\u201cD.a.b\u201d\u662f\u6570\u636e\u7801\uff08D\u5373\u662fData\uff09\uff0c\u201cK.a.b\u201d\u6307\u63a7\u5236\u7801\uff08K\u5373\u662fKey\uff09\uff0ca\u4e0eb\u8868\u793a\u8f93\u5165\u7684\u539f\u59cb\u6570\u636e\u3002 8b/10b\u7f16\u7801\u8f93\u51fa\u6bd4\u7279\u6570\u76ee\u603b\u5171\u662f10\u4e2a\u6bd4\u7279\uff0c\u4f46\u53ea\u6709\u201c+2\u201d\u201c+0\u201d\u201c-2\u201d\u4e09\u79cd\u7ec4\u5408\u3002\u5176\u4e2d\u201c+2\u201d\u662f\u63074\u4e2a\u6bd4\u72790\uff0c\u4e0e6\u4e2a\u6bd4\u72791\uff1b\u201c+0\u201d\u662f\u63075\u4e2a\u6bd4\u7279\u201c0\u201d\uff0c\u4e0e5\u4e2a\u6bd4\u7279\u201c1\u201d\uff1b\u201c-2\u201d\u662f\u63076\u4e2a\u6bd4\u7279\u201c0\u201d\uff0c\u4e0e4\u4e2a\u6bd4\u7279\u201c1\u201d\uff0c\u5229\u7528\u8fd9\u79cd\u201c\u4e0d\u5747\u7b49\u6027\u2014 Disparity\u201d\u7684\u7279\u6027\u800c\u5177\u6709\u5f3a\u5927\u7684\u76f4\u6d41\u5e73\u8861\uff08DC Balance\uff09\u529f\u80fd\uff0c\u53ef\u4f7f\u5f97\u53d1\u9001\u7684\u201c0\u201d\u3001\u201c1\u201d\u6570\u91cf\u4fdd\u6301\u4e00\u81f4\uff0c\u8fde\u7eed\u7684\u201c1\u201d\u6216\u201c0\u201d\u57fa\u672c\u4e0a\u4e0d\u8d85\u8fc75\u4f4d\u3002 8b/10b\u7f16\u7801\u5c06\u4e00\u7ec48\u4f4d\u6570\u636e\u5206\u6210\u4e24\u7ec4\uff0c\u4e00\u7ec43\u6bd4\u7279\uff0c\u4e00\u7ec45\u6bd4\u7279\uff0c\u7ecf\u8fc7\u7f16\u7801\u540e\u5f62\u6210\u4e00\u7ec44\u4f4d\u548c\u4e00\u7ec46\u6bd4\u7279\uff0c\u6545\u9001\u53d1\u65f6\u662f\u4e00\u7ec410\u6bd4\u7279\u7684\u6570\u636e\uff0c\u89e3\u7801\u65f6\u518d\u5c0610\u6bd4\u7279\u7684\u6570\u636e\u53d8\u6362\u5f97\u52308\u4f4d\u6570\u636e\u3002\u7f16\u7801\u8fc7\u7a0b\u4e2d\u4f4e\u4f4d5\u6bd4\u7279\u7684\u6570\u636e\u4f1a\u8fdb\u884c5B/6B\u7f16\u7801\uff0c\u9ad8\u4f4d3\u6bd4\u7279\u7684\u6570\u636e\u5219\u8fdb\u884c3B/4B\u7f16\u7801\u3002","title":"8 10b"},{"location":"Other/8_10b/#8b10b","text":"","title":"8b/10b\u7f16\u7801"},{"location":"Other/8_10b/#8b10b1983ibm-al-widmer-peter-franaszek-esconieee-1394bsatapci-expressinfini-bandfiber-channelrapidio8b10b2008usb-308b10b","text":"","title":"8b/10b\u7f16\u7801\u662f1983\u5e74\u7531IBM\u7684 Al Widmer \u4e0e Peter Franaszek \u6240\u63d0\u51fa\uff0c\u5e94\u7528\u4e8eESCON\uff0c\u540e\u6765\u7533\u8bf7\u6210\u4e13\u5229\u3002\u76ee\u524d\u5e7f\u53d7\u4e32\u5217\u603b\u7ebf\u6240\u91c7\u7528\u3002\u4f8b\u5982\uff1aIEEE 1394b\u3001SATA\u3001PCI Express\u3001Infini-band\u3001Fiber Channel\u3001RapidIO\u7b49\u603b\u7ebf\uff0c\u90fd\u662f\u91c7\u75288b/10b\u7f16\u7801\u30022008\u5e74\u63a8\u51fa\u7684USB 3.0\u89c4\u683c\u4e66\u4ea6\u660e\u8a00\u91c7\u7528\u4e868b/10b\u7f16\u7801\u3002"},{"location":"Other/8_10b/#8b10b8b10b810-5b6b-3b4b-dabddatakabkkeyab","text":"8b/10b\u7f16\u7801\u8f93\u51fa\u6bd4\u7279\u6570\u76ee\u603b\u5171\u662f10\u4e2a\u6bd4\u7279\uff0c\u4f46\u53ea\u6709\u201c+2\u201d\u201c+0\u201d\u201c-2\u201d\u4e09\u79cd\u7ec4\u5408\u3002\u5176\u4e2d\u201c+2\u201d\u662f\u63074\u4e2a\u6bd4\u72790\uff0c\u4e0e6\u4e2a\u6bd4\u72791\uff1b\u201c+0\u201d\u662f\u63075\u4e2a\u6bd4\u7279\u201c0\u201d\uff0c\u4e0e5\u4e2a\u6bd4\u7279\u201c1\u201d\uff1b\u201c-2\u201d\u662f\u63076\u4e2a\u6bd4\u7279\u201c0\u201d\uff0c\u4e0e4\u4e2a\u6bd4\u7279\u201c1\u201d\uff0c\u5229\u7528\u8fd9\u79cd\u201c\u4e0d\u5747\u7b49\u6027\u2014 Disparity\u201d\u7684\u7279\u6027\u800c\u5177\u6709\u5f3a\u5927\u7684\u76f4\u6d41\u5e73\u8861\uff08DC Balance\uff09\u529f\u80fd\uff0c\u53ef\u4f7f\u5f97\u53d1\u9001\u7684\u201c0\u201d\u3001\u201c1\u201d\u6570\u91cf\u4fdd\u6301\u4e00\u81f4\uff0c\u8fde\u7eed\u7684\u201c1\u201d\u6216\u201c0\u201d\u57fa\u672c\u4e0a\u4e0d\u8d85\u8fc75\u4f4d\u3002 8b/10b\u7f16\u7801\u5c06\u4e00\u7ec48\u4f4d\u6570\u636e\u5206\u6210\u4e24\u7ec4\uff0c\u4e00\u7ec43\u6bd4\u7279\uff0c\u4e00\u7ec45\u6bd4\u7279\uff0c\u7ecf\u8fc7\u7f16\u7801\u540e\u5f62\u6210\u4e00\u7ec44\u4f4d\u548c\u4e00\u7ec46\u6bd4\u7279\uff0c\u6545\u9001\u53d1\u65f6\u662f\u4e00\u7ec410\u6bd4\u7279\u7684\u6570\u636e\uff0c\u89e3\u7801\u65f6\u518d\u5c0610\u6bd4\u7279\u7684\u6570\u636e\u53d8\u6362\u5f97\u52308\u4f4d\u6570\u636e\u3002\u7f16\u7801\u8fc7\u7a0b\u4e2d\u4f4e\u4f4d5\u6bd4\u7279\u7684\u6570\u636e\u4f1a\u8fdb\u884c5B/6B\u7f16\u7801\uff0c\u9ad8\u4f4d3\u6bd4\u7279\u7684\u6570\u636e\u5219\u8fdb\u884c3B/4B\u7f16\u7801\u3002","title":"8b/10b\u7f16\u7801\u7684\u63d0\u51fa\u5373\u662f\u56e0\u5e94\u5149\u7ea4\u7684\u4f20\u8f93\u6280\u672f\uff0c8b/10b\u6280\u672f\u662f\u5c068\u4e2a\u6bd4\u7279\u7ecf\u8fc7\u67d0\u79cd\u6620\u5c04\u7684\u673a\u5236\u8f6c\u5316\u4e3a10\u4e2a\u6bd4\u7279\u7684\u5b57\u7801\uff0c\u5206\u4e24\u4e2a\u90e8\u4f4d\u5206\u522b\u8fdb\u884c\u6620\u5c04\u7684\u5904\u7406\uff0c\u5206\u522b\u662f 5B/6B \u4e0e 3B/4B \u7684\u5904\u7406\uff0c\u53e6\u5916\u201cD.a.b\u201d\u662f\u6570\u636e\u7801\uff08D\u5373\u662fData\uff09\uff0c\u201cK.a.b\u201d\u6307\u63a7\u5236\u7801\uff08K\u5373\u662fKey\uff09\uff0ca\u4e0eb\u8868\u793a\u8f93\u5165\u7684\u539f\u59cb\u6570\u636e\u3002"},{"location":"Other/Bash/","text":"Bash graph TB user-->shell shell-->Kernel Kernel-->Hardware cat /etc/shells #\u5728\u6b64\u6587\u4ef6\u6ce8\u518c\uff0c\u53ef\u4ee5\u8ba9\u67d0\u4e9b\u7a0b\u5e8f\u5728\u6b64\u5904\u627e\u5230\u76f8\u5e94shell\u4f4d\u7f6e \u5b89\u88c5 bash-completion \u53ef\u4ee5\u5177\u5907\u9009\u9879/\u53c2\u6570\u8865\u5168\u529f\u80fd alias lm='ls -al' #\u547d\u4ee4\u522b\u540d\u8bbe\u5b9a unalias lm #\u53d6\u6d88\u522b\u540d bash \u652f\u6301\u901a\u914d\u7b26(Wild Card)\uff0c\u4f46\u4e0d\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f bash\u96c6\u6210\u4e00\u4e9b\u5185\u5efa\u547d\u4ee4\uff0c\u4f8b\u5982cd type: type [-afptP] name [name ...] Display information about command type. For each NAME, indicate how it would be interpreted if used as a command name. Options: -a display all locations containing an executable named NAME; includes aliases, builtins, and functions, if and only if the `-p' option is not also used -f suppress shell function lookup -P force a PATH search for each NAME, even if it is an alias, builtin, or function, and returns the name of the disk file that would be executed -p returns either the name of the disk file that would be executed, or nothing if `type -t NAME' would not return `file' -t output a single word which is one of `alias', `keyword', `function', `builtin', `file' or `', if NAME is an alias, shell reserved word, shell function, shell builtin, disk file, or not found, respectively Arguments: NAME Command name to be interpreted. Exit Status: Returns success if all of the NAMEs are found; fails if any are not found. which - locate a command whereis - locate the binary, source, and manual page files for a command locate - find files by name \u5728bash\u4e2d\uff0c\u5f53\u4e00\u4e2a\u53d8\u91cf\u540d\u672a\u88ab\u8bbe\u5b9a\u65f6\uff0c\u5176\u9884\u8bbe\u5185\u5bb9\u4e3a\u7a7a\u3002 \u53d8\u91cf\u662fbash\u7684\u63d0\u4f9b\u7684\u529f\u80fd \u53d8\u91cf\u540d\u4e0e\u53d8\u91cf\u503c\u4ee5\u4e00\u4e2a = \u76f8\u8fde = \u4e24\u8fb9\u4e0d\u80fd\u76f4\u63a5\u6709\u7a7a\u683c\u7b26 \u53cc\u5f15\u53f7\u5185\u7684\u53d8\u91cf\u503c\u82e5\u5b58\u5728$\uff0c\u53ef\u4ee5\u4fdd\u7559\u539f\u7279\u6027\uff0c\u5355\u5f15\u53f7\u5219\u7eaf\u5b57\u7b26\u4e32 PATH=\"$PATH\":/home/bin \u6216 PATH=${PATH} :/home/bin $:\u672c\u6b21shell PID ?:\u4e0a\u6b21\u6267\u884c\u547d\u4ee4\u7684\u56de\u4f20\u503c \u73af\u5883\u53d8\u91cf\u4e0e\u81ea\u5b9a\u4e49\u53d8\u91cf\u76f8\u6bd4\uff0c\u524d\u8005\u53ef\u88ab\u5b50\u7a0b\u5e8f\u7ee7\u627f\uff0c\u800c\u540e\u8005\u4e0d\u53ef\u4ee5 env & export \u53ef\u4ee5\u663e\u793a\u73af\u5883\u53d8\u91cf set & declare \u663e\u793a\u5168\u90e8\u53d8\u91cf convex@ConvexLens:~$ locale LANG=zh_CN.UTF-8 LANGUAGE=zh_CN:zh LC_CTYPE=\"zh_CN.UTF-8\" LC_NUMERIC=\"zh_CN.UTF-8\" LC_TIME=\"zh_CN.UTF-8\" LC_COLLATE=\"zh_CN.UTF-8\" LC_MONETARY=\"zh_CN.UTF-8\" LC_MESSAGES=\"zh_CN.UTF-8\" LC_PAPER=\"zh_CN.UTF-8\" LC_NAME=\"zh_CN.UTF-8\" LC_ADDRESS=\"zh_CN.UTF-8\" LC_TELEPHONE=\"zh_CN.UTF-8\" LC_MEASUREMENT=\"zh_CN.UTF-8\" LC_IDENTIFICATION=\"zh_CN.UTF-8\" LC_ALL= #\u4e0a\u8ff0\u53d8\u91cf\u63a7\u5236bash\u4f7f\u7528\u7684\u7f16\u7801 #\u901a\u5e38\u4ec5\u8bbe\u5b9aLANG\u6216LC_ALL\u8fd9\u4e24\u4e2a\u53d8\u91cf\u800c\u5df2\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u6700\u4e3b\u8981\u7684\u8bbe\u5b9a\u53d8\u91cf #\u5176\u5b83\u8bed\u7cfb\u53d8\u91cf\u672a\u8bbe\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u4ece\u4e0a\u8ff0\u53d8\u91cf\u4e2d\u7ee7\u627f\uff0c\u4f18\u5148LC_ALL convex@ConvexLens:~$ locale -a C C.UTF-8 en_AG en_AG.utf8 en_AU.utf8 en_BW.utf8 en_CA.utf8 en_DK.utf8 en_GB.utf8 en_HK.utf8 en_IE.utf8 en_IL en_IL.utf8 en_IN en_IN.utf8 en_NG en_NG.utf8 en_NZ.utf8 en_PH.utf8 en_SG.utf8 en_US.utf8 en_ZA.utf8 en_ZM en_ZM.utf8 en_ZW.utf8 POSIX zh_CN.utf8 zh_SG.utf8 convex@ConvexLens:~$ export x=123 convex@ConvexLens:~$ y=123 convex@ConvexLens:~$ bash convex@ConvexLens:~$ echo $x 123 convex@ConvexLens:~$ echo $y convex@ConvexLens:~$ x=456 convex@ConvexLens:~$ echo $x 456 convex@ConvexLens:~$ exit exit convex@ConvexLens:~$ echo $x 123 #\u7236\u7a0b\u5e8f\u7684\u73af\u5883\u53d8\u91cf\u662f\u590d\u5236\u5230\u5b50\u7a0b\u5e8f\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\uff0c\u5e76\u975e\u901a\u8fc7\u6307\u9488\u6307\u5411\u7236\u7a0b\u5e8f\u73af\u5883\u53d8\u91cf\u7a7a\u95f4 convex@ConvexLens:~$ var[1]=a convex@ConvexLens:~$ var[2]=b convex@ConvexLens:~$ declare -p var declare -a var=([1]=\"a\" [2]=\"b\") #\u6570\u7ec4 convex@ConvexLens:~$ echo ${path} #\u6253\u5370\u539f\u59cb\u53d8\u91cf\u503c /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games convex@ConvexLens:~$ echo ${path#*:} #\u7531\u5de6\u5230\u53f3\u6700\u77ed\u5339\u914d\u5220\u9664 /usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games convex@ConvexLens:~$ echo ${path##*:} #\u7531\u5de6\u5230\u53f3\u6700\u957f\u5339\u914d\u5220\u9664 /usr/local/games convex@ConvexLens:~$ echo ${path%:*} #\u7531\u53f3\u5230\u5de6\u6700\u77ed\u5339\u914d\u5220\u9664 /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games convex@ConvexLens:~$ echo ${path%%:*} #\u7531\u53f3\u5230\u5de6\u6700\u957f\u5339\u914d\u5220\u9664 /usr/local/sbin convex@ConvexLens:~$ echo ${path/sbin/SBIN} #\u7531\u5de6\u5230\u53f3\u66ff\u6362\u4e00\u6b21 /usr/local/SBIN:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games convex@ConvexLens:~$ echo ${path//sbin/SBIN} #\u5168\u90e8\u66ff\u6362 /usr/local/SBIN:/usr/local/bin:/usr/SBIN:/usr/bin:/SBIN:/bin:/usr/games:/usr/local/games \u53d8\u91cf\u8bbe\u5b9a\u65b9\u5f0f str\u6ca1\u6709\u8bbe\u5b9a str\u4e3a\u7a7a\u503c str\u5df2\u8bbe\u5b9a\u4e14\u4e0d\u4e3a\u7a7a\u503c \u8bf4\u660e var=${str-expr} var=expr var=NULL var=str str/expr var=${str:-expr} var=expr var=expr var=str str/expr var=${str+expr} var=NULL var=expr var=expr expr/NULL var=${str:+expr} var=NULL var=NULL var=expr expr/NULL var=${str=expr} str=var=expr str=var=NULL str=var=str \u540c-\u589e\u52a0str\u4fee\u6539 var=${str:=expr} str=var=expr str=var=expr str=var=str \u540c-\u589e\u52a0str\u4fee\u6539 var=${str?expr} expr-->stderr var=NULL var=str expr\u4ec5\u4e3astderr var=${str:?expr} expr-->stderr expr-->stderr var=str expr\u4ec5\u4e3astderr \u6307\u4ee4\u641c\u7d22\u987a\u5e8f \u4ee5\u76f8\u5bf9\u6216\u7edd\u5bf9\u8def\u5f84\u6267\u884c\u6307\u4ee4 \u5728alias\u4e2d\u67e5\u627e \u5728bash\u5185\u5efa\u547d\u4ee4\u4e2d\u67e5\u627e \u901a\u8fc7$PATH\u8fd9\u4e2a\u53d8\u6570\u7684\u987a\u5e8f\u641c\u7d22\u5230\u7684\u7b2c\u4e00\u4e2a\u6307\u4ee4\u6765\u6267\u884c st=>start: Start e=>end: End cond1=>condition: Input Password? op1=>operation: login: source /etc/profile op2=>operation: login: source ~/.bash_profile || source ~/.bash_login || source ~/.profile | op3=>operation: non-login: source ~/.bashrc st->cond1 cond1(yes)->op1->op2->e cond1(no)->op3->e WildCard(Shell\u5e38\u89c1\u901a\u914d\u7b26) \u5b57\u7b26 \u542b\u4e49 * \u5339\u914d 0 \u6216\u591a\u4e2a\u5b57\u7b26 \uff1f \u5339\u914d\u4e00\u4e2a\u5b57\u7b26 [list] \u5339\u914d list \u4e2d\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [!list] [^list] \u5339\u914d\u9664 list \u4e2d\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [c1-c2] \u5339\u914d c1-c2 \u4e2d\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 {string1,string2,...} \u5339\u914d sring1 \u6216 string2 (\u6216\u66f4\u591a)\u5176\u4e00\u5b57\u7b26\u4e32 bash\u73af\u5883\u4e2d\u7684\u7279\u6b8a\u5b57\u7b26 \u7b26\u53f7 \u5185\u5bb9 # \u6ce8\u91ca\u7b26\u53f7\uff1a\u8fd9\u4e2a\u6700\u5e38\u88ab\u4f7f\u7528\u5728script \u5f53\u4e2d\uff0c\u89c6\u4e3a\u8bf4\u660e\uff01\u5728\u540e\u7684\u8d44\u6599\u5747\u4e0d\u6267\u884c \\ \u8df3\u8131\u7b26\u53f7\uff1a\u5c06\"\u7279\u6b8a\u5b57\u7b26\u6216\u901a\u914d\u7b26\"\u8fd8\u539f\u6210\u4e00\u822c\u5b57\u7b26 | \u7ba1\u7ebf(pipe)\uff1a\u5206\u9694\u4e24\u4e2a\u7ba1\u7ebf\u547d\u4ee4\u7684\u754c\u5b9a ; \u8fde\u7eed\u6307\u4ee4\u4e0b\u8fbe\u5206\u9694\u7b26\u53f7\uff1a\u8fde\u7eed\u6027\u547d\u4ee4\u7684\u754c\u5b9a(\u6ce8\u610f\uff01\u4e0e\u7ba1\u7ebf\u547d\u4ee4\u5e76\u4e0d\u76f8\u540c) ~ \u4f7f\u7528\u8005\u7684\u5bb6\u76ee\u5f55 $ \u53d6\u7528\u53d8\u91cf\u524d\u7f6e\u5b57\u7b26\uff1a\u4ea6\u5373\u662f\u53d8\u91cf\u4e4b\u524d\u9700\u8981\u52a0\u7684\u53d8\u91cf\u53d6\u4ee3\u503c & \u5de5\u4f5c\u63a7\u5236(job control)\uff1a\u5c06\u6307\u4ee4\u53d8\u6210\u80cc\u666f\u4e0b\u5de5\u4f5c ! \u903b\u8f91\u8fd0\u7b97\u610f\u4e49\u4e0a\u7684\"\u975e\" not \u7684\u610f\u601d\uff01 / \u76ee\u5f55\u7b26\u53f7\uff1a\u8def\u5f84\u5206\u9694\u7684\u7b26\u53f7 >, >> \u8d44\u6599\u6d41\u91cd\u5bfc\u5411\uff1a\u8f93\u51fa\u5bfc\u5411\uff0c\u5206\u522b\u662f\"\u53d6\u4ee3\"\u4e0e\"\u7d2f\u52a0\" <, << \u8d44\u6599\u6d41\u91cd\u5bfc\u5411\uff1a\u8f93\u5165\u5bfc\u5411 ' ' \u5355\u5f15\u53f7\uff0c\u4e0d\u5177\u6709\u53d8\u91cf\u7f6e\u6362\u7684\u529f\u80fd($ \u53d8\u4e3a\u7eaf\u6587\u5b57) \" \u5177\u6709\u53d8\u91cf\u7f6e\u6362\u7684\u529f\u80fd\uff01($ \u53ef\u4fdd\u7559\u76f8\u5173\u529f\u80fd) ` ` \u4e24\u4e2a\"` \"\u4e2d\u95f4\u4e3a\u53ef\u4ee5\u5148\u6267\u884c\u7684\u6307\u4ee4\uff0c\u4ea6\u53ef\u4f7f\u7528$( ) ( ) \u5728\u4e2d\u95f4\u4e3a\u5b50shell \u7684\u8d77\u59cb\u4e0e\u7ed3\u675f { } \u5728\u4e2d\u95f4\u4e3a\u547d\u4ee4\u533a\u5757\u7684\u7ec4\u5408\uff01 find /home - name .bashrc > list 2>&1 #\u5c06stderr\u5bfc\u5165\u5230stdout echo \"error message\" 1>&2 #\u5c06stdout\u5bfc\u5165\u5230stderr echo \"error message\" 2> /dev/null 1>&2 #\u5c06stdout\u5bfc\u5165\u5230stderr \u7ba1\u7ebf\u547d\u4ee4 |\u4e3a\u7ba1\u7ebf\u754c\u5b9a\u7b26\uff0c\u5176\u540e\u7684\u547d\u4ee4\u624d\u79f0\u4e3a\u7ba1\u7ebf\u547d\u4ee4 |\u4ec5\u4f1a\u5904\u7406stdout\uff0c\u5e76\u5ffd\u7565stderr \u7ba1\u7ebf\u547d\u4ee4\u9700\u8981\u80fd\u63a5\u6536stdin","title":"Bash"},{"location":"Other/Bash/#bash","text":"graph TB user-->shell shell-->Kernel Kernel-->Hardware cat /etc/shells #\u5728\u6b64\u6587\u4ef6\u6ce8\u518c\uff0c\u53ef\u4ee5\u8ba9\u67d0\u4e9b\u7a0b\u5e8f\u5728\u6b64\u5904\u627e\u5230\u76f8\u5e94shell\u4f4d\u7f6e \u5b89\u88c5 bash-completion \u53ef\u4ee5\u5177\u5907\u9009\u9879/\u53c2\u6570\u8865\u5168\u529f\u80fd alias lm='ls -al' #\u547d\u4ee4\u522b\u540d\u8bbe\u5b9a unalias lm #\u53d6\u6d88\u522b\u540d bash \u652f\u6301\u901a\u914d\u7b26(Wild Card)\uff0c\u4f46\u4e0d\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f bash\u96c6\u6210\u4e00\u4e9b\u5185\u5efa\u547d\u4ee4\uff0c\u4f8b\u5982cd type: type [-afptP] name [name ...] Display information about command type. For each NAME, indicate how it would be interpreted if used as a command name. Options: -a display all locations containing an executable named NAME; includes aliases, builtins, and functions, if and only if the `-p' option is not also used -f suppress shell function lookup -P force a PATH search for each NAME, even if it is an alias, builtin, or function, and returns the name of the disk file that would be executed -p returns either the name of the disk file that would be executed, or nothing if `type -t NAME' would not return `file' -t output a single word which is one of `alias', `keyword', `function', `builtin', `file' or `', if NAME is an alias, shell reserved word, shell function, shell builtin, disk file, or not found, respectively Arguments: NAME Command name to be interpreted. Exit Status: Returns success if all of the NAMEs are found; fails if any are not found. which - locate a command whereis - locate the binary, source, and manual page files for a command locate - find files by name \u5728bash\u4e2d\uff0c\u5f53\u4e00\u4e2a\u53d8\u91cf\u540d\u672a\u88ab\u8bbe\u5b9a\u65f6\uff0c\u5176\u9884\u8bbe\u5185\u5bb9\u4e3a\u7a7a\u3002 \u53d8\u91cf\u662fbash\u7684\u63d0\u4f9b\u7684\u529f\u80fd \u53d8\u91cf\u540d\u4e0e\u53d8\u91cf\u503c\u4ee5\u4e00\u4e2a = \u76f8\u8fde = \u4e24\u8fb9\u4e0d\u80fd\u76f4\u63a5\u6709\u7a7a\u683c\u7b26 \u53cc\u5f15\u53f7\u5185\u7684\u53d8\u91cf\u503c\u82e5\u5b58\u5728$\uff0c\u53ef\u4ee5\u4fdd\u7559\u539f\u7279\u6027\uff0c\u5355\u5f15\u53f7\u5219\u7eaf\u5b57\u7b26\u4e32 PATH=\"$PATH\":/home/bin \u6216 PATH=${PATH} :/home/bin $:\u672c\u6b21shell PID ?:\u4e0a\u6b21\u6267\u884c\u547d\u4ee4\u7684\u56de\u4f20\u503c \u73af\u5883\u53d8\u91cf\u4e0e\u81ea\u5b9a\u4e49\u53d8\u91cf\u76f8\u6bd4\uff0c\u524d\u8005\u53ef\u88ab\u5b50\u7a0b\u5e8f\u7ee7\u627f\uff0c\u800c\u540e\u8005\u4e0d\u53ef\u4ee5 env & export \u53ef\u4ee5\u663e\u793a\u73af\u5883\u53d8\u91cf set & declare \u663e\u793a\u5168\u90e8\u53d8\u91cf convex@ConvexLens:~$ locale LANG=zh_CN.UTF-8 LANGUAGE=zh_CN:zh LC_CTYPE=\"zh_CN.UTF-8\" LC_NUMERIC=\"zh_CN.UTF-8\" LC_TIME=\"zh_CN.UTF-8\" LC_COLLATE=\"zh_CN.UTF-8\" LC_MONETARY=\"zh_CN.UTF-8\" LC_MESSAGES=\"zh_CN.UTF-8\" LC_PAPER=\"zh_CN.UTF-8\" LC_NAME=\"zh_CN.UTF-8\" LC_ADDRESS=\"zh_CN.UTF-8\" LC_TELEPHONE=\"zh_CN.UTF-8\" LC_MEASUREMENT=\"zh_CN.UTF-8\" LC_IDENTIFICATION=\"zh_CN.UTF-8\" LC_ALL= #\u4e0a\u8ff0\u53d8\u91cf\u63a7\u5236bash\u4f7f\u7528\u7684\u7f16\u7801 #\u901a\u5e38\u4ec5\u8bbe\u5b9aLANG\u6216LC_ALL\u8fd9\u4e24\u4e2a\u53d8\u91cf\u800c\u5df2\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u6700\u4e3b\u8981\u7684\u8bbe\u5b9a\u53d8\u91cf #\u5176\u5b83\u8bed\u7cfb\u53d8\u91cf\u672a\u8bbe\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u4ece\u4e0a\u8ff0\u53d8\u91cf\u4e2d\u7ee7\u627f\uff0c\u4f18\u5148LC_ALL convex@ConvexLens:~$ locale -a C C.UTF-8 en_AG en_AG.utf8 en_AU.utf8 en_BW.utf8 en_CA.utf8 en_DK.utf8 en_GB.utf8 en_HK.utf8 en_IE.utf8 en_IL en_IL.utf8 en_IN en_IN.utf8 en_NG en_NG.utf8 en_NZ.utf8 en_PH.utf8 en_SG.utf8 en_US.utf8 en_ZA.utf8 en_ZM en_ZM.utf8 en_ZW.utf8 POSIX zh_CN.utf8 zh_SG.utf8 convex@ConvexLens:~$ export x=123 convex@ConvexLens:~$ y=123 convex@ConvexLens:~$ bash convex@ConvexLens:~$ echo $x 123 convex@ConvexLens:~$ echo $y convex@ConvexLens:~$ x=456 convex@ConvexLens:~$ echo $x 456 convex@ConvexLens:~$ exit exit convex@ConvexLens:~$ echo $x 123 #\u7236\u7a0b\u5e8f\u7684\u73af\u5883\u53d8\u91cf\u662f\u590d\u5236\u5230\u5b50\u7a0b\u5e8f\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\uff0c\u5e76\u975e\u901a\u8fc7\u6307\u9488\u6307\u5411\u7236\u7a0b\u5e8f\u73af\u5883\u53d8\u91cf\u7a7a\u95f4 convex@ConvexLens:~$ var[1]=a convex@ConvexLens:~$ var[2]=b convex@ConvexLens:~$ declare -p var declare -a var=([1]=\"a\" [2]=\"b\") #\u6570\u7ec4 convex@ConvexLens:~$ echo ${path} #\u6253\u5370\u539f\u59cb\u53d8\u91cf\u503c /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games convex@ConvexLens:~$ echo ${path#*:} #\u7531\u5de6\u5230\u53f3\u6700\u77ed\u5339\u914d\u5220\u9664 /usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games convex@ConvexLens:~$ echo ${path##*:} #\u7531\u5de6\u5230\u53f3\u6700\u957f\u5339\u914d\u5220\u9664 /usr/local/games convex@ConvexLens:~$ echo ${path%:*} #\u7531\u53f3\u5230\u5de6\u6700\u77ed\u5339\u914d\u5220\u9664 /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games convex@ConvexLens:~$ echo ${path%%:*} #\u7531\u53f3\u5230\u5de6\u6700\u957f\u5339\u914d\u5220\u9664 /usr/local/sbin convex@ConvexLens:~$ echo ${path/sbin/SBIN} #\u7531\u5de6\u5230\u53f3\u66ff\u6362\u4e00\u6b21 /usr/local/SBIN:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games convex@ConvexLens:~$ echo ${path//sbin/SBIN} #\u5168\u90e8\u66ff\u6362 /usr/local/SBIN:/usr/local/bin:/usr/SBIN:/usr/bin:/SBIN:/bin:/usr/games:/usr/local/games \u53d8\u91cf\u8bbe\u5b9a\u65b9\u5f0f str\u6ca1\u6709\u8bbe\u5b9a str\u4e3a\u7a7a\u503c str\u5df2\u8bbe\u5b9a\u4e14\u4e0d\u4e3a\u7a7a\u503c \u8bf4\u660e var=${str-expr} var=expr var=NULL var=str str/expr var=${str:-expr} var=expr var=expr var=str str/expr var=${str+expr} var=NULL var=expr var=expr expr/NULL var=${str:+expr} var=NULL var=NULL var=expr expr/NULL var=${str=expr} str=var=expr str=var=NULL str=var=str \u540c-\u589e\u52a0str\u4fee\u6539 var=${str:=expr} str=var=expr str=var=expr str=var=str \u540c-\u589e\u52a0str\u4fee\u6539 var=${str?expr} expr-->stderr var=NULL var=str expr\u4ec5\u4e3astderr var=${str:?expr} expr-->stderr expr-->stderr var=str expr\u4ec5\u4e3astderr","title":"Bash"},{"location":"Other/Bash/#_1","text":"\u4ee5\u76f8\u5bf9\u6216\u7edd\u5bf9\u8def\u5f84\u6267\u884c\u6307\u4ee4 \u5728alias\u4e2d\u67e5\u627e \u5728bash\u5185\u5efa\u547d\u4ee4\u4e2d\u67e5\u627e \u901a\u8fc7$PATH\u8fd9\u4e2a\u53d8\u6570\u7684\u987a\u5e8f\u641c\u7d22\u5230\u7684\u7b2c\u4e00\u4e2a\u6307\u4ee4\u6765\u6267\u884c st=>start: Start e=>end: End cond1=>condition: Input Password? op1=>operation: login: source /etc/profile op2=>operation: login: source ~/.bash_profile || source ~/.bash_login || source ~/.profile | op3=>operation: non-login: source ~/.bashrc st->cond1 cond1(yes)->op1->op2->e cond1(no)->op3->e","title":"\u6307\u4ee4\u641c\u7d22\u987a\u5e8f"},{"location":"Other/Bash/#wildcardshell","text":"\u5b57\u7b26 \u542b\u4e49 * \u5339\u914d 0 \u6216\u591a\u4e2a\u5b57\u7b26 \uff1f \u5339\u914d\u4e00\u4e2a\u5b57\u7b26 [list] \u5339\u914d list \u4e2d\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [!list] [^list] \u5339\u914d\u9664 list \u4e2d\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [c1-c2] \u5339\u914d c1-c2 \u4e2d\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 {string1,string2,...} \u5339\u914d sring1 \u6216 string2 (\u6216\u66f4\u591a)\u5176\u4e00\u5b57\u7b26\u4e32","title":"WildCard(Shell\u5e38\u89c1\u901a\u914d\u7b26)"},{"location":"Other/Bash/#bash_1","text":"\u7b26\u53f7 \u5185\u5bb9 # \u6ce8\u91ca\u7b26\u53f7\uff1a\u8fd9\u4e2a\u6700\u5e38\u88ab\u4f7f\u7528\u5728script \u5f53\u4e2d\uff0c\u89c6\u4e3a\u8bf4\u660e\uff01\u5728\u540e\u7684\u8d44\u6599\u5747\u4e0d\u6267\u884c \\ \u8df3\u8131\u7b26\u53f7\uff1a\u5c06\"\u7279\u6b8a\u5b57\u7b26\u6216\u901a\u914d\u7b26\"\u8fd8\u539f\u6210\u4e00\u822c\u5b57\u7b26 | \u7ba1\u7ebf(pipe)\uff1a\u5206\u9694\u4e24\u4e2a\u7ba1\u7ebf\u547d\u4ee4\u7684\u754c\u5b9a ; \u8fde\u7eed\u6307\u4ee4\u4e0b\u8fbe\u5206\u9694\u7b26\u53f7\uff1a\u8fde\u7eed\u6027\u547d\u4ee4\u7684\u754c\u5b9a(\u6ce8\u610f\uff01\u4e0e\u7ba1\u7ebf\u547d\u4ee4\u5e76\u4e0d\u76f8\u540c) ~ \u4f7f\u7528\u8005\u7684\u5bb6\u76ee\u5f55 $ \u53d6\u7528\u53d8\u91cf\u524d\u7f6e\u5b57\u7b26\uff1a\u4ea6\u5373\u662f\u53d8\u91cf\u4e4b\u524d\u9700\u8981\u52a0\u7684\u53d8\u91cf\u53d6\u4ee3\u503c & \u5de5\u4f5c\u63a7\u5236(job control)\uff1a\u5c06\u6307\u4ee4\u53d8\u6210\u80cc\u666f\u4e0b\u5de5\u4f5c ! \u903b\u8f91\u8fd0\u7b97\u610f\u4e49\u4e0a\u7684\"\u975e\" not \u7684\u610f\u601d\uff01 / \u76ee\u5f55\u7b26\u53f7\uff1a\u8def\u5f84\u5206\u9694\u7684\u7b26\u53f7 >, >> \u8d44\u6599\u6d41\u91cd\u5bfc\u5411\uff1a\u8f93\u51fa\u5bfc\u5411\uff0c\u5206\u522b\u662f\"\u53d6\u4ee3\"\u4e0e\"\u7d2f\u52a0\" <, << \u8d44\u6599\u6d41\u91cd\u5bfc\u5411\uff1a\u8f93\u5165\u5bfc\u5411 ' ' \u5355\u5f15\u53f7\uff0c\u4e0d\u5177\u6709\u53d8\u91cf\u7f6e\u6362\u7684\u529f\u80fd($ \u53d8\u4e3a\u7eaf\u6587\u5b57) \" \u5177\u6709\u53d8\u91cf\u7f6e\u6362\u7684\u529f\u80fd\uff01($ \u53ef\u4fdd\u7559\u76f8\u5173\u529f\u80fd) ` ` \u4e24\u4e2a\"` \"\u4e2d\u95f4\u4e3a\u53ef\u4ee5\u5148\u6267\u884c\u7684\u6307\u4ee4\uff0c\u4ea6\u53ef\u4f7f\u7528$( ) ( ) \u5728\u4e2d\u95f4\u4e3a\u5b50shell \u7684\u8d77\u59cb\u4e0e\u7ed3\u675f { } \u5728\u4e2d\u95f4\u4e3a\u547d\u4ee4\u533a\u5757\u7684\u7ec4\u5408\uff01 find /home - name .bashrc > list 2>&1 #\u5c06stderr\u5bfc\u5165\u5230stdout echo \"error message\" 1>&2 #\u5c06stdout\u5bfc\u5165\u5230stderr echo \"error message\" 2> /dev/null 1>&2 #\u5c06stdout\u5bfc\u5165\u5230stderr","title":"bash\u73af\u5883\u4e2d\u7684\u7279\u6b8a\u5b57\u7b26"},{"location":"Other/Bash/#_2","text":"|\u4e3a\u7ba1\u7ebf\u754c\u5b9a\u7b26\uff0c\u5176\u540e\u7684\u547d\u4ee4\u624d\u79f0\u4e3a\u7ba1\u7ebf\u547d\u4ee4 |\u4ec5\u4f1a\u5904\u7406stdout\uff0c\u5e76\u5ffd\u7565stderr \u7ba1\u7ebf\u547d\u4ee4\u9700\u8981\u80fd\u63a5\u6536stdin","title":"\u7ba1\u7ebf\u547d\u4ee4"},{"location":"Other/CA Authentication/","text":"CA Authentication \u6570\u5b57\u8bc1\u4e66 \u6570\u5b57\u8bc1\u4e66\u662f\u4e00\u79cd\u6743\u5a01\u6027\u7684\u7535\u5b50\u6587\u6863\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u5728 Internet \u4e0a\u9a8c\u8bc1\u60a8\u8eab\u4efd\u7684\u65b9\u5f0f\uff0c\u5176\u4f5c\u7528\u7c7b\u4f3c\u4e8e\u53f8\u673a\u7684\u9a7e\u9a76\u6267\u7167\u6216\u65e5\u5e38\u751f\u6d3b\u4e2d\u7684\u8eab\u4efd\u8bc1\u3002\u5b83\u662f\u7531\u4e00\u4e2a\u7531\u6743\u5a01\u673a\u6784\u2014\u2014CA\u8bc1\u4e66\u6388\u6743\uff08Certificate Authority\uff09\u4e2d\u5fc3\u53d1\u884c\u7684\uff0c\u4eba\u4eec\u53ef\u4ee5\u5728\u4e92\u8054\u7f51\u4ea4\u5f80\u4e2d\u7528\u5b83\u6765\u8bc6\u522b\u5bf9\u65b9\u7684\u8eab\u4efd\u3002\u5f53\u7136\u5728\u6570\u5b57\u8bc1\u4e66\u8ba4\u8bc1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8bc1\u4e66\u8ba4\u8bc1\u4e2d\u5fc3\uff08CA\uff09\u4f5c\u4e3a\u6743\u5a01\u7684\u3001\u516c\u6b63\u7684\u3001\u53ef\u4fe1\u8d56\u7684\u7b2c\u4e09\u65b9\uff0c\u5176\u4f5c\u7528\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002 Certificate Fields Certificate Common Name Version Issuser Validity Subject Subject's Public Key Info Extension Certificate Signature Algorithm Certificate Signature Algorithm: Certificate Signature Value \u6570\u5b57\u7b7e\u540d(Certificate Signature Value) Centificate -> HashValue:sha1 HashValue -> Certificate Signature:RSA(\u79c1\u94a5) \u5408\u6cd5\u6027\u9a8c\u8bc1\u53ca\u5b8c\u6574\u6027\u9a8c\u8bc1 Certificate Signature -> HashValue1:RSA(\u516c\u94a5) Certificate -> HashValue2:sha1 HashValue2 --> HashValue2:\u662f\u5426\u7b49\u4e8eHashValue1 \u5bc6\u7801\u5b66\u7b97\u6cd5 \u6d88\u606f\u6458\u8981\u7b97\u6cd5 MD5 SHA \u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5 RC2 RC4 IDEA DES AES \u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5 RSA DH \u6570\u5b57\u7b7e\u540d\u7b97\u6cd5 RSA DSA","title":"CA Authentication"},{"location":"Other/CA Authentication/#ca-authentication","text":"","title":"CA Authentication"},{"location":"Other/CA Authentication/#_1","text":"\u6570\u5b57\u8bc1\u4e66\u662f\u4e00\u79cd\u6743\u5a01\u6027\u7684\u7535\u5b50\u6587\u6863\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u5728 Internet \u4e0a\u9a8c\u8bc1\u60a8\u8eab\u4efd\u7684\u65b9\u5f0f\uff0c\u5176\u4f5c\u7528\u7c7b\u4f3c\u4e8e\u53f8\u673a\u7684\u9a7e\u9a76\u6267\u7167\u6216\u65e5\u5e38\u751f\u6d3b\u4e2d\u7684\u8eab\u4efd\u8bc1\u3002\u5b83\u662f\u7531\u4e00\u4e2a\u7531\u6743\u5a01\u673a\u6784\u2014\u2014CA\u8bc1\u4e66\u6388\u6743\uff08Certificate Authority\uff09\u4e2d\u5fc3\u53d1\u884c\u7684\uff0c\u4eba\u4eec\u53ef\u4ee5\u5728\u4e92\u8054\u7f51\u4ea4\u5f80\u4e2d\u7528\u5b83\u6765\u8bc6\u522b\u5bf9\u65b9\u7684\u8eab\u4efd\u3002\u5f53\u7136\u5728\u6570\u5b57\u8bc1\u4e66\u8ba4\u8bc1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8bc1\u4e66\u8ba4\u8bc1\u4e2d\u5fc3\uff08CA\uff09\u4f5c\u4e3a\u6743\u5a01\u7684\u3001\u516c\u6b63\u7684\u3001\u53ef\u4fe1\u8d56\u7684\u7b2c\u4e09\u65b9\uff0c\u5176\u4f5c\u7528\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002","title":"\u6570\u5b57\u8bc1\u4e66"},{"location":"Other/CA Authentication/#certificate-fields","text":"Certificate Common Name Version Issuser Validity Subject Subject's Public Key Info Extension Certificate Signature Algorithm Certificate Signature Algorithm: Certificate Signature Value","title":"Certificate Fields"},{"location":"Other/CA Authentication/#certificate-signature-value","text":"Centificate -> HashValue:sha1 HashValue -> Certificate Signature:RSA(\u79c1\u94a5)","title":"\u6570\u5b57\u7b7e\u540d(Certificate Signature Value)"},{"location":"Other/CA Authentication/#_2","text":"Certificate Signature -> HashValue1:RSA(\u516c\u94a5) Certificate -> HashValue2:sha1 HashValue2 --> HashValue2:\u662f\u5426\u7b49\u4e8eHashValue1","title":"\u5408\u6cd5\u6027\u9a8c\u8bc1\u53ca\u5b8c\u6574\u6027\u9a8c\u8bc1"},{"location":"Other/CA Authentication/#_3","text":"\u6d88\u606f\u6458\u8981\u7b97\u6cd5 MD5 SHA \u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5 RC2 RC4 IDEA DES AES \u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5 RSA DH \u6570\u5b57\u7b7e\u540d\u7b97\u6cd5 RSA DSA","title":"\u5bc6\u7801\u5b66\u7b97\u6cd5"},{"location":"Other/CNA_disk/","text":"<disk type='file' device='disk'> <driver name='tap2' type='vhd' io_persistent='off' io_multiring='off' io_indirect='off'/> <source file='/POME/datastore_4/vol/vol_6cb0cee7-c1e2-4e7f-958d-57bc50e24fb9/vol_6cb0cee7-c1e2-4e7f-958d-57bc50e24fb9.vhd'/> <target dev='xvda' bus='xen'/> </disk> <disk type='block' device='disk'> <driver name='phy' io_persistent='off' io_multiring='off' io_indirect='off'/> <source dev='/dev/mapper/i-000006A2-root'/> <target dev='xvda' bus='xen'/> </disk>","title":"CNA disk"},{"location":"Other/Cinder-log/","text":"Cinder-log 2017-08-10 11:26:48.697 INFO cinder.api.openstack.wsgi [req-edc27433-749c-45e4-afd3-8221e2dcc9c3 8149d62a265c4c3587f98d56c6e405cf 6e80908cde21459eb11455e356461cde] POST http://10.20.10.11:8776/v2/6e80908cde21459eb11455e356461cde/volumes 2017-08-10 11:26:48.697 DEBUG cinder.api.openstack.wsgi [req-edc27433-749c-45e4-afd3-8221e2dcc9c3 8149d62a265c4c3587f98d56c6e405cf 6e80908cde21459eb11455e356461cde] Action: 'create', calling method: <bound method VolumeController.create of <cinder.api.v2.volumes.VolumeController object at 0x7fe393cf6290>>, body: {\"volume\": {\"status\": \"creating\", \"user_id\": null, \"name\": \"v2\", \"imageRef\": null, \"availability_zone\": \"nova\", \"description\": \"\", \"multiattach\": false, \"attach_status\": \"detached\", \"volume_type\": \"lvmdriver-1\", \"metadata\": {}, \"consistencygroup_id\": null, \"source_volid\": null, \"snapshot_id\": null, \"project_id\": null, \"source_replica\": null, \"size\": 1}} from (pid=2989) _process_stack /opt/stack/cinder/cinder/api/openstack/wsgi.py:868 2017-08-10 11:26:48.698 DEBUG cinder.api.v2.volumes [req-edc27433-749c-45e4-afd3-8221e2dcc9c3 8149d62a265c4c3587f98d56c6e405cf 6e80908cde21459eb11455e356461cde] Create volume request body: {u'volume': {u'status': u'creating', u'size': 1, u'project_id': None, u'user_id': None, u'description': u'', u'imageRef': None, u'availability_zone': u'nova', 'scheduler_hints': {}, u'multiattach': False, u'attach_status': u'detached', u'volume_type': u'lvmdriver-1', u'consistencygroup_id': None, u'source_volid': None, u'snapshot_id': None, u'metadata': {}, u'source_replica': None, u'name': u'v2'}} from (pid=2989) create /opt/stack/cinder/cinder/api/v2/volumes.py:177 2017-08-10 11:26:48.708 INFO cinder.api.v2.volumes [req-edc27433-749c-45e4-afd3-8221e2dcc9c3 8149d62a265c4c3587f98d56c6e405cf 6e80908cde21459eb11455e356461cde] Create volume of 1 GB","title":"Cinder log"},{"location":"Other/Cinder-log/#cinder-log","text":"2017-08-10 11:26:48.697 INFO cinder.api.openstack.wsgi [req-edc27433-749c-45e4-afd3-8221e2dcc9c3 8149d62a265c4c3587f98d56c6e405cf 6e80908cde21459eb11455e356461cde] POST http://10.20.10.11:8776/v2/6e80908cde21459eb11455e356461cde/volumes 2017-08-10 11:26:48.697 DEBUG cinder.api.openstack.wsgi [req-edc27433-749c-45e4-afd3-8221e2dcc9c3 8149d62a265c4c3587f98d56c6e405cf 6e80908cde21459eb11455e356461cde] Action: 'create', calling method: <bound method VolumeController.create of <cinder.api.v2.volumes.VolumeController object at 0x7fe393cf6290>>, body: {\"volume\": {\"status\": \"creating\", \"user_id\": null, \"name\": \"v2\", \"imageRef\": null, \"availability_zone\": \"nova\", \"description\": \"\", \"multiattach\": false, \"attach_status\": \"detached\", \"volume_type\": \"lvmdriver-1\", \"metadata\": {}, \"consistencygroup_id\": null, \"source_volid\": null, \"snapshot_id\": null, \"project_id\": null, \"source_replica\": null, \"size\": 1}} from (pid=2989) _process_stack /opt/stack/cinder/cinder/api/openstack/wsgi.py:868 2017-08-10 11:26:48.698 DEBUG cinder.api.v2.volumes [req-edc27433-749c-45e4-afd3-8221e2dcc9c3 8149d62a265c4c3587f98d56c6e405cf 6e80908cde21459eb11455e356461cde] Create volume request body: {u'volume': {u'status': u'creating', u'size': 1, u'project_id': None, u'user_id': None, u'description': u'', u'imageRef': None, u'availability_zone': u'nova', 'scheduler_hints': {}, u'multiattach': False, u'attach_status': u'detached', u'volume_type': u'lvmdriver-1', u'consistencygroup_id': None, u'source_volid': None, u'snapshot_id': None, u'metadata': {}, u'source_replica': None, u'name': u'v2'}} from (pid=2989) create /opt/stack/cinder/cinder/api/v2/volumes.py:177 2017-08-10 11:26:48.708 INFO cinder.api.v2.volumes [req-edc27433-749c-45e4-afd3-8221e2dcc9c3 8149d62a265c4c3587f98d56c6e405cf 6e80908cde21459eb11455e356461cde] Create volume of 1 GB","title":"Cinder-log"},{"location":"Other/Example/","text":"Heading Sub-heading Another deeper heading Paragraphs are separated by a blank line. Two spaces at the end of a line leave a line break. Text attributes italic , italic , bold , bold , monospace . Horizontal rule: Bullet list: apples oranges pears Numbered list: 1. apples 2. oranges 3. pears A link . \u6d41\u7a0b\u56fe st=>start: Start op=>operation: Your Operation cond=>condition: Yes or No? e=>end st->op->cond cond(yes)->e cond(no)->op \u5e8f\u5217\u56fe Alice->Bob: Hello Bob, how are you? Note right of Bob: Bob thinks Bob-->Alice: I am good thanks!","title":"Heading"},{"location":"Other/Example/#heading","text":"","title":"Heading"},{"location":"Other/Example/#sub-heading","text":"","title":"Sub-heading"},{"location":"Other/Example/#another-deeper-heading","text":"Paragraphs are separated by a blank line. Two spaces at the end of a line leave a line break. Text attributes italic , italic , bold , bold , monospace . Horizontal rule: Bullet list: apples oranges pears Numbered list: 1. apples 2. oranges 3. pears A link .","title":"Another deeper heading"},{"location":"Other/Example/#_1","text":"st=>start: Start op=>operation: Your Operation cond=>condition: Yes or No? e=>end st->op->cond cond(yes)->e cond(no)->op","title":"\u6d41\u7a0b\u56fe"},{"location":"Other/Example/#_2","text":"Alice->Bob: Hello Bob, how are you? Note right of Bob: Bob thinks Bob-->Alice: I am good thanks!","title":"\u5e8f\u5217\u56fe"},{"location":"Other/FibreChannel/","text":"Fibre Channel Protocol \u7531\u4f4e\u5c42\u5230\u9ad8\u5c42\uff0c\u4f9d\u6b21\uff1a \u63a7\u5236\u7b26\uff1a\u75314\u4e2a\u5b57\u8282\u7ec4\u6210\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u8282\u503c\u4e3a0xBC\uff0c\u5e76\u4e14\u4f1a\u5bf9\u5176\u8fdb\u884c8/16b\u7f16\u7801\u3002\u6b64\u5b57\u7b260xBC\u57288/16\u522b\u540d\u4e3aK.28.5\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a001111 1010 \u6216 110000 0101 \u5e27\u5934\uff1a24\u5b57\u8282\uff0c\u5305\u542b\u5bfb\u5740\u3001\u4f20\u8f93\u4fdd\u969c\u529f\u80fd\uff0c\u6570\u636e\u94fe\u63a5\u5c42\u3001\u7f51\u7edc\u5c42\u3001\u4f20\u8f93\u5c42\u90fd\u7531\u6b6424\u5b57\u8282\u8868\u793a 3 Bytes \u7684Fabric ID\uff0c\u53ef\u5e73\u5747\u5206\u6210 Domain ID(\u533a\u5206FC\u7f51\u7edc\u4e2d\u7684\u4ea4\u6362\u673a)\u3001Area ID(\u533a\u522b\u540c\u4e00\u53f0\u4ea4\u6362\u673a\u4e0a\u7684\u4e0d\u540c\u7aef\u53e3\u7ec4 \u82af\u7247 )\u3001Port ID(\u7528\u6765\u533a\u5206Area\u4e2d\u7684port) \u9009\u4e3e WWPN \u53f7\u6700\u5c0f\u7684\u4ea4\u6362\u673a\u6765\u5145\u5f53\u4e3b\u4ea4\u6362\u673a\uff0c\u7531\u5b83\u7ed9\u6bcf\u4e2a\u4ea4\u6362\u673a\u5206\u914d Domain ID FC \u7f51\u7edc\u4e2d\u7684\u6bcf\u4e2a\u8bbe\u5907\u90fd\u6709\u56fa\u5b9a\u4e14\u552f\u4e00\u7684 WWNN (World Wide Node Name)\uff0c\u6bcf\u4e2a\u7aef\u53e3\u6709\u81ea\u5df1\u7684 WWPN \u6bcf\u4e2a FC \u7ec8\u7aef\u8bbe\u5907\u9664\u4e86\u548c\u6700\u7ec8\u901a\u4fe1\u7684\u76ee\u6807\u6709\u4ea4\u4e92\u4e4b\u5916\uff0c\u8fd8\u9700\u8981\u548c FC \u4ea4\u6362\u673a\u6253\u4ea4\u9053 sequence \u53d1\u8d77\u8005 -> \u6ce8\u518c\u670d\u52a1\u5668(0xFFFFFE) :FLOGI \u6ce8\u518c\u670d\u52a1\u5668(0xFFFFFE) -> \u53d1\u8d77\u8005 :\u63a5\u53d7(\u5730\u5740) \u53d1\u8d77\u8005 -> \u540d\u79f0\u670d\u52a1\u5668(0xFFFFFC) :PLOGI(\u6ce8\u518c) \u540d\u79f0\u670d\u52a1\u5668(0xFFFFFC) -> \u53d1\u8d77\u8005 :\u63a5\u53d7 \u53d1\u8d77\u8005 -> \u5e94\u7b54\u8005 :PLOGI \u5e94\u7b54\u8005 -> \u53d1\u8d77\u8005 :\u63a5\u53d7 \u200b","title":"FibreChannel"},{"location":"Other/FibreChannel/#fibre-channel-protocol","text":"\u7531\u4f4e\u5c42\u5230\u9ad8\u5c42\uff0c\u4f9d\u6b21\uff1a \u63a7\u5236\u7b26\uff1a\u75314\u4e2a\u5b57\u8282\u7ec4\u6210\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u8282\u503c\u4e3a0xBC\uff0c\u5e76\u4e14\u4f1a\u5bf9\u5176\u8fdb\u884c8/16b\u7f16\u7801\u3002\u6b64\u5b57\u7b260xBC\u57288/16\u522b\u540d\u4e3aK.28.5\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a001111 1010 \u6216 110000 0101 \u5e27\u5934\uff1a24\u5b57\u8282\uff0c\u5305\u542b\u5bfb\u5740\u3001\u4f20\u8f93\u4fdd\u969c\u529f\u80fd\uff0c\u6570\u636e\u94fe\u63a5\u5c42\u3001\u7f51\u7edc\u5c42\u3001\u4f20\u8f93\u5c42\u90fd\u7531\u6b6424\u5b57\u8282\u8868\u793a 3 Bytes \u7684Fabric ID\uff0c\u53ef\u5e73\u5747\u5206\u6210 Domain ID(\u533a\u5206FC\u7f51\u7edc\u4e2d\u7684\u4ea4\u6362\u673a)\u3001Area ID(\u533a\u522b\u540c\u4e00\u53f0\u4ea4\u6362\u673a\u4e0a\u7684\u4e0d\u540c\u7aef\u53e3\u7ec4 \u82af\u7247 )\u3001Port ID(\u7528\u6765\u533a\u5206Area\u4e2d\u7684port) \u9009\u4e3e WWPN \u53f7\u6700\u5c0f\u7684\u4ea4\u6362\u673a\u6765\u5145\u5f53\u4e3b\u4ea4\u6362\u673a\uff0c\u7531\u5b83\u7ed9\u6bcf\u4e2a\u4ea4\u6362\u673a\u5206\u914d Domain ID FC \u7f51\u7edc\u4e2d\u7684\u6bcf\u4e2a\u8bbe\u5907\u90fd\u6709\u56fa\u5b9a\u4e14\u552f\u4e00\u7684 WWNN (World Wide Node Name)\uff0c\u6bcf\u4e2a\u7aef\u53e3\u6709\u81ea\u5df1\u7684 WWPN \u6bcf\u4e2a FC \u7ec8\u7aef\u8bbe\u5907\u9664\u4e86\u548c\u6700\u7ec8\u901a\u4fe1\u7684\u76ee\u6807\u6709\u4ea4\u4e92\u4e4b\u5916\uff0c\u8fd8\u9700\u8981\u548c FC \u4ea4\u6362\u673a\u6253\u4ea4\u9053 sequence \u53d1\u8d77\u8005 -> \u6ce8\u518c\u670d\u52a1\u5668(0xFFFFFE) :FLOGI \u6ce8\u518c\u670d\u52a1\u5668(0xFFFFFE) -> \u53d1\u8d77\u8005 :\u63a5\u53d7(\u5730\u5740) \u53d1\u8d77\u8005 -> \u540d\u79f0\u670d\u52a1\u5668(0xFFFFFC) :PLOGI(\u6ce8\u518c) \u540d\u79f0\u670d\u52a1\u5668(0xFFFFFC) -> \u53d1\u8d77\u8005 :\u63a5\u53d7 \u53d1\u8d77\u8005 -> \u5e94\u7b54\u8005 :PLOGI \u5e94\u7b54\u8005 -> \u53d1\u8d77\u8005 :\u63a5\u53d7 \u200b","title":"Fibre Channel Protocol"},{"location":"Other/FusionAccessTerm/","text":"FusionAccessTerm \u4e1a\u52a1\u7c7b\u578b VDI SBC \u514b\u9686\u7c7b\u578b \u5b8c\u6574\u590d\u5236 \u5feb\u901f\u5c01\u88c5 \u94fe\u63a5\u514b\u9686 \u5168\u5185\u5b58","title":"FusionAccessTerm"},{"location":"Other/FusionAccessTerm/#fusionaccessterm","text":"","title":"FusionAccessTerm"},{"location":"Other/FusionAccessTerm/#_1","text":"VDI SBC","title":"\u4e1a\u52a1\u7c7b\u578b"},{"location":"Other/FusionAccessTerm/#_2","text":"\u5b8c\u6574\u590d\u5236 \u5feb\u901f\u5c01\u88c5 \u94fe\u63a5\u514b\u9686 \u5168\u5185\u5b58","title":"\u514b\u9686\u7c7b\u578b"},{"location":"Other/FusionSphere Openstack R6.1 Organization vdc/","text":"FusionSphere Openstack R6.1 Organization vdc CPS03:~ # openstack domain list +----------------------------------+-------------------+---------+-------------+ | ID | Name | Enabled | Description | +----------------------------------+-------------------+---------+-------------+ | 3e0d192baafc41c5a0ce86e67df77a08 | heat_stack_domain | True | | | default | Default | True | | | 3c91bd9abf314350b98bab6edc47aae1 | IE_ORG | True | | +----------------------------------+-------------------+---------+-------------+ \u67e5\u627e\u51fa\u4e00\u4e2a\u4e0eOrganization\u540c\u540d\u7684domain,name:IE_ORG,id:3c91bd9abf314350b98bab6edc47aae1 CPS03:~ # openstack project list +----------------------------------+----------------+ | ID | Name | +----------------------------------+----------------+ | d6975fe53cf2440e8db894d41ff53bdb | service | | bf9ad240ae474574b82d8eda1ed4c1ba | elb | | f98047b1124f471d8d4347ab7282250f | router | | f10e0e996c4641d6b4fd3e5fe3293911 | admin | | 3b3915ad4d644dec84c986891e8e3a6d | dc_test_dc1 | | bf9111ed98994c67a17f18d76c6378ba | dc_system_dc1 | | aa059c5f8218418aae9fc59ddee4e835 | dc_network_dc1 | | bc32fb3eaa9c4ce287081bdf6211abc6 | IE_VDC | +----------------------------------+----------------+ \u67e5\u627e\u51fa\u4e00\u4e2a\u4e0eVDC\u540c\u540d\u7684Project,name:IE_VDC,id:bc32fb3eaa9c4ce287081bdf6211abc6 CPS03:~ # openstack role assignment list --project bc32fb3eaa9c4ce287081bdf6211abc6 +----------------------------------+------+----------------------------------+----------------------------------+--------+-----------+ | Role | User | Group | Project | Domain | Inherited | +----------------------------------+------+----------------------------------+----------------------------------+--------+-----------+ | 9ef560a9fe6240a6a6b0e67e6b6639c5 | | ae74d5c94afd45c1940fa61d4e5e1fc9 | bc32fb3eaa9c4ce287081bdf6211abc6 | | False | | cd0ee9c16a7f42d9988af0720503df5c | | 3e3b95eaf2bf45efadd5f1585e4007d3 | bc32fb3eaa9c4ce287081bdf6211abc6 | | False | | 8032e7fbb37e46e286d204f2b64ef689 | | ae74d5c94afd45c1940fa61d4e5e1fc9 | bc32fb3eaa9c4ce287081bdf6211abc6 | | False | | 8032e7fbb37e46e286d204f2b64ef689 | | 1fe338d00c3741cea4ec79fd8b44e2f6 | bc32fb3eaa9c4ce287081bdf6211abc6 | | False | +----------------------------------+------+----------------------------------+----------------------------------+--------+-----------+ \u67e5\u770bproject\u7684\u89d2\u8272\u5206\u914d\uff0c\u53d1\u73b0\u90fd\u662f\u4ee5group\u7684\u65b9\u5f0f\u8fdb\u884c\u6743\u9650\u5206\u914d\uff0cgroup\u5206\u522b\u6709\uff1aae74d5c94afd45c1940fa61d4e5e1fc9\u30013e3b95eaf2bf45efadd5f1585e4007d3\u30011fe338d00c3741cea4ec79fd8b44e2f6 CPS03:~ # openstack group list +----------------------------------+------------------------------------------------+ | ID | Name | +----------------------------------+------------------------------------------------+ | 5ec63d4c0e4947d6a55505579709be7f | orchestration_group | | 01036def928a46f792e5632fdf8b5875 | service_group | | cc05d6e0aed141a6920100a61abbd93f | f10e0e996c4641d6b4fd3e5fe3293911_admin | | ae74d5c94afd45c1940fa61d4e5e1fc9 | d6975fe53cf2440e8db894d41ff53bdb_admin | | f6e2b4a6789048f0aa4e0684616483a9 | d6975fe53cf2440e8db894d41ff53bdb_limited_owner | | 3e3b95eaf2bf45efadd5f1585e4007d3 | bc32fb3eaa9c4ce287081bdf6211abc6_owner | | 1fe338d00c3741cea4ec79fd8b44e2f6 | bc32fb3eaa9c4ce287081bdf6211abc6_vdc_owner | +----------------------------------+------------------------------------------------+ \u5206\u522b\u67e5\u770b\u8fd9\u6837\u7ec4\uff0c\u53d1\u73b0\u4e0a\u8ff0\u4e09\u4e2agroup\u7684\u540d\u5b57\u90fd\u4ee5project\u7684id\u5f00\u5934\uff0c\u5206\u522b\u5bf9\u5e94service\u3001IE_VDC\uff0c\u731c\u6d4bprojectid_owner\u4e3avdc\u4e1a\u52a1\u5458\uff0cprojectid_vdc_owner\u4e3avdc\u7ba1\u7406\u5458 KEYSTONE=# select * from USER_GROUP_MEMBERSHIP; USER_ID | GROUP_ID ----------------------------------+---------------------------------- 6677cbe8892a4122aa3b125ad0bb8e6f | cc05d6e0aed141a6920100a61abbd93f 1637343727e14f88af2b788c95b25a14 | 3e3b95eaf2bf45efadd5f1585e4007d3 e7b25d819c20425c81b4233f4bfd7413 | 1fe338d00c3741cea4ec79fd8b44e2f6 (3 rows) CPS03:~ # openstack user list +----------------------------------+----------------------+ | ID | Name | +----------------------------------+----------------------+ | 49779c9693d5432ab1bd6dec811b0249 | keystone | | 5eb4514cfe6f418b92d600dcab3e6d74 | s3 | | c5411c98b37942e59e4816730f76ef45 | portal | | 5f5708fa4b314e40906d9943a470aa5d | fsp4fsm | | 12ce6b348f5e46ada1d8c5da9ed1cac7 | ironic | | 6ba6b0e12f0f48538363c799fad80bd1 | internal_cloud_admin | | cc70fc23d239436f9ee25f5f8e2838df | cps | | 1dfa112ae3a14a9da2706e3653fc1913 | neutron | | 4423f632fcbf4204b6d4d29726e3e4d9 | ceilometer | | 3c3eb1c4f4d248d584e09d639576577d | nova | | 6677cbe8892a4122aa3b125ad0bb8e6f | cloud_admin | | 18e79082ed9e4c6394de5bd8fdb887e3 | dc1_admin | | 366c0528205345cc9f6c477fdd35ca00 | cinder | | f5cb5c5da5764ed2ad362ffc64bc9a4e | heat | | 90aa6c0737964edc9b33528a4e786926 | stack_domain_admin | | b5f8e2ca774644418ff6b6ecf25610f8 | glance | | 8f5f846d712c4d4bae45bdb673a154fa | swift | | 23579ca4e06a49f396fe3c3fad1f951d | fsp4fm | | cd385e9f18c14e84bbc1367d666efaed | system_admin | | e7b25d819c20425c81b4233f4bfd7413 | vdc01_admin01 | | 1637343727e14f88af2b788c95b25a14 | vdc01_user01 | +----------------------------------+----------------------+ \u6839\u636euser\u4e0egroup\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u8bc1\u660e\u4e0a\u8ff0\u731c\u60f3 CPS03:~ # openstack role list +----------------------------------+-----------------+ | ID | Name | +----------------------------------+-----------------+ | 9ef560a9fe6240a6a6b0e67e6b6639c5 | admin | | e60ac8aed4be465d9b631888a2848eab | internal_admin | | cd0ee9c16a7f42d9988af0720503df5c | owner | | 825a819af90447b79df41ec302092461 | limited_owner | | 8032e7fbb37e46e286d204f2b64ef689 | vdc_owner | | 2ec4fd9c47024943a44054fb82555cf9 | heat_stack_user | | a82e9be7bd184479b4cdb823d950cada | nfv_owner | +----------------------------------+-----------------+ \u67e5\u770brole\uff0c\u4ecename\u540c\u6837\u8bc1\u660e CPS03:~ # openstack role assignment list --domain 3c91bd9abf314350b98bab6edc47aae1 +----------------------------------+------+----------------------------------+---------+----------------------------------+-----------+ | Role | User | Group | Project | Domain | Inherited | +----------------------------------+------+----------------------------------+---------+----------------------------------+-----------+ | 825a819af90447b79df41ec302092461 | | f6e2b4a6789048f0aa4e0684616483a9 | | 3c91bd9abf314350b98bab6edc47aae1 | False | | cd0ee9c16a7f42d9988af0720503df5c | | 3e3b95eaf2bf45efadd5f1585e4007d3 | | 3c91bd9abf314350b98bab6edc47aae1 | False | | 8032e7fbb37e46e286d204f2b64ef689 | | 1fe338d00c3741cea4ec79fd8b44e2f6 | | 3c91bd9abf314350b98bab6edc47aae1 | False | | 9ef560a9fe6240a6a6b0e67e6b6639c5 | | ae74d5c94afd45c1940fa61d4e5e1fc9 | | 3c91bd9abf314350b98bab6edc47aae1 | False | | 8032e7fbb37e46e286d204f2b64ef689 | | ae74d5c94afd45c1940fa61d4e5e1fc9 | | 3c91bd9abf314350b98bab6edc47aae1 | False | +----------------------------------+------+----------------------------------+---------+----------------------------------+-----------+","title":"FusionSphere Openstack R6.1 Organization vdc"},{"location":"Other/FusionSphere Openstack R6.1 Organization vdc/#fusionsphere-openstack-r61-organization-vdc","text":"CPS03:~ # openstack domain list +----------------------------------+-------------------+---------+-------------+ | ID | Name | Enabled | Description | +----------------------------------+-------------------+---------+-------------+ | 3e0d192baafc41c5a0ce86e67df77a08 | heat_stack_domain | True | | | default | Default | True | | | 3c91bd9abf314350b98bab6edc47aae1 | IE_ORG | True | | +----------------------------------+-------------------+---------+-------------+","title":"FusionSphere Openstack R6.1 Organization vdc"},{"location":"Other/FusionSphere Openstack R6.1 Organization vdc/#organizationdomainnameie_orgid3c91bd9abf314350b98bab6edc47aae1","text":"CPS03:~ # openstack project list +----------------------------------+----------------+ | ID | Name | +----------------------------------+----------------+ | d6975fe53cf2440e8db894d41ff53bdb | service | | bf9ad240ae474574b82d8eda1ed4c1ba | elb | | f98047b1124f471d8d4347ab7282250f | router | | f10e0e996c4641d6b4fd3e5fe3293911 | admin | | 3b3915ad4d644dec84c986891e8e3a6d | dc_test_dc1 | | bf9111ed98994c67a17f18d76c6378ba | dc_system_dc1 | | aa059c5f8218418aae9fc59ddee4e835 | dc_network_dc1 | | bc32fb3eaa9c4ce287081bdf6211abc6 | IE_VDC | +----------------------------------+----------------+","title":"\u67e5\u627e\u51fa\u4e00\u4e2a\u4e0eOrganization\u540c\u540d\u7684domain,name:IE_ORG,id:3c91bd9abf314350b98bab6edc47aae1"},{"location":"Other/FusionSphere Openstack R6.1 Organization vdc/#vdcprojectnameie_vdcidbc32fb3eaa9c4ce287081bdf6211abc6","text":"CPS03:~ # openstack role assignment list --project bc32fb3eaa9c4ce287081bdf6211abc6 +----------------------------------+------+----------------------------------+----------------------------------+--------+-----------+ | Role | User | Group | Project | Domain | Inherited | +----------------------------------+------+----------------------------------+----------------------------------+--------+-----------+ | 9ef560a9fe6240a6a6b0e67e6b6639c5 | | ae74d5c94afd45c1940fa61d4e5e1fc9 | bc32fb3eaa9c4ce287081bdf6211abc6 | | False | | cd0ee9c16a7f42d9988af0720503df5c | | 3e3b95eaf2bf45efadd5f1585e4007d3 | bc32fb3eaa9c4ce287081bdf6211abc6 | | False | | 8032e7fbb37e46e286d204f2b64ef689 | | ae74d5c94afd45c1940fa61d4e5e1fc9 | bc32fb3eaa9c4ce287081bdf6211abc6 | | False | | 8032e7fbb37e46e286d204f2b64ef689 | | 1fe338d00c3741cea4ec79fd8b44e2f6 | bc32fb3eaa9c4ce287081bdf6211abc6 | | False | +----------------------------------+------+----------------------------------+----------------------------------+--------+-----------+","title":"\u67e5\u627e\u51fa\u4e00\u4e2a\u4e0eVDC\u540c\u540d\u7684Project,name:IE_VDC,id:bc32fb3eaa9c4ce287081bdf6211abc6"},{"location":"Other/FusionSphere Openstack R6.1 Organization vdc/#projectgroupgroupae74d5c94afd45c1940fa61d4e5e1fc93e3b95eaf2bf45efadd5f1585e4007d31fe338d00c3741cea4ec79fd8b44e2f6","text":"CPS03:~ # openstack group list +----------------------------------+------------------------------------------------+ | ID | Name | +----------------------------------+------------------------------------------------+ | 5ec63d4c0e4947d6a55505579709be7f | orchestration_group | | 01036def928a46f792e5632fdf8b5875 | service_group | | cc05d6e0aed141a6920100a61abbd93f | f10e0e996c4641d6b4fd3e5fe3293911_admin | | ae74d5c94afd45c1940fa61d4e5e1fc9 | d6975fe53cf2440e8db894d41ff53bdb_admin | | f6e2b4a6789048f0aa4e0684616483a9 | d6975fe53cf2440e8db894d41ff53bdb_limited_owner | | 3e3b95eaf2bf45efadd5f1585e4007d3 | bc32fb3eaa9c4ce287081bdf6211abc6_owner | | 1fe338d00c3741cea4ec79fd8b44e2f6 | bc32fb3eaa9c4ce287081bdf6211abc6_vdc_owner | +----------------------------------+------------------------------------------------+","title":"\u67e5\u770bproject\u7684\u89d2\u8272\u5206\u914d\uff0c\u53d1\u73b0\u90fd\u662f\u4ee5group\u7684\u65b9\u5f0f\u8fdb\u884c\u6743\u9650\u5206\u914d\uff0cgroup\u5206\u522b\u6709\uff1aae74d5c94afd45c1940fa61d4e5e1fc9\u30013e3b95eaf2bf45efadd5f1585e4007d3\u30011fe338d00c3741cea4ec79fd8b44e2f6"},{"location":"Other/FusionSphere Openstack R6.1 Organization vdc/#groupprojectidserviceie_vdcprojectid_ownervdcprojectid_vdc_ownervdc","text":"KEYSTONE=# select * from USER_GROUP_MEMBERSHIP; USER_ID | GROUP_ID ----------------------------------+---------------------------------- 6677cbe8892a4122aa3b125ad0bb8e6f | cc05d6e0aed141a6920100a61abbd93f 1637343727e14f88af2b788c95b25a14 | 3e3b95eaf2bf45efadd5f1585e4007d3 e7b25d819c20425c81b4233f4bfd7413 | 1fe338d00c3741cea4ec79fd8b44e2f6 (3 rows) CPS03:~ # openstack user list +----------------------------------+----------------------+ | ID | Name | +----------------------------------+----------------------+ | 49779c9693d5432ab1bd6dec811b0249 | keystone | | 5eb4514cfe6f418b92d600dcab3e6d74 | s3 | | c5411c98b37942e59e4816730f76ef45 | portal | | 5f5708fa4b314e40906d9943a470aa5d | fsp4fsm | | 12ce6b348f5e46ada1d8c5da9ed1cac7 | ironic | | 6ba6b0e12f0f48538363c799fad80bd1 | internal_cloud_admin | | cc70fc23d239436f9ee25f5f8e2838df | cps | | 1dfa112ae3a14a9da2706e3653fc1913 | neutron | | 4423f632fcbf4204b6d4d29726e3e4d9 | ceilometer | | 3c3eb1c4f4d248d584e09d639576577d | nova | | 6677cbe8892a4122aa3b125ad0bb8e6f | cloud_admin | | 18e79082ed9e4c6394de5bd8fdb887e3 | dc1_admin | | 366c0528205345cc9f6c477fdd35ca00 | cinder | | f5cb5c5da5764ed2ad362ffc64bc9a4e | heat | | 90aa6c0737964edc9b33528a4e786926 | stack_domain_admin | | b5f8e2ca774644418ff6b6ecf25610f8 | glance | | 8f5f846d712c4d4bae45bdb673a154fa | swift | | 23579ca4e06a49f396fe3c3fad1f951d | fsp4fm | | cd385e9f18c14e84bbc1367d666efaed | system_admin | | e7b25d819c20425c81b4233f4bfd7413 | vdc01_admin01 | | 1637343727e14f88af2b788c95b25a14 | vdc01_user01 | +----------------------------------+----------------------+","title":"\u5206\u522b\u67e5\u770b\u8fd9\u6837\u7ec4\uff0c\u53d1\u73b0\u4e0a\u8ff0\u4e09\u4e2agroup\u7684\u540d\u5b57\u90fd\u4ee5project\u7684id\u5f00\u5934\uff0c\u5206\u522b\u5bf9\u5e94service\u3001IE_VDC\uff0c\u731c\u6d4bprojectid_owner\u4e3avdc\u4e1a\u52a1\u5458\uff0cprojectid_vdc_owner\u4e3avdc\u7ba1\u7406\u5458"},{"location":"Other/FusionSphere Openstack R6.1 Organization vdc/#usergroup","text":"CPS03:~ # openstack role list +----------------------------------+-----------------+ | ID | Name | +----------------------------------+-----------------+ | 9ef560a9fe6240a6a6b0e67e6b6639c5 | admin | | e60ac8aed4be465d9b631888a2848eab | internal_admin | | cd0ee9c16a7f42d9988af0720503df5c | owner | | 825a819af90447b79df41ec302092461 | limited_owner | | 8032e7fbb37e46e286d204f2b64ef689 | vdc_owner | | 2ec4fd9c47024943a44054fb82555cf9 | heat_stack_user | | a82e9be7bd184479b4cdb823d950cada | nfv_owner | +----------------------------------+-----------------+","title":"\u6839\u636euser\u4e0egroup\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u8bc1\u660e\u4e0a\u8ff0\u731c\u60f3"},{"location":"Other/FusionSphere Openstack R6.1 Organization vdc/#rolename","text":"CPS03:~ # openstack role assignment list --domain 3c91bd9abf314350b98bab6edc47aae1 +----------------------------------+------+----------------------------------+---------+----------------------------------+-----------+ | Role | User | Group | Project | Domain | Inherited | +----------------------------------+------+----------------------------------+---------+----------------------------------+-----------+ | 825a819af90447b79df41ec302092461 | | f6e2b4a6789048f0aa4e0684616483a9 | | 3c91bd9abf314350b98bab6edc47aae1 | False | | cd0ee9c16a7f42d9988af0720503df5c | | 3e3b95eaf2bf45efadd5f1585e4007d3 | | 3c91bd9abf314350b98bab6edc47aae1 | False | | 8032e7fbb37e46e286d204f2b64ef689 | | 1fe338d00c3741cea4ec79fd8b44e2f6 | | 3c91bd9abf314350b98bab6edc47aae1 | False | | 9ef560a9fe6240a6a6b0e67e6b6639c5 | | ae74d5c94afd45c1940fa61d4e5e1fc9 | | 3c91bd9abf314350b98bab6edc47aae1 | False | | 8032e7fbb37e46e286d204f2b64ef689 | | ae74d5c94afd45c1940fa61d4e5e1fc9 | | 3c91bd9abf314350b98bab6edc47aae1 | False | +----------------------------------+------+----------------------------------+---------+----------------------------------+-----------+","title":"\u67e5\u770brole\uff0c\u4ecename\u540c\u6837\u8bc1\u660e"},{"location":"Other/Keystone_Token/","text":"Keystone_Token \u5173\u952e\u70b9 \u4f5c\u4e3a\u4f7f\u7528API Endpoint\u7684Client \uff0c\u5176\u6570\u91cf\u3001\u7c7b\u578b\u90fd\u662f\u590d\u6742\u7684\uff0c\u56e0\u4e3a\u9700\u8981\u5bf9 Client\u7684\u8eab\u4efd\u8fdb\u884c\u9a8c\u8bc1 \u660e\u6587\u4f20\u8f93\u5bc6\u7801\u4e0d\u5b8c\u5168 Token \u4f5c\u4e3a\u4e34\u65f6\u51ed\u8bc1\uff0c\u53ef\u4ee5\u589e\u52a0\u8ba4\u8bc1\u8fc7\u7a0b\u4e2d\u7684\u5b89\u5168\u6027 \u9700\u8981\u9a8c\u8bc1 Token \u7684\u5408\u6cd5\u6027 API \u9700\u8981\u4ec0\u4e48\u4e1c\u897f role Project expire date Client \u9700\u8981\u4ec0\u4e48\u4e1c\u897f Project Catalog \u56db\u79cd\u7c7b\u578b UUID tokens Fernet tokens PKI tokens PKIZ tokens UUID tokens \u57fa\u4e8e Client \u63d0\u4f9b\u7684\u7528\u6237\u540d/\u5bc6\u7801\u662f\u6b63\u786e\u7684\uff1a keystone: \u751f\u6210 UUID token \u5c06 UUID token \u5b58\u50a8\u5728\u5176\u540e\u7aef \u5c06 UUID token \u7684\u526f\u672c\u53d1\u9001\u56de\u5ba2\u6237\u7aef \u5ba2\u6237\u7aef\u5c06\u7f13\u5b58 token \u7136\u540e\uff0cUUID token \u5c06\u968f\u5ba2\u6237\u7aef\u7684\u6bcf\u4e2a API \u8c03\u7528\u4e00\u8d77\u4f20\u9012 \u5728\u6536\u5230\u6bcf\u6b21\u7528\u6237\u7684\u8bf7\u6c42\u540e\uff0cAPI Endpoint \u4f1a\u5c06\u6b64 UUID token \u53d1\u9001\u5230 keystone \u8fdb\u884c\u9a8c\u8bc1 keystone \u5c06\u6536\u5230\u7684 UUID Token \u4e0e\u5b58\u653e\u5728\u540e\u7aef\u7684\u5339\u914d(\u68c0\u67e5 UUID \u5b57\u7b26\u4e32\uff0c\u5230\u671f\u65e5\u671f) keystone \u5c06\u5411 API \u7aef\u70b9\u8fd4\u56de\u201c\u6210\u529f\u201d\u6216\u201c\u5931\u8d25\u201d\u6d88\u606f PKI Token \u6bcf\u4e2aAPI Endpoint \u90fd\u4f1a\u4fdd\u7559 keystone \u7684\u526f\u672c\uff1a Signing certificate Revocation list CA certificate \u751f\u6210CMS Token \uff0c\u4f7f\u7528\u5982\u4e0b\u6570\u636e\uff1a Service catalog User roles Metadata \u751f\u6210\u4ee3\u7801\uff1a def _get_token_id(self, token_data): try: token_json = jsonutils.dumps(token_data, cls=utils.PKIEncoder) token_id = str(cms.cms_sign_token(token_json, CONF.signing.certfile, CONF.signing.keyfile)) return token_id \u5185\u5bb9\u5982\u4e0b\uff1a { \"token\": { \"methods\": [ \"password\" ], \"roles\": [{\"id\": \"5642056d336b4c2a894882425ce22a86\", \"name\": \"admin\"}], \"expires_at\": \"2015-12-25T09:57:28.404275Z\", \"project\": { \"domain\": { \"id\": \"default\", \"name\": \"Default\"}, \"id\": \"144d8a99a42447379ac37f78bf0ef608\", \"name\": \"admin\"}, \"catalog\": [ { \"endpoints\": [ { \"region_id\": \"RegionOne\", \"url\": \"http://controller:5000/v2.0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"3837de623efd4af799e050d4d8d1f307\" }, ...... ]}], \"extras\": {}, \"user\": { \"domain\": {\"id\": \"default\", \"name\": \"Default\"}, \"id\": \"1552d60a042e4a2caa07ea7ae6aa2f09\", \"name\": \"admin\"}, \"audit_ids\": [\"ZCvZW2TtTgiaAsVA8qmc3A\"], \"issued_at\": \"2015-12-25T08:57:28.404304Z\" } } token_data \u7ecf cms.cms_sign_token \u7b7e\u540d\u751f\u6210\u7684 token_id \u5982\u4e0b\uff0c\u5171 1932 Byte\uff1a MIIKoZIhvcNAQcCoIIFljCCBZICAQExDTALBglghkgBZQMEAgEwggPzBgkqhkiG9w0B ...... rhr0acV3bMKzmqvViHf-fPVnLDMJajOWSuhimqfLZHRdr+ck0WVQosB6+M6iAvrEF7v \u6ce8\u610f\u4e8b\u9879\uff1a \u4e0e\u6570\u5b57\u8bc1\u4e66\u7684\u7b7e\u540d\u65b9\u5f0f\u5b58\u5728\u5dee\u5f02\uff0c\u76f4\u63a5\u5c06token_data\u7ecf\u8fc7CMS\u52a0\u5bc6\u6210token\u3002API Endpoint\u6536\u5230Client\u53d1\u9001\u7684token\u540e\uff0c\u76f4\u63a5\u4f7f\u7528CA Certificate\u5185\u7684\u516c\u94a5\u89e3\u5bc6\u3002 Token\u9a8c\u8bc1\u548c\u5230\u671f PKI Token\u4f7fOpenstack API Endpoint\u80fd\u591f\u901a\u8fc7\u68c0\u67e5Keystone\u7684\u7b7e\u540d\u8fdb\u884c\u4ee4\u724c\u6709\u6548\u6027\u548c\u79bb\u7ebf\u9a8c\u8bc1 \u4ee5\u4e0b\u4e09\u6837\u4e1c\u897f\u90fd\u5e94\u8be5\u88ab\u9a8c\u8bc1\uff1a Token \u7684\u7b7e\u540d Token \u7684\u6709\u6548\u671f Token \u662f\u5426\u88ab\u5220\u9664\uff08\u64a4\u9500\uff09 \u88ab\u5220\u9664\u7684token\u88ab\u5f3a\u5236\u653e\u5165Keystone CA\u5185\u7684\u64a4\u9500\u5217\u8868\u4e2d\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u5217\u8868\u88abAPI Endpoint \u6bcf\u79d2\u4ece\u4e0b\u5217url\u4e2d\u66f4\u65b0\uff1a curl http://[KEYSTONE ip]:3537/V2.0/tokens/revoked \u5217\u8868\u7684\u5f62\u5f0f\u662f\u4e00\u4e2a\u7b80\u5355\u7684json\u6587\u4ef6\uff1a { \"revoked\": [ { \"expires\": \"2013-05-27T08:31:37Z\", \"id\": \"aef56cc3d1c9192b0257fba1a420fc37\" } \u2026 ] } CA\u8bc1\u4e66\u53ca\u6570\u5b57\u7b7e\u540d curl http://[KEYSTONE IP]:35357/v2.0/certificates/signing curl http://[KEYSTONE IP]:35357/v2.0/certificates/ca PKIZ Token PKIZ \u5728 PKI \u7684\u57fa\u7840\u4e0a\u505a\u4e86\u538b\u7f29\u5904\u7406\uff0c\u4f46\u662f\u538b\u7f29\u7684\u6548\u679c\u6781\u5176\u6709\u9650\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u538b\u7f29\u540e\u7684\u5927\u5c0f\u4e3a PKI token \u7684 90% \u5de6\u53f3\uff0c\u6240\u4ee5 PKIZ \u4e0d\u80fd\u53cb\u597d\u7684\u89e3\u51b3 token size \u592a\u5927\u95ee\u9898\u3002 Fernet Token Reference: Understanding OpenStack Authentication: Keystone PKI \u7406\u89e3 Keystone \u7684\u56db\u79cd Token","title":"Keystone_Token"},{"location":"Other/Keystone_Token/#keystone_token","text":"","title":"Keystone_Token"},{"location":"Other/Keystone_Token/#_1","text":"\u4f5c\u4e3a\u4f7f\u7528API Endpoint\u7684Client \uff0c\u5176\u6570\u91cf\u3001\u7c7b\u578b\u90fd\u662f\u590d\u6742\u7684\uff0c\u56e0\u4e3a\u9700\u8981\u5bf9 Client\u7684\u8eab\u4efd\u8fdb\u884c\u9a8c\u8bc1 \u660e\u6587\u4f20\u8f93\u5bc6\u7801\u4e0d\u5b8c\u5168 Token \u4f5c\u4e3a\u4e34\u65f6\u51ed\u8bc1\uff0c\u53ef\u4ee5\u589e\u52a0\u8ba4\u8bc1\u8fc7\u7a0b\u4e2d\u7684\u5b89\u5168\u6027 \u9700\u8981\u9a8c\u8bc1 Token \u7684\u5408\u6cd5\u6027 API \u9700\u8981\u4ec0\u4e48\u4e1c\u897f role Project expire date Client \u9700\u8981\u4ec0\u4e48\u4e1c\u897f Project Catalog","title":"\u5173\u952e\u70b9"},{"location":"Other/Keystone_Token/#_2","text":"UUID tokens Fernet tokens PKI tokens PKIZ tokens","title":"\u56db\u79cd\u7c7b\u578b"},{"location":"Other/Keystone_Token/#uuid-tokens","text":"\u57fa\u4e8e Client \u63d0\u4f9b\u7684\u7528\u6237\u540d/\u5bc6\u7801\u662f\u6b63\u786e\u7684\uff1a keystone: \u751f\u6210 UUID token \u5c06 UUID token \u5b58\u50a8\u5728\u5176\u540e\u7aef \u5c06 UUID token \u7684\u526f\u672c\u53d1\u9001\u56de\u5ba2\u6237\u7aef \u5ba2\u6237\u7aef\u5c06\u7f13\u5b58 token \u7136\u540e\uff0cUUID token \u5c06\u968f\u5ba2\u6237\u7aef\u7684\u6bcf\u4e2a API \u8c03\u7528\u4e00\u8d77\u4f20\u9012 \u5728\u6536\u5230\u6bcf\u6b21\u7528\u6237\u7684\u8bf7\u6c42\u540e\uff0cAPI Endpoint \u4f1a\u5c06\u6b64 UUID token \u53d1\u9001\u5230 keystone \u8fdb\u884c\u9a8c\u8bc1 keystone \u5c06\u6536\u5230\u7684 UUID Token \u4e0e\u5b58\u653e\u5728\u540e\u7aef\u7684\u5339\u914d(\u68c0\u67e5 UUID \u5b57\u7b26\u4e32\uff0c\u5230\u671f\u65e5\u671f) keystone \u5c06\u5411 API \u7aef\u70b9\u8fd4\u56de\u201c\u6210\u529f\u201d\u6216\u201c\u5931\u8d25\u201d\u6d88\u606f","title":"UUID tokens"},{"location":"Other/Keystone_Token/#pki-token","text":"","title":"PKI Token"},{"location":"Other/Keystone_Token/#api-endpoint-keystone","text":"Signing certificate Revocation list CA certificate","title":"\u6bcf\u4e2aAPI Endpoint \u90fd\u4f1a\u4fdd\u7559 keystone \u7684\u526f\u672c\uff1a"},{"location":"Other/Keystone_Token/#cms-token","text":"Service catalog User roles Metadata \u751f\u6210\u4ee3\u7801\uff1a def _get_token_id(self, token_data): try: token_json = jsonutils.dumps(token_data, cls=utils.PKIEncoder) token_id = str(cms.cms_sign_token(token_json, CONF.signing.certfile, CONF.signing.keyfile)) return token_id \u5185\u5bb9\u5982\u4e0b\uff1a { \"token\": { \"methods\": [ \"password\" ], \"roles\": [{\"id\": \"5642056d336b4c2a894882425ce22a86\", \"name\": \"admin\"}], \"expires_at\": \"2015-12-25T09:57:28.404275Z\", \"project\": { \"domain\": { \"id\": \"default\", \"name\": \"Default\"}, \"id\": \"144d8a99a42447379ac37f78bf0ef608\", \"name\": \"admin\"}, \"catalog\": [ { \"endpoints\": [ { \"region_id\": \"RegionOne\", \"url\": \"http://controller:5000/v2.0\", \"region\": \"RegionOne\", \"interface\": \"public\", \"id\": \"3837de623efd4af799e050d4d8d1f307\" }, ...... ]}], \"extras\": {}, \"user\": { \"domain\": {\"id\": \"default\", \"name\": \"Default\"}, \"id\": \"1552d60a042e4a2caa07ea7ae6aa2f09\", \"name\": \"admin\"}, \"audit_ids\": [\"ZCvZW2TtTgiaAsVA8qmc3A\"], \"issued_at\": \"2015-12-25T08:57:28.404304Z\" } } token_data \u7ecf cms.cms_sign_token \u7b7e\u540d\u751f\u6210\u7684 token_id \u5982\u4e0b\uff0c\u5171 1932 Byte\uff1a MIIKoZIhvcNAQcCoIIFljCCBZICAQExDTALBglghkgBZQMEAgEwggPzBgkqhkiG9w0B ...... rhr0acV3bMKzmqvViHf-fPVnLDMJajOWSuhimqfLZHRdr+ck0WVQosB6+M6iAvrEF7v","title":"\u751f\u6210CMS Token \uff0c\u4f7f\u7528\u5982\u4e0b\u6570\u636e\uff1a"},{"location":"Other/Keystone_Token/#_3","text":"\u4e0e\u6570\u5b57\u8bc1\u4e66\u7684\u7b7e\u540d\u65b9\u5f0f\u5b58\u5728\u5dee\u5f02\uff0c\u76f4\u63a5\u5c06token_data\u7ecf\u8fc7CMS\u52a0\u5bc6\u6210token\u3002API Endpoint\u6536\u5230Client\u53d1\u9001\u7684token\u540e\uff0c\u76f4\u63a5\u4f7f\u7528CA Certificate\u5185\u7684\u516c\u94a5\u89e3\u5bc6\u3002","title":"\u6ce8\u610f\u4e8b\u9879\uff1a"},{"location":"Other/Keystone_Token/#token","text":"PKI Token\u4f7fOpenstack API Endpoint\u80fd\u591f\u901a\u8fc7\u68c0\u67e5Keystone\u7684\u7b7e\u540d\u8fdb\u884c\u4ee4\u724c\u6709\u6548\u6027\u548c\u79bb\u7ebf\u9a8c\u8bc1 \u4ee5\u4e0b\u4e09\u6837\u4e1c\u897f\u90fd\u5e94\u8be5\u88ab\u9a8c\u8bc1\uff1a Token \u7684\u7b7e\u540d Token \u7684\u6709\u6548\u671f Token \u662f\u5426\u88ab\u5220\u9664\uff08\u64a4\u9500\uff09 \u88ab\u5220\u9664\u7684token\u88ab\u5f3a\u5236\u653e\u5165Keystone CA\u5185\u7684\u64a4\u9500\u5217\u8868\u4e2d\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u5217\u8868\u88abAPI Endpoint \u6bcf\u79d2\u4ece\u4e0b\u5217url\u4e2d\u66f4\u65b0\uff1a curl http://[KEYSTONE ip]:3537/V2.0/tokens/revoked \u5217\u8868\u7684\u5f62\u5f0f\u662f\u4e00\u4e2a\u7b80\u5355\u7684json\u6587\u4ef6\uff1a { \"revoked\": [ { \"expires\": \"2013-05-27T08:31:37Z\", \"id\": \"aef56cc3d1c9192b0257fba1a420fc37\" } \u2026 ] }","title":"Token\u9a8c\u8bc1\u548c\u5230\u671f"},{"location":"Other/Keystone_Token/#ca","text":"curl http://[KEYSTONE IP]:35357/v2.0/certificates/signing curl http://[KEYSTONE IP]:35357/v2.0/certificates/ca","title":"CA\u8bc1\u4e66\u53ca\u6570\u5b57\u7b7e\u540d"},{"location":"Other/Keystone_Token/#pkiz-token","text":"PKIZ \u5728 PKI \u7684\u57fa\u7840\u4e0a\u505a\u4e86\u538b\u7f29\u5904\u7406\uff0c\u4f46\u662f\u538b\u7f29\u7684\u6548\u679c\u6781\u5176\u6709\u9650\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u538b\u7f29\u540e\u7684\u5927\u5c0f\u4e3a PKI token \u7684 90% \u5de6\u53f3\uff0c\u6240\u4ee5 PKIZ \u4e0d\u80fd\u53cb\u597d\u7684\u89e3\u51b3 token size \u592a\u5927\u95ee\u9898\u3002","title":"PKIZ Token"},{"location":"Other/Keystone_Token/#fernet-token","text":"Reference: Understanding OpenStack Authentication: Keystone PKI \u7406\u89e3 Keystone \u7684\u56db\u79cd Token","title":"Fernet Token"},{"location":"Other/Linux_NetworkDevice/","text":"\u5173\u4e8e Linux \u7f51\u7edc\u8bbe\u5907\u7684\u603b\u7ed3 \u57fa\u4e8e\u5b9e\u73b0\u7684\u5047\u8bbe \u6bcf\u4e2a\u7f51\u7edc\u8bbe\u5907\u90fd\u6709\u6536\u3001\u53d1\u4e24\u6761\u961f\u5217\uff0c\u4e14\u5728\u6b64\u5c06\u7f51\u7edc\u8bbe\u5907\u79f0\u4e3a\u201c\u88ab\u64cd\u4f5c\u8005\u201d\u3002\u5f53\u64cd\u4f5c\u8005\u5bf9\u6536\u961f\u5217 write() \u65f6\uff0c\u5c31\u662f\u5e0c\u671b\u8bbe\u5907\u6536\u53d6\u4fe1\u606f\uff0c\u5f53\u64cd\u4f5c\u8005\u5bf9\u53d1\u961f\u5217 write() \u65f6\uff0c\u5c31\u662f\u5e0c\u671b\u8be5\u8bbe\u5907\u8f6c\u53d1\u4fe1\u606f\u3002 \u5df2\u786e\u5b9a \u5927\u591a\u6570\u8bbe\u5907\u4e0d\u80fd\u88ab\u8fd0\u884c\u5728\u7528\u6237\u6001\u7684\u7a0b\u5e8f\u76f4\u63a5\u64cd\u4f5c\uff0c\u800c\u662f\u901a\u8fc7\u5de5\u4f5c\u5728\u5185\u6838\u6001\u7684Linux\u5185\u6838\u64cd\u4f5c\u3002 TUN/TAP \u8bbe\u5907\u662f\u4e00\u79cd\u8ba9\u7528\u6237\u6001\u7a0b\u5e8f\u5411\u5185\u6838\u534f\u8bae\u6808\u6ce8\u5165\u6570\u636e\u7684\u8bbe\u5907\uff0c\u4e00\u4e2a\u5de5\u4f5c\u5728\u4e09\u5c42\uff0c\u4e00\u4e2a\u5de5\u4f5c\u5728\u4e8c\u5c42\u3002 VETH\u8bbe\u5907\u7684\u4f5c\u7528\u662f\u53cd\u8f6c\u901a\u8baf\u6570\u636e\u65b9\u5411\uff0c\u9700\u8981\u53d1\u9001\u7684\u6570\u636e\u4f1a\u88ab\u8f6c\u6362\u6210\u9700\u8981\u6536\u5230\u7684\u6570\u636e\u91cd\u65b0\u9001\u5165\u5185\u6838\u7f51\u7edc\u5c42\u8fdb\u884c\u5904\u7406\uff0c\u4ece\u800c\u95f4\u63a5\u7684\u5b8c\u6210\u6570\u636e\u7684\u6ce8\u5165\uff1b\u5373\u5c06\u53d1\u52a8\u4f5c\u8f6c\u6362\u6210\u6536\u52a8\u4f5c\uff0c\u800c\u4e0d\u4f1a\u5c06\u6536\u52a8\u4f5c\u8f6c\u6362\u6210\u53d1\u52a8\u4f5c\u3002 Linux \u91cc 802.1Q VLAN \u8bbe\u5907\u4ee5\u6bcd\u5b50\u5173\u7cfb\u6210\u5bf9\u51fa\u73b0\uff0c\u6bcd\u8bbe\u5907\u76f8\u5f53\u4e8e\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u4ea4\u6362\u673a Trunk \u53e3\uff0c\u7528\u4e8e\u8fde\u63a5\u4e0a\u7ea7\u7f51\u7edc\uff0c\u5b50\u8bbe\u5907\u76f8\u5f53\u4e8e\u666e\u901a\u63a5\u53e3\uff0c\u7528\u4e8e\u8fde\u63a5\u4e0b\u7ea7\u7f51\u7edc\u3002 \u6bcd\u8bbe\u5907\u53ef\u4ee5\u662f\u7269\u7406\u8bbe\u5907\uff0c\u4e5f\u53ef\u4ee5\u662f\u903b\u8f91\u8bbe\u5907 \u4e24\u8005\u662f\u4e00\u5bf9\u591a\u7684\u5173\u7cfb \u5f53\u4e00\u4e2a\u5b50\u8bbe\u5907\u6709\u4e00\u6570\u636e\u5305\u66f4\u8981\u53d1\u9001\u65f6\uff0c\u6570\u636e\u5c06\u88ab\u52a0\u5165VLAN Tag \u7136\u540e\u4ece\u6bcd\u8bbe\u5907\u53d1\u9001\u51fa\u53bb \u5f53\u5b50\u8bbe\u5907\u7684\u6bcd\u8bbe\u5907\u6536\u5230\u4e00\u6570\u636e\u5305\u65f6\uff0c\u5b83\u5c06\u4f1a\u5206\u6790\u5176\u4e2d\u7684VLAN Tag\uff0c\u5982\u679c\u6709\u5bf9\u5e94\u7684\u5b50\u8bbe\u5907\u5b58\u5728\uff0c\u5219\u628a\u6570\u636e\u8f6c\u53d1\u5230\u90a3\u4e2a\u5b50\u8bbe\u5907\u4e0a\u5e76\u6839\u636e\u8bbe\u7f6e\u79fb\u9664 VLAN Tag\uff0c\u5426\u5219\u4e22\u5f03\u8be5\u6570\u636e\u3002 \u5b50\u8bbe\u5907\u7684 reorder_hdr \u7684\u503c\u4e3a 0 \u65f6\u4fdd\u7559tag\uff0c\u4e3a 1 \u65f6\u4e0d\u4fdd\u7559 \u5b50\u8bbe\u5907\u6536\u5230\u7684\u6570\u636e\u4e0d\u4f1a\u8fdb\u5165\u6bcd\u8bbe\u5907 \u6bcd\u8bbe\u5907\u8bf7\u6c42\u53d1\u51fa\u7684\u6570\u636e\u4e0d\u4f1a\u88ab\u8f6c\u5230\u5b50\u8bbe\u5907\u4e0a \u6bcd\u5b50 VLAN \u8bbe\u5907\u62e5\u6709\u76f8\u540c\u7684 MAC \u5730\u5740 \u4e00\u4e2a VLAN \u6bcd\u8bbe\u5907\u4e0d\u53ef\u80fd\u62e5\u6709\u4e24\u4e2a\u76f8\u540c ID \u7684VLAN \u5b50\u8bbe\u5907\uff0c\u56e0\u6b64\u6ca1\u6709\u5b9e\u73b0\u4ea4\u6362\u529f\u80fd \u53ef\u4ee5\u5c06\u7f51\u7edc\u8bbe\u5907 attach \u5230 bridge \u4e0a\uff0c\u5f53\u8fd9\u4e2a\u7f51\u7edc\u8bbe\u5907\u6536\u5230\u6570\u636e\u5305\u91cc\uff0c\u5c31\u4f1a\u4ee5\u6536\u7684\u65b9\u5f0f\u53d1\u9001\u7ed9 bridge\uff0cbridge \u6536\u5230\u540e\u5c31\u4f1a\u4ee5\u4ea4\u6362\u673a\u7684\u5de5\u4f5c\u65b9\u5f0f\u5bf9\u6570\u636e\u5305\u8fdb\u884c\u8f6c\u53d1\u3002(\u4e5f\u53ea\u6709\u6536\u7684\u65f6\u5019\u624d\u4f1a\u89e6\u53d1) Attach \u5230 bridge \u4e0a\u7684\u7f51\u7edc\u8bbe\u5907\u7684 IP \u5730\u5740\u5c06\u5931\u6548 \u5728 Linux \u4e2d\uff0c\u6bcf\u4e2a\u7f51\u7edc\u8bbe\u5907\u90fd\u62e5\u6709 MAC \u5730\u5740\uff0c\u5e76\u4e14\u53ef\u914d\u7f6e IP \u5730\u5740 Other socket\u64cd\u4f5c\u6307\u4ee4\u683c\u5f0f\uff1a(\u5199|\u8bfb\uff0c\u53d1|\u6536|\uff0c\u6570\u636e) file\u64cd\u4f5c\u6307\u4ee4\uff1awrite/read \u5bf9TAP\u8bbe\u5907write\uff0c\u5185\u6838\u4f1a\u8ba4\u4e3atap\u8bbe\u5907\u662f\u6536 Reference Linux \u4e0a\u7684\u57fa\u7840\u7f51\u7edc\u8bbe\u5907\u8be6\u89e3","title":"Linux NetworkDevice"},{"location":"Other/Linux_NetworkDevice/#linux","text":"","title":"\u5173\u4e8e Linux \u7f51\u7edc\u8bbe\u5907\u7684\u603b\u7ed3"},{"location":"Other/Linux_NetworkDevice/#_1","text":"\u6bcf\u4e2a\u7f51\u7edc\u8bbe\u5907\u90fd\u6709\u6536\u3001\u53d1\u4e24\u6761\u961f\u5217\uff0c\u4e14\u5728\u6b64\u5c06\u7f51\u7edc\u8bbe\u5907\u79f0\u4e3a\u201c\u88ab\u64cd\u4f5c\u8005\u201d\u3002\u5f53\u64cd\u4f5c\u8005\u5bf9\u6536\u961f\u5217 write() \u65f6\uff0c\u5c31\u662f\u5e0c\u671b\u8bbe\u5907\u6536\u53d6\u4fe1\u606f\uff0c\u5f53\u64cd\u4f5c\u8005\u5bf9\u53d1\u961f\u5217 write() \u65f6\uff0c\u5c31\u662f\u5e0c\u671b\u8be5\u8bbe\u5907\u8f6c\u53d1\u4fe1\u606f\u3002","title":"\u57fa\u4e8e\u5b9e\u73b0\u7684\u5047\u8bbe"},{"location":"Other/Linux_NetworkDevice/#_2","text":"\u5927\u591a\u6570\u8bbe\u5907\u4e0d\u80fd\u88ab\u8fd0\u884c\u5728\u7528\u6237\u6001\u7684\u7a0b\u5e8f\u76f4\u63a5\u64cd\u4f5c\uff0c\u800c\u662f\u901a\u8fc7\u5de5\u4f5c\u5728\u5185\u6838\u6001\u7684Linux\u5185\u6838\u64cd\u4f5c\u3002 TUN/TAP \u8bbe\u5907\u662f\u4e00\u79cd\u8ba9\u7528\u6237\u6001\u7a0b\u5e8f\u5411\u5185\u6838\u534f\u8bae\u6808\u6ce8\u5165\u6570\u636e\u7684\u8bbe\u5907\uff0c\u4e00\u4e2a\u5de5\u4f5c\u5728\u4e09\u5c42\uff0c\u4e00\u4e2a\u5de5\u4f5c\u5728\u4e8c\u5c42\u3002 VETH\u8bbe\u5907\u7684\u4f5c\u7528\u662f\u53cd\u8f6c\u901a\u8baf\u6570\u636e\u65b9\u5411\uff0c\u9700\u8981\u53d1\u9001\u7684\u6570\u636e\u4f1a\u88ab\u8f6c\u6362\u6210\u9700\u8981\u6536\u5230\u7684\u6570\u636e\u91cd\u65b0\u9001\u5165\u5185\u6838\u7f51\u7edc\u5c42\u8fdb\u884c\u5904\u7406\uff0c\u4ece\u800c\u95f4\u63a5\u7684\u5b8c\u6210\u6570\u636e\u7684\u6ce8\u5165\uff1b\u5373\u5c06\u53d1\u52a8\u4f5c\u8f6c\u6362\u6210\u6536\u52a8\u4f5c\uff0c\u800c\u4e0d\u4f1a\u5c06\u6536\u52a8\u4f5c\u8f6c\u6362\u6210\u53d1\u52a8\u4f5c\u3002 Linux \u91cc 802.1Q VLAN \u8bbe\u5907\u4ee5\u6bcd\u5b50\u5173\u7cfb\u6210\u5bf9\u51fa\u73b0\uff0c\u6bcd\u8bbe\u5907\u76f8\u5f53\u4e8e\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u4ea4\u6362\u673a Trunk \u53e3\uff0c\u7528\u4e8e\u8fde\u63a5\u4e0a\u7ea7\u7f51\u7edc\uff0c\u5b50\u8bbe\u5907\u76f8\u5f53\u4e8e\u666e\u901a\u63a5\u53e3\uff0c\u7528\u4e8e\u8fde\u63a5\u4e0b\u7ea7\u7f51\u7edc\u3002 \u6bcd\u8bbe\u5907\u53ef\u4ee5\u662f\u7269\u7406\u8bbe\u5907\uff0c\u4e5f\u53ef\u4ee5\u662f\u903b\u8f91\u8bbe\u5907 \u4e24\u8005\u662f\u4e00\u5bf9\u591a\u7684\u5173\u7cfb \u5f53\u4e00\u4e2a\u5b50\u8bbe\u5907\u6709\u4e00\u6570\u636e\u5305\u66f4\u8981\u53d1\u9001\u65f6\uff0c\u6570\u636e\u5c06\u88ab\u52a0\u5165VLAN Tag \u7136\u540e\u4ece\u6bcd\u8bbe\u5907\u53d1\u9001\u51fa\u53bb \u5f53\u5b50\u8bbe\u5907\u7684\u6bcd\u8bbe\u5907\u6536\u5230\u4e00\u6570\u636e\u5305\u65f6\uff0c\u5b83\u5c06\u4f1a\u5206\u6790\u5176\u4e2d\u7684VLAN Tag\uff0c\u5982\u679c\u6709\u5bf9\u5e94\u7684\u5b50\u8bbe\u5907\u5b58\u5728\uff0c\u5219\u628a\u6570\u636e\u8f6c\u53d1\u5230\u90a3\u4e2a\u5b50\u8bbe\u5907\u4e0a\u5e76\u6839\u636e\u8bbe\u7f6e\u79fb\u9664 VLAN Tag\uff0c\u5426\u5219\u4e22\u5f03\u8be5\u6570\u636e\u3002 \u5b50\u8bbe\u5907\u7684 reorder_hdr \u7684\u503c\u4e3a 0 \u65f6\u4fdd\u7559tag\uff0c\u4e3a 1 \u65f6\u4e0d\u4fdd\u7559 \u5b50\u8bbe\u5907\u6536\u5230\u7684\u6570\u636e\u4e0d\u4f1a\u8fdb\u5165\u6bcd\u8bbe\u5907 \u6bcd\u8bbe\u5907\u8bf7\u6c42\u53d1\u51fa\u7684\u6570\u636e\u4e0d\u4f1a\u88ab\u8f6c\u5230\u5b50\u8bbe\u5907\u4e0a \u6bcd\u5b50 VLAN \u8bbe\u5907\u62e5\u6709\u76f8\u540c\u7684 MAC \u5730\u5740 \u4e00\u4e2a VLAN \u6bcd\u8bbe\u5907\u4e0d\u53ef\u80fd\u62e5\u6709\u4e24\u4e2a\u76f8\u540c ID \u7684VLAN \u5b50\u8bbe\u5907\uff0c\u56e0\u6b64\u6ca1\u6709\u5b9e\u73b0\u4ea4\u6362\u529f\u80fd \u53ef\u4ee5\u5c06\u7f51\u7edc\u8bbe\u5907 attach \u5230 bridge \u4e0a\uff0c\u5f53\u8fd9\u4e2a\u7f51\u7edc\u8bbe\u5907\u6536\u5230\u6570\u636e\u5305\u91cc\uff0c\u5c31\u4f1a\u4ee5\u6536\u7684\u65b9\u5f0f\u53d1\u9001\u7ed9 bridge\uff0cbridge \u6536\u5230\u540e\u5c31\u4f1a\u4ee5\u4ea4\u6362\u673a\u7684\u5de5\u4f5c\u65b9\u5f0f\u5bf9\u6570\u636e\u5305\u8fdb\u884c\u8f6c\u53d1\u3002(\u4e5f\u53ea\u6709\u6536\u7684\u65f6\u5019\u624d\u4f1a\u89e6\u53d1) Attach \u5230 bridge \u4e0a\u7684\u7f51\u7edc\u8bbe\u5907\u7684 IP \u5730\u5740\u5c06\u5931\u6548 \u5728 Linux \u4e2d\uff0c\u6bcf\u4e2a\u7f51\u7edc\u8bbe\u5907\u90fd\u62e5\u6709 MAC \u5730\u5740\uff0c\u5e76\u4e14\u53ef\u914d\u7f6e IP \u5730\u5740","title":"\u5df2\u786e\u5b9a"},{"location":"Other/Linux_NetworkDevice/#other","text":"socket\u64cd\u4f5c\u6307\u4ee4\u683c\u5f0f\uff1a(\u5199|\u8bfb\uff0c\u53d1|\u6536|\uff0c\u6570\u636e) file\u64cd\u4f5c\u6307\u4ee4\uff1awrite/read \u5bf9TAP\u8bbe\u5907write\uff0c\u5185\u6838\u4f1a\u8ba4\u4e3atap\u8bbe\u5907\u662f\u6536","title":"Other"},{"location":"Other/Linux_NetworkDevice/#reference","text":"Linux \u4e0a\u7684\u57fa\u7840\u7f51\u7edc\u8bbe\u5907\u8be6\u89e3","title":"Reference"},{"location":"Other/MIME/","text":"MIME\u7c7b\u578b What && Why && Where Multipurpose Internet Mail Extensions MIME \u7c7b\u578b\u662f\u4e00\u79cd\u901a\u77e5\u5ba2\u6237\u7aef\u5176\u63a5\u6536\u6587\u4ef6\u7684\u591a\u6837\u6027\u7684\u673a\u5236:\u6587\u4ef6\u540e\u7f00\u540d\u5728\u7f51\u9875\u4e0a\u5e76\u6ca1\u6709\u660e\u786e\u7684\u610f\u4e49\u3002\u56e0\u6b64\uff0c\u4f7f\u670d\u52a1\u5668\u8bbe\u7f6e\u6b63\u786e\u7684\u4f20\u8f93\u7c7b\u578b\u975e\u5e38\u91cd\u8981\uff0c\u6240\u4ee5\u6b63\u786e\u7684MIME\u7c7b\u578b\u4e0e\u6bcf\u4e2a\u6587\u4ef6\u4e00\u540c\u4f20\u8f93\u7ed9\u670d\u52a1\u5668\u3002\u5728\u7f51\u7edc\u8d44\u6e90\u8fdb\u884c\u8fde\u63a5\u65f6\uff0c\u6d4f\u89c8\u5668\u7ecf\u5e38\u4f7f\u7528MIME\u7c7b\u578b\u6765\u51b3\u5b9a\u6267\u884c\u4f55\u79cd\u9ed8\u8ba4\u884c\u4e3a\u3002 \u4e3a\u4e86\u4f20\u9012\u6587\u4ef6\u7c7b\u578b\u4fe1\u606f\uff0cMIME\u7c7b\u578b\u5e76\u4e0d\u662f\u552f\u4e00\u7684\u9009\u62e9: \u5728\u5fae\u8f6fWindows\u7cfb\u7edf\u4e2d\uff0c\u6587\u4ef6\u547d\u540e\u7f00\u7ecf\u5e38\u4f1a\u88ab\u4f7f\u7528\u3002\u4f46\u5e76\u4e0d\u662f\u6240\u6709\u64cd\u4f5c\u7cfb\u7edf\u8ba4\u4e3a\u8fd9\u4e9b\u540e\u7f00\u662f\u6709\u610f\u4e49\u7684\uff08\u5c24\u5176\u662fLinux\u548cMac OS\uff09,\u5b83\u4eec\u66f4\u504f\u597d\u4e8e\u5916\u90e8MIME\u7c7b\u578b\uff0c\u4f46\u662f\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u5b83\u4eec\u5c31\u662f\u5bf9\u7684\u3002 Magic numbers. \u5728\u4e00\u4e9b\u6587\u4ef6\u7684\u8bed\u6cd5\u4e2d\uff0c\u5141\u8bb8\u4f7f\u7528\u5176\u6784\u9020\u7c7b\u578b\u6765\u533a\u5206\u3002\u6bd4\u5982\u8bf4GIF\u6587\u4ef6\u4ee516\u8fdb\u5236\u503c47 49 46 38\u5f00\u59cb [GIF89] \uff0c\u800cPNG\u6587\u4ef6\u662f\u4ee589 50 4E 47 [.PNG] \u3002\u5e76\u4e0d\u662f\u6240\u6709\u7c7b\u578b\u7684\u6587\u4ef6\u90fd\u4f1a\u6709magic numbers\uff0c\u6240\u4ee5\u8fd9\u4e5f\u4e0d\u662f\u4e00\u4e2a100%\u53ef\u9760\u7684\u65b9\u5f0f\u3002 \u6b63\u56e0\u5982\u6b64\uff0c\u5728web\u4e2dMIME\u7c7b\u578b\u7684\u6b63\u786e\u8bbe\u7f6e\u975e\u5e38\u91cd\u8981\u3002\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u5c1d\u8bd5\u4f7f\u7528\u540e\u7f00\u540d\u6216magic number\u53bb\u5b9a\u4e49MIME\u7c7b\u578b\uff0c\u4ee5\u7528\u6765\u68c0\u6d4b\u5176\u5bf9\u5e94\u7684\u4e00\u81f4\u6027\uff0c\u4ee5\u53ca\u5c1d\u8bd5\u5bf9\u4e00\u4e2a\u901a\u7528\u7684\u7c7b\u578b\u5bfb\u627e\u6b63\u786e\u7684MIME\u7c7b\u578b\u3002 \u901a\u7528\u7ed3\u6784 type/subtype \u72ec\u7acb\u7c7b\u578b text/plain text/html image/jpeg image/png audio/mpeg audio/ogg audio/* video/mp4 application/octet-stream \u2026","title":"MIME\u7c7b\u578b"},{"location":"Other/MIME/#mime","text":"","title":"MIME\u7c7b\u578b"},{"location":"Other/MIME/#what-why-where","text":"Multipurpose Internet Mail Extensions MIME \u7c7b\u578b\u662f\u4e00\u79cd\u901a\u77e5\u5ba2\u6237\u7aef\u5176\u63a5\u6536\u6587\u4ef6\u7684\u591a\u6837\u6027\u7684\u673a\u5236:\u6587\u4ef6\u540e\u7f00\u540d\u5728\u7f51\u9875\u4e0a\u5e76\u6ca1\u6709\u660e\u786e\u7684\u610f\u4e49\u3002\u56e0\u6b64\uff0c\u4f7f\u670d\u52a1\u5668\u8bbe\u7f6e\u6b63\u786e\u7684\u4f20\u8f93\u7c7b\u578b\u975e\u5e38\u91cd\u8981\uff0c\u6240\u4ee5\u6b63\u786e\u7684MIME\u7c7b\u578b\u4e0e\u6bcf\u4e2a\u6587\u4ef6\u4e00\u540c\u4f20\u8f93\u7ed9\u670d\u52a1\u5668\u3002\u5728\u7f51\u7edc\u8d44\u6e90\u8fdb\u884c\u8fde\u63a5\u65f6\uff0c\u6d4f\u89c8\u5668\u7ecf\u5e38\u4f7f\u7528MIME\u7c7b\u578b\u6765\u51b3\u5b9a\u6267\u884c\u4f55\u79cd\u9ed8\u8ba4\u884c\u4e3a\u3002 \u4e3a\u4e86\u4f20\u9012\u6587\u4ef6\u7c7b\u578b\u4fe1\u606f\uff0cMIME\u7c7b\u578b\u5e76\u4e0d\u662f\u552f\u4e00\u7684\u9009\u62e9: \u5728\u5fae\u8f6fWindows\u7cfb\u7edf\u4e2d\uff0c\u6587\u4ef6\u547d\u540e\u7f00\u7ecf\u5e38\u4f1a\u88ab\u4f7f\u7528\u3002\u4f46\u5e76\u4e0d\u662f\u6240\u6709\u64cd\u4f5c\u7cfb\u7edf\u8ba4\u4e3a\u8fd9\u4e9b\u540e\u7f00\u662f\u6709\u610f\u4e49\u7684\uff08\u5c24\u5176\u662fLinux\u548cMac OS\uff09,\u5b83\u4eec\u66f4\u504f\u597d\u4e8e\u5916\u90e8MIME\u7c7b\u578b\uff0c\u4f46\u662f\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u5b83\u4eec\u5c31\u662f\u5bf9\u7684\u3002 Magic numbers. \u5728\u4e00\u4e9b\u6587\u4ef6\u7684\u8bed\u6cd5\u4e2d\uff0c\u5141\u8bb8\u4f7f\u7528\u5176\u6784\u9020\u7c7b\u578b\u6765\u533a\u5206\u3002\u6bd4\u5982\u8bf4GIF\u6587\u4ef6\u4ee516\u8fdb\u5236\u503c47 49 46 38\u5f00\u59cb [GIF89] \uff0c\u800cPNG\u6587\u4ef6\u662f\u4ee589 50 4E 47 [.PNG] \u3002\u5e76\u4e0d\u662f\u6240\u6709\u7c7b\u578b\u7684\u6587\u4ef6\u90fd\u4f1a\u6709magic numbers\uff0c\u6240\u4ee5\u8fd9\u4e5f\u4e0d\u662f\u4e00\u4e2a100%\u53ef\u9760\u7684\u65b9\u5f0f\u3002 \u6b63\u56e0\u5982\u6b64\uff0c\u5728web\u4e2dMIME\u7c7b\u578b\u7684\u6b63\u786e\u8bbe\u7f6e\u975e\u5e38\u91cd\u8981\u3002\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u5c1d\u8bd5\u4f7f\u7528\u540e\u7f00\u540d\u6216magic number\u53bb\u5b9a\u4e49MIME\u7c7b\u578b\uff0c\u4ee5\u7528\u6765\u68c0\u6d4b\u5176\u5bf9\u5e94\u7684\u4e00\u81f4\u6027\uff0c\u4ee5\u53ca\u5c1d\u8bd5\u5bf9\u4e00\u4e2a\u901a\u7528\u7684\u7c7b\u578b\u5bfb\u627e\u6b63\u786e\u7684MIME\u7c7b\u578b\u3002","title":"What &amp;&amp; Why &amp;&amp; Where"},{"location":"Other/MIME/#_1","text":"type/subtype","title":"\u901a\u7528\u7ed3\u6784"},{"location":"Other/MIME/#_2","text":"text/plain text/html image/jpeg image/png audio/mpeg audio/ogg audio/* video/mp4 application/octet-stream \u2026","title":"\u72ec\u7acb\u7c7b\u578b"},{"location":"Other/Object Storage characteristics/","text":"Object Storage characteristics The key characteristics of Object Storage are that: All objects stored in Object Storage have a URL. \u201cStorage Policies\u201d may be used to define different levels of durability for objects stored in the cluster. These policies support not only complete replicas but also erasure-coded fragments. All replicas or fragments for an object are stored in as-unique-as-possible zones to increase durability and availability. All objects have their own metadata. Developers interact with the object storage system through a RESTful HTTP API. Object data can be located anywhere in the cluster. The cluster scales by adding additional nodes without sacrificing performance, which allows a more cost-effective linear storage expansion than fork-lift upgrades. Data does not have to be migrated to an entirely new storage system. New nodes can be added to the cluster without downtime. Failed nodes and disks can be swapped out without downtime. It runs on industry-standard hardware, such as Dell, HP, and Supermicro. Object Storage (swift) Developers can either write directly to the Swift API or use one of the many client libraries that exist for all of the popular programming languages, such as Java, Python, Ruby, and C#. Amazon S3 and RackSpace Cloud Files users should be very familiar with Object Storage. Users new to object storage systems will have to adjust to a different approach and mindset than those required for a traditional filesystem. \u5bf9\u8c61\u5b58\u50a8\u7684\u5173\u952e\u7684\u7279\u5f81\uff1a \u6240\u6709\u7684\u5bf9\u8c61\u5b58\u50a8\u5728\u5bf9\u8c61\u5b58\u50a8\u4e2d\u90fd\u62e5\u6709\u4e00\u4e2aURL \u200b","title":"Object Storage characteristics"},{"location":"Other/Object Storage characteristics/#object-storage-characteristics","text":"The key characteristics of Object Storage are that: All objects stored in Object Storage have a URL. \u201cStorage Policies\u201d may be used to define different levels of durability for objects stored in the cluster. These policies support not only complete replicas but also erasure-coded fragments. All replicas or fragments for an object are stored in as-unique-as-possible zones to increase durability and availability. All objects have their own metadata. Developers interact with the object storage system through a RESTful HTTP API. Object data can be located anywhere in the cluster. The cluster scales by adding additional nodes without sacrificing performance, which allows a more cost-effective linear storage expansion than fork-lift upgrades. Data does not have to be migrated to an entirely new storage system. New nodes can be added to the cluster without downtime. Failed nodes and disks can be swapped out without downtime. It runs on industry-standard hardware, such as Dell, HP, and Supermicro. Object Storage (swift) Developers can either write directly to the Swift API or use one of the many client libraries that exist for all of the popular programming languages, such as Java, Python, Ruby, and C#. Amazon S3 and RackSpace Cloud Files users should be very familiar with Object Storage. Users new to object storage systems will have to adjust to a different approach and mindset than those required for a traditional filesystem. \u5bf9\u8c61\u5b58\u50a8\u7684\u5173\u952e\u7684\u7279\u5f81\uff1a \u6240\u6709\u7684\u5bf9\u8c61\u5b58\u50a8\u5728\u5bf9\u8c61\u5b58\u50a8\u4e2d\u90fd\u62e5\u6709\u4e00\u4e2aURL \u200b","title":"Object Storage characteristics"},{"location":"Other/Regular Expression/","text":"Regular Expression \u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u7528\u5728\u5b57\u7b26\u4e32\u7684\u5904\u7406\u4e0a\u7684\u4e00\u9879 \u8868\u8fbe\u5f0f \uff0c\u5176\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5904\u7406\u7684\u6807\u51c6\u4f9d\u636e\uff0c\u800c\u975e\u5de5\u5177\u7a0b\u5f0f\u3002 \u57fa\u672c\u6b63\u5219\u8868\u8fbe\u5f0f RE\u5b57\u7b26 \u4ee3\u8868\u610f\u4e49 [:alnum:] \u4ee3\u8868\u82f1\u6587\u5927\u5c0f\u5199\u5b57\u7b26\u53ca\u6570\u5b57 [:alpha:] \u4ee3\u8868\u4efb\u4f55\u82f1\u6587\u5927\u5c0f\u5199\u5b57\u7b26 [:digit:] \u4ee3\u8868\u6570\u5b57 [:lower:] \u4ee3\u8868\u5c0f\u5199\u5b57\u7b26 [:upper:] \u4ee3\u8868\u5927\u5199\u5b57\u7b26 [list] \u5339\u914d list \u4e2d\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [^list] \u5339\u914d\u9664 list \u4e2d\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [c1-c2] \u5339\u914d c1-c2 \u4e2d\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 ^ \u5339\u914d\u884c\u9996 $ \u5339\u914d\u884c\u5c3e . \u4e00\u5b9a\u5339\u914d\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26 * \u91cd\u590d\u524d\u4e00\u4e2a\u5b57\u7b26\uff0c0\u5230\u65e0\u7a77\u591a\u6b21 {m} \u8fde\u7eedm\u4e2a\u524d\u4e00\u4e2a\u5b57\u7b26 {m,} \u8fde\u7eedm\u4e2a\u6216\u4ee5\u4e0a\u524d\u4e00\u5b57\u7b26 {m,n} \u8fde\u7eedm\u5230n\u4e2a\u524d\u4e00\u4e2a\u5b57\u7b26 \u6269\u5c55\u6b63\u5219\u8868\u8fbe\u5f0f RE\u5b57\u7b26 \u4ee3\u8868\u610f\u4e49 + \u91cd\u590d\u4e00\u4e2a\u6216\u4e00\u4e2a\u4ee5\u4e0a\u524d\u4e00\u4e2a\u5b57\u7b26 \uff1f \u96f6\u4e2a\u6216\u4e00\u4e2a\u524d\u4e00\u4e2a\u5b57\u7b26 | \u6216 () \u7fa4\u7ec4 egrep -n 'g(la|oo)d' regular_express.txt ()+ \u91cd\u590d\u7fa4\u7ec4\u4e00\u6b21\u6216\u4ee5\u4e0a","title":"Regular Expression"},{"location":"Other/Regular Expression/#regular-expression","text":"\u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u7528\u5728\u5b57\u7b26\u4e32\u7684\u5904\u7406\u4e0a\u7684\u4e00\u9879 \u8868\u8fbe\u5f0f \uff0c\u5176\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5904\u7406\u7684\u6807\u51c6\u4f9d\u636e\uff0c\u800c\u975e\u5de5\u5177\u7a0b\u5f0f\u3002","title":"Regular Expression"},{"location":"Other/Regular Expression/#_1","text":"RE\u5b57\u7b26 \u4ee3\u8868\u610f\u4e49 [:alnum:] \u4ee3\u8868\u82f1\u6587\u5927\u5c0f\u5199\u5b57\u7b26\u53ca\u6570\u5b57 [:alpha:] \u4ee3\u8868\u4efb\u4f55\u82f1\u6587\u5927\u5c0f\u5199\u5b57\u7b26 [:digit:] \u4ee3\u8868\u6570\u5b57 [:lower:] \u4ee3\u8868\u5c0f\u5199\u5b57\u7b26 [:upper:] \u4ee3\u8868\u5927\u5199\u5b57\u7b26 [list] \u5339\u914d list \u4e2d\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [^list] \u5339\u914d\u9664 list \u4e2d\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [c1-c2] \u5339\u914d c1-c2 \u4e2d\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 ^ \u5339\u914d\u884c\u9996 $ \u5339\u914d\u884c\u5c3e . \u4e00\u5b9a\u5339\u914d\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26 * \u91cd\u590d\u524d\u4e00\u4e2a\u5b57\u7b26\uff0c0\u5230\u65e0\u7a77\u591a\u6b21 {m} \u8fde\u7eedm\u4e2a\u524d\u4e00\u4e2a\u5b57\u7b26 {m,} \u8fde\u7eedm\u4e2a\u6216\u4ee5\u4e0a\u524d\u4e00\u5b57\u7b26 {m,n} \u8fde\u7eedm\u5230n\u4e2a\u524d\u4e00\u4e2a\u5b57\u7b26","title":"\u57fa\u672c\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"Other/Regular Expression/#_2","text":"RE\u5b57\u7b26 \u4ee3\u8868\u610f\u4e49 + \u91cd\u590d\u4e00\u4e2a\u6216\u4e00\u4e2a\u4ee5\u4e0a\u524d\u4e00\u4e2a\u5b57\u7b26 \uff1f \u96f6\u4e2a\u6216\u4e00\u4e2a\u524d\u4e00\u4e2a\u5b57\u7b26 | \u6216 () \u7fa4\u7ec4 egrep -n 'g(la|oo)d' regular_express.txt ()+ \u91cd\u590d\u7fa4\u7ec4\u4e00\u6b21\u6216\u4ee5\u4e0a","title":"\u6269\u5c55\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"Other/awk/","text":"awk (1) - pattern scanning and processing language","title":"Awk"},{"location":"Other/awk/#awk-1-pattern-scanning-and-processing-language","text":"","title":"awk (1) - pattern scanning and processing language"},{"location":"Other/disable automount/","text":"\u7981\u6b62\u81ea\u52a8\u6302\u8f7d\uff1a $ gsettings set org.gnome.desktop.media-handling automount false \u7981\u6b62\u81ea\u52a8\u6302\u8f7d\u5e76\u6253\u5f00 $ gsettings set org.gnome.desktop.media-handling automount-open false \u5141\u8bb8\u81ea\u52a8\u6302\u8f7d $ gsettings set org.gnome.desktop.media-handlingautomount true \u5141\u8bb8\u81ea\u52a8\u6302\u8f7d\u5e76\u6253\u5f00 $ gsettings set org.gnome.desktop.media-handling automount-open true","title":"Disable automount"},{"location":"Other/iptables/","text":"Iptables \u6d41\u91cf\u7ecf\u8fc7\u7684\u4e94\u4e2a\u4f4d\u7f6e(Chain) PREROUTING INPUT OUTPUT FORWARD POSTROUTING graph LR A(data) --> B[PREROUTING] B --> C{RouteDecision} C --> |Local| D[INPUT] C --> |Other| E[FORWARD] D --> F(Host) F --> G[OUTPUT] G --> H[POSTROUTING] E --> H[POSTROUTING] \u5bf9\u6d41\u91cf\u5904\u7406\u7684\u56db\u7c7b\u5904\u7406\u65b9\u5f0f(Table) raw:\u4e00\u4e2a\u4e3b\u8981\u7528\u9014\u5c31\u662f\u4e3a\u4e86\u4e00\u4ef6\u4e8b\u60c5\uff0c\u90a3\u5c31\u662f\u5bf9\u62a5\u6587\u8bbe\u7f6e\u4e00\u4e2a\u6807\u5fd7\uff0c\u8ba9\u8fd9\u4e2a\u62a5\u6587\u4e0d\u88ab\u8fde\u63a5\u8ddf\u8e2a\u7cfb\u7edf\u6240\u8ddf\u8e2a\u3002 mangle:\u4e3b\u8981\u7528\u6765\u8fdb\u884c\u62a5\u6587\u4fee\u6539\uff0c\u53ef\u4ee5\u81ea\u7531\u7684\u4fee\u6539\u62a5\u6587\u7684TOS\u3001TTL\u3001MARK\u3001SECMARK\u3001CONNSECMARK\u4e4b\u7c7b\u7684 nat:\u53ea\u80fd\u7528\u6765\u5b8c\u6210NAT\u529f\u80fd\uff0c\u6362\u53e5\u8bdd\u8bb2\uff0c\u5b83\u53ea\u80fd\u7528\u6765\u5b8c\u6210\u6e90/\u76ee\u7684\u5730\u5740\u7684\u8f6c\u6362\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u53ea\u6709\u7b2c\u4e00\u4e2a\u62a5\u6587\u4f1a\u7ecf\u8fc7\u8fd9\u4e2a\u8868\uff0c\u8fd9\u4e2a\u8fde\u63a5\u7684\u5176\u4ed6\u62a5\u6587\u4f1a\u81ea\u52a8\u5b8c\u6210\u8f6c\u6362\u3002\u8fd9\u4e2a\u8868\u7684target\u6709\uff1a DNAT SNAT MASQUERADE:\u4f5c\u7528\u548cSNAT\u5b8c\u5168\u4e00\u6837\uff0c\u53ea\u662f\u8ba1\u7b97\u673a\u7684\u8d1f\u8377\u7a0d\u5fae\u591a\u4e00\u70b9\u3002\u56e0\u4e3a\u5bf9\u6bcf\u4e2a\u5339\u914d\u7684\u5305\uff0cMASQUERADE\u90fd\u8981\u67e5\u627e\u53ef\u7528\u7684IP\u5730\u5740\uff0c\u800c\u4e0d\u8c61SNAT\u7528\u7684IP\u5730\u5740\u662f\u914d\u7f6e\u597d\u7684\u3002\u5f53\u7136\uff0c\u8fd9\u4e5f\u6709\u597d\u5904\uff0c\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u901a\u8fc7PPP\u3001 PPPOE\u3001SLIP\u7b49\u62e8\u53f7\u5f97\u5230\u7684\u5730\u5740\uff0c\u8fd9\u4e9b\u5730\u5740\u53ef\u662f\u7531ISP\u7684DHCP\u968f\u673a\u5206\u914d\u7684\u3002 REDIRECT filter:\u4e3b\u8981\u662f\u7528\u6765\u62a5\u6587\u8fc7\u6ee4\u7684\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u5339\u914d\u5305\u5e76\u8fc7\u6ee4\u5b83\u4eec\u3002\u5728\u8fd9\u91cc\u6839\u636e\u5305\u7684\u5185\u5bb9\u5bf9\u5305\u505aDROP\u6216ACCEPT\u7684\u3002\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u9884\u5148\u5728\u5176\u4ed6\u5730\u65b9\u505a\u4e9b\u8fc7\u6ee4\uff0c\u4f46\u662f\u8fd9\u4e2a\u8868\u624d\u662f\u8bbe\u8ba1\u7528\u6765\u8fc7\u6ee4\u7684\u3002 custom chain:\u4e00\u4e2a\u62a5\u6587\u5728\u5904\u7406\u7684\u65f6\u5019\u80fd\u591f\u901a\u8fc7jump\u89c4\u5219\u8df3\u8f6c\u5230\u672c\u8868\u7684\u53e6\u5916\u4e00\u4e2a\u94fe\uff0c\u4f46\u662f\u9700\u8981\u6307\u51fa\u7684\u662f\u8fd9\u4e2a\u65b0\u7684\u94fe\u8868\u5fc5\u987b\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684\uff0c\u4e0d\u80fd\u662f\u4efb\u4f55\u5185\u5efa\u7684\u94fe\u8868\u3002\u8fd9\u4e2a\u89c4\u5219\u7684\u67e5\u8be2\u662f\u9010\u6761\u7684\uff0c\u81ea\u4e0a\u5411\u4e0b\u7684\u3002\u904d\u5386\u7ed3\u675f\u7684\u6761\u4ef6\u662f\u88ab\u4e00\u4e2atarget\u7ec8\u6b62\u6216\u8005\u5185\u5efa\u7684\u94fe\u8868\u7ed3\u675f\u3002 \u56db\u4e2a\u8fde\u63a5\u72b6\u6001 NEW ESTABLISHED RELATED INVALID \u6d89\u53ca\u5185\u6838\u6a21\u5757\uff1aconntrack \u8fde\u63a5\u8ddf\u8e2a\u7684\u72b6\u6001\u4e3b\u8981\u5728\u4e24\u4e2a\u5730\u65b9\u88ab\u89e6\u53d1\uff0c\u4e00\u4e2a\u662fPREROUTING\uff0c\u53e6\u5916\u4e00\u4e2a\u6570OUTPUT\uff0c\u4ed6\u4eec\u5206\u522b\u5bf9\u5e94\u5916\u6765\u62a5\u6587\u548c\u672c\u7ea7\u4ea7\u751f\u62a5\u6587\u3002\u4f8b\u5982\u6211\u4eec\u4ece\u672c\u7ea7\u53d1\u9001\u4e00\u4e2a\u62a5\u6587\uff0c\u90a3\u4e48\u5728OUTPUT\u94fe\u91cc\u9762\uff0c\u5b83\u7684\u72b6\u6001\u4f1a\u53d8\u6210NEW\uff0c\u5f53\u6211\u4eec\u63a5\u6536\u5230\u56de\u5e94\u62a5\u6587\u7684\u65f6\u5019\uff0c\u8fde\u63a5\u72b6\u6001\u5c31PREROUTING\u5904\u66f4\u6539\u4e3aESTABLISHED\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u52a0\u5165\u7b2c\u4e00\u4e2a\u62a5\u6587\u4e0d\u662f\u6211\u4eec\u5c1d\u8bd5\u7684\uff0c\u90a3\u4e48\u5728PREROUTING\u51fa\u5c31\u8bbe\u7f6e\u4e3aNEW\uff0c\u7136\u540e\u6211\u4eec\u53d1\u9001\u56de\u590d\u7684\u65f6\u5019\uff0c\u5728OUTPUT\u8bbe\u7f6e\u4e3aESTABLISHED\u3002 NEW NEW\u72b6\u6001\u8868\u793a\u8fd9\u4e2a\u62a5\u6587\u662f\u6211\u4eec\u6240\u770b\u5230\u7684\u7b2c\u4e00\u4e2a\u62a5\u6587\uff0c\u4e5f\u610f\u5473\u7740\u5728\u8fde\u63a5\u8ddf\u8e2a\u7cfb\u7edf\u91cc\u9762\uff0c\u5b83\u9a6c\u4e0a\u5c31\u88ab\u5339\u914d\u3002\u4f8b\u5982\u6211\u4eec\u53d1\u9001\u4e00\u4e2aSYN\u62a5\u6587\uff0c\u5b83\u5c31\u662f\u8fde\u63a5\u8ddf\u8e2a\u7cfb\u7edf\u6240\u770b\u5230\u7684\u7b2c\u4e00\u4e2a\u62a5\u6587\uff0c\u63a5\u7740\u5b83\u5c06\u4f1a\u88ab\u5339\u914d\u3002\u4f46\u662f\u4e00\u4e9b\u4e0d\u662fSYN\u7684\u62a5\u6587\u4e5f\u6709\u53ef\u80fd\u88ab\u8ba4\u4e3a\u662fNEW\u72b6\u6001\uff0c\u8fd9\u6837\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u95ee\u9898\uff0c\u4f46\u662f\u5b83\u5bf9\u4e8e\u6211\u4eec\u91cd\u65b0\u6062\u590d\u88ab\u5176\u4ed6\u9632\u706b\u5899\u5173\u95ed\u7684\u8fde\u63a5\u5f88\u91cd\u8981\uff0c\u6216\u8005\u8bf4\u4e00\u4e2a\u8fde\u63a5\u5df2\u7ecf\u8d85\u65f6\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u771f\u6b63\u5173\u95ed\u3002 ESTABLISHED ESTABLISHED\u72b6\u6001\u8868\u793a\u5728\u53cc\u5411\u90fd\u770b\u5230\u6d41\u91cf\u4e86\uff0c\u5e76\u4e14\u4f1a\u6301\u7eed\u5339\u914d \u3002ESTABLISHED\u72b6\u6001\u5176\u5b9e\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u8981\u60f3\u8fdb\u5165ESTABLISHED\u72b6\u6001\uff0c\u4e00\u4e2a\u673a\u5668\u53ea\u9700\u8981\u53d1\u9001\u4e00\u4e2a\u62a5\u6587\uff0c\u7136\u540e\u6536\u5230\u76f8\u5e94\u7684\u5e94\u7b54\u62a5\u6587\u3002\u53ea\u8981\u63a5\u53d7\u5230\u4e00\u4e2a\u5e94\u7b54\uff0c\u72b6\u6001\u5c31\u4f1a\u4eceNEW\u53d8\u6210ESTABLISHED\uff0c\u5373\u4f7f\u63a5\u6536\u5230\u7684\u662fICMP\u7684\u9519\u8bef\u62a5\u544a\u3002 RELATED RELATED\u662f\u4e2a\u6bd4\u8f83\u9ebb\u70e6\u7684\u72b6\u6001\u3002\u5f53\u4e00\u4e2a\u8fde\u63a5\u548c\u67d0\u4e2a\u5df2\u5904\u4e8eESTABLISHED\u72b6\u6001\u7684\u8fde\u63a5\u6709\u5173\u7cfb\u65f6\uff0c\u5c31\u88ab\u8ba4\u4e3a\u662fRELATED\u7684\u4e86\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e00\u4e2a\u8fde\u63a5\u8981\u60f3\u662fRELATED\u7684\uff0c\u9996\u5148\u8981\u6709\u4e00\u4e2aESTABLISHED\u7684\u8fde\u63a5\u3002\u8fd9\u4e2aESTABLISHED\u8fde\u63a5\u518d\u4ea7\u751f\u4e00\u4e2a\u4e3b\u8fde\u63a5\u4e4b\u5916\u7684\u8fde\u63a5\uff0c\u8fd9\u4e2a\u65b0\u7684\u8fde\u63a5\u5c31\u662fRELATED\u7684\u4e86\uff0c\u5f53\u7136\u524d\u63d0\u662fconntrack\u6a21\u5757\u8981\u80fd\u7406\u89e3RELATED\u3002ftp\u662f\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\uff0cFTP-data \u8fde\u63a5\u5c31\u662f\u548cFTP-control\u6709RELATED\u7684\u3002\u8fd8\u6709\u5176\u4ed6\u7684\u4f8b\u5b50\uff0c\u6bd4\u5982\uff0c\u901a\u8fc7IRC\u7684DCC\u8fde\u63a5\u3002\u6709\u4e86\u8fd9\u4e2a\u72b6\u6001\uff0cICMP\u5e94\u7b54\u3001FTP\u4f20\u8f93\u3001DCC\u7b49\u624d\u80fd\u7a7f\u8fc7\u9632\u706b\u5899\u6b63\u5e38\u5de5\u4f5c\u3002\u6ce8\u610f\uff0c\u5927\u90e8\u5206\u8fd8\u6709\u4e00\u4e9bUDP\u534f\u8bae\u90fd\u4f9d\u8d56\u8fd9\u4e2a\u673a\u5236\u3002\u8fd9\u4e9b\u534f\u8bae\u662f\u5f88\u590d\u6742\u7684\uff0c\u5b83\u4eec\u628a\u8fde\u63a5\u4fe1\u606f\u653e\u5728\u6570\u636e\u5305\u91cc\uff0c\u5e76\u4e14\u8981\u6c42\u8fd9\u4e9b\u4fe1\u606f\u80fd\u88ab\u6b63\u786e\u7406\u89e3\u3002 INVALID INVALID\u610f\u5473\u7740\u8fd9\u4e2a\u62a5\u6587\u4e0d\u80fd\u88ab\u8bc6\u522b\u6216\u8005\u5b83\u6ca1\u6709\u4efb\u4f55\u72b6\u6001\u3002\u5bfc\u81f4\u8fd9\u4e2a\u7684\u539f\u56e0\u53ef\u80fd\u6709\u5f88\u591a\u79cd\uff0c\u4f8b\u5982\u5185\u5b58\u4e0d\u8db3\u6216\u548c\u8fd4\u56de\u7684ICMP\u6ca1\u6709\u5339\u914d\u4e0a\u4efb\u4f55\u8fde\u63a5\u3002\u4e00\u822c\u800c\u8a00\uff0c\u5728\u8fd9\u79cd\u72b6\u6001\u4e0b\u4e22\u5305\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002 UNTRACKED UNTRACKED\u72b6\u6001\uff0c\u7b80\u5355\u7684\u8bf4\uff0c\u62a5\u6587\u5728raw\u8868\u91cc\u9762\u88abNPTRACK target\u8fdb\u884c\u4e86\u6807\u8bb0\uff0c\u7136\u540e\u8fd9\u4e2a\u62a5\u6587\u5728\u8fde\u63a5\u8ddf\u8e2a\u8868\u91cc\u9762\u7684\u72b6\u6001\u5c31\u662fUNTRACKED\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4\u6240\u6709RELATED\u7684\u94fe\u63a5\u90fd\u770b\u4e0d\u5230\uff0c\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\u6211\u4eec\u9700\u8981\u4ed4\u7ec6\u8003\u8651\uff0c\u4f8b\u5982\u76f8\u5173\u7684ICMP\u62a5\u6587\u9700\u8981\u7279\u6b8a\u5904\u7406\u3002 9\u4e2a\u52a8\u4f5c ACCEPT DROP REJECT JUMP RETURN SNAT DNAT REDIRECT TOS TTL","title":"Iptables"},{"location":"Other/iptables/#iptables","text":"","title":"Iptables"},{"location":"Other/iptables/#chain","text":"PREROUTING INPUT OUTPUT FORWARD POSTROUTING graph LR A(data) --> B[PREROUTING] B --> C{RouteDecision} C --> |Local| D[INPUT] C --> |Other| E[FORWARD] D --> F(Host) F --> G[OUTPUT] G --> H[POSTROUTING] E --> H[POSTROUTING]","title":"\u6d41\u91cf\u7ecf\u8fc7\u7684\u4e94\u4e2a\u4f4d\u7f6e(Chain)"},{"location":"Other/iptables/#table","text":"raw:\u4e00\u4e2a\u4e3b\u8981\u7528\u9014\u5c31\u662f\u4e3a\u4e86\u4e00\u4ef6\u4e8b\u60c5\uff0c\u90a3\u5c31\u662f\u5bf9\u62a5\u6587\u8bbe\u7f6e\u4e00\u4e2a\u6807\u5fd7\uff0c\u8ba9\u8fd9\u4e2a\u62a5\u6587\u4e0d\u88ab\u8fde\u63a5\u8ddf\u8e2a\u7cfb\u7edf\u6240\u8ddf\u8e2a\u3002 mangle:\u4e3b\u8981\u7528\u6765\u8fdb\u884c\u62a5\u6587\u4fee\u6539\uff0c\u53ef\u4ee5\u81ea\u7531\u7684\u4fee\u6539\u62a5\u6587\u7684TOS\u3001TTL\u3001MARK\u3001SECMARK\u3001CONNSECMARK\u4e4b\u7c7b\u7684 nat:\u53ea\u80fd\u7528\u6765\u5b8c\u6210NAT\u529f\u80fd\uff0c\u6362\u53e5\u8bdd\u8bb2\uff0c\u5b83\u53ea\u80fd\u7528\u6765\u5b8c\u6210\u6e90/\u76ee\u7684\u5730\u5740\u7684\u8f6c\u6362\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u53ea\u6709\u7b2c\u4e00\u4e2a\u62a5\u6587\u4f1a\u7ecf\u8fc7\u8fd9\u4e2a\u8868\uff0c\u8fd9\u4e2a\u8fde\u63a5\u7684\u5176\u4ed6\u62a5\u6587\u4f1a\u81ea\u52a8\u5b8c\u6210\u8f6c\u6362\u3002\u8fd9\u4e2a\u8868\u7684target\u6709\uff1a DNAT SNAT MASQUERADE:\u4f5c\u7528\u548cSNAT\u5b8c\u5168\u4e00\u6837\uff0c\u53ea\u662f\u8ba1\u7b97\u673a\u7684\u8d1f\u8377\u7a0d\u5fae\u591a\u4e00\u70b9\u3002\u56e0\u4e3a\u5bf9\u6bcf\u4e2a\u5339\u914d\u7684\u5305\uff0cMASQUERADE\u90fd\u8981\u67e5\u627e\u53ef\u7528\u7684IP\u5730\u5740\uff0c\u800c\u4e0d\u8c61SNAT\u7528\u7684IP\u5730\u5740\u662f\u914d\u7f6e\u597d\u7684\u3002\u5f53\u7136\uff0c\u8fd9\u4e5f\u6709\u597d\u5904\uff0c\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u901a\u8fc7PPP\u3001 PPPOE\u3001SLIP\u7b49\u62e8\u53f7\u5f97\u5230\u7684\u5730\u5740\uff0c\u8fd9\u4e9b\u5730\u5740\u53ef\u662f\u7531ISP\u7684DHCP\u968f\u673a\u5206\u914d\u7684\u3002 REDIRECT filter:\u4e3b\u8981\u662f\u7528\u6765\u62a5\u6587\u8fc7\u6ee4\u7684\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u5339\u914d\u5305\u5e76\u8fc7\u6ee4\u5b83\u4eec\u3002\u5728\u8fd9\u91cc\u6839\u636e\u5305\u7684\u5185\u5bb9\u5bf9\u5305\u505aDROP\u6216ACCEPT\u7684\u3002\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u9884\u5148\u5728\u5176\u4ed6\u5730\u65b9\u505a\u4e9b\u8fc7\u6ee4\uff0c\u4f46\u662f\u8fd9\u4e2a\u8868\u624d\u662f\u8bbe\u8ba1\u7528\u6765\u8fc7\u6ee4\u7684\u3002 custom chain:\u4e00\u4e2a\u62a5\u6587\u5728\u5904\u7406\u7684\u65f6\u5019\u80fd\u591f\u901a\u8fc7jump\u89c4\u5219\u8df3\u8f6c\u5230\u672c\u8868\u7684\u53e6\u5916\u4e00\u4e2a\u94fe\uff0c\u4f46\u662f\u9700\u8981\u6307\u51fa\u7684\u662f\u8fd9\u4e2a\u65b0\u7684\u94fe\u8868\u5fc5\u987b\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684\uff0c\u4e0d\u80fd\u662f\u4efb\u4f55\u5185\u5efa\u7684\u94fe\u8868\u3002\u8fd9\u4e2a\u89c4\u5219\u7684\u67e5\u8be2\u662f\u9010\u6761\u7684\uff0c\u81ea\u4e0a\u5411\u4e0b\u7684\u3002\u904d\u5386\u7ed3\u675f\u7684\u6761\u4ef6\u662f\u88ab\u4e00\u4e2atarget\u7ec8\u6b62\u6216\u8005\u5185\u5efa\u7684\u94fe\u8868\u7ed3\u675f\u3002","title":"\u5bf9\u6d41\u91cf\u5904\u7406\u7684\u56db\u7c7b\u5904\u7406\u65b9\u5f0f(Table)"},{"location":"Other/iptables/#_1","text":"NEW ESTABLISHED RELATED INVALID \u6d89\u53ca\u5185\u6838\u6a21\u5757\uff1aconntrack \u8fde\u63a5\u8ddf\u8e2a\u7684\u72b6\u6001\u4e3b\u8981\u5728\u4e24\u4e2a\u5730\u65b9\u88ab\u89e6\u53d1\uff0c\u4e00\u4e2a\u662fPREROUTING\uff0c\u53e6\u5916\u4e00\u4e2a\u6570OUTPUT\uff0c\u4ed6\u4eec\u5206\u522b\u5bf9\u5e94\u5916\u6765\u62a5\u6587\u548c\u672c\u7ea7\u4ea7\u751f\u62a5\u6587\u3002\u4f8b\u5982\u6211\u4eec\u4ece\u672c\u7ea7\u53d1\u9001\u4e00\u4e2a\u62a5\u6587\uff0c\u90a3\u4e48\u5728OUTPUT\u94fe\u91cc\u9762\uff0c\u5b83\u7684\u72b6\u6001\u4f1a\u53d8\u6210NEW\uff0c\u5f53\u6211\u4eec\u63a5\u6536\u5230\u56de\u5e94\u62a5\u6587\u7684\u65f6\u5019\uff0c\u8fde\u63a5\u72b6\u6001\u5c31PREROUTING\u5904\u66f4\u6539\u4e3aESTABLISHED\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u52a0\u5165\u7b2c\u4e00\u4e2a\u62a5\u6587\u4e0d\u662f\u6211\u4eec\u5c1d\u8bd5\u7684\uff0c\u90a3\u4e48\u5728PREROUTING\u51fa\u5c31\u8bbe\u7f6e\u4e3aNEW\uff0c\u7136\u540e\u6211\u4eec\u53d1\u9001\u56de\u590d\u7684\u65f6\u5019\uff0c\u5728OUTPUT\u8bbe\u7f6e\u4e3aESTABLISHED\u3002 NEW NEW\u72b6\u6001\u8868\u793a\u8fd9\u4e2a\u62a5\u6587\u662f\u6211\u4eec\u6240\u770b\u5230\u7684\u7b2c\u4e00\u4e2a\u62a5\u6587\uff0c\u4e5f\u610f\u5473\u7740\u5728\u8fde\u63a5\u8ddf\u8e2a\u7cfb\u7edf\u91cc\u9762\uff0c\u5b83\u9a6c\u4e0a\u5c31\u88ab\u5339\u914d\u3002\u4f8b\u5982\u6211\u4eec\u53d1\u9001\u4e00\u4e2aSYN\u62a5\u6587\uff0c\u5b83\u5c31\u662f\u8fde\u63a5\u8ddf\u8e2a\u7cfb\u7edf\u6240\u770b\u5230\u7684\u7b2c\u4e00\u4e2a\u62a5\u6587\uff0c\u63a5\u7740\u5b83\u5c06\u4f1a\u88ab\u5339\u914d\u3002\u4f46\u662f\u4e00\u4e9b\u4e0d\u662fSYN\u7684\u62a5\u6587\u4e5f\u6709\u53ef\u80fd\u88ab\u8ba4\u4e3a\u662fNEW\u72b6\u6001\uff0c\u8fd9\u6837\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u95ee\u9898\uff0c\u4f46\u662f\u5b83\u5bf9\u4e8e\u6211\u4eec\u91cd\u65b0\u6062\u590d\u88ab\u5176\u4ed6\u9632\u706b\u5899\u5173\u95ed\u7684\u8fde\u63a5\u5f88\u91cd\u8981\uff0c\u6216\u8005\u8bf4\u4e00\u4e2a\u8fde\u63a5\u5df2\u7ecf\u8d85\u65f6\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u771f\u6b63\u5173\u95ed\u3002 ESTABLISHED ESTABLISHED\u72b6\u6001\u8868\u793a\u5728\u53cc\u5411\u90fd\u770b\u5230\u6d41\u91cf\u4e86\uff0c\u5e76\u4e14\u4f1a\u6301\u7eed\u5339\u914d \u3002ESTABLISHED\u72b6\u6001\u5176\u5b9e\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u8981\u60f3\u8fdb\u5165ESTABLISHED\u72b6\u6001\uff0c\u4e00\u4e2a\u673a\u5668\u53ea\u9700\u8981\u53d1\u9001\u4e00\u4e2a\u62a5\u6587\uff0c\u7136\u540e\u6536\u5230\u76f8\u5e94\u7684\u5e94\u7b54\u62a5\u6587\u3002\u53ea\u8981\u63a5\u53d7\u5230\u4e00\u4e2a\u5e94\u7b54\uff0c\u72b6\u6001\u5c31\u4f1a\u4eceNEW\u53d8\u6210ESTABLISHED\uff0c\u5373\u4f7f\u63a5\u6536\u5230\u7684\u662fICMP\u7684\u9519\u8bef\u62a5\u544a\u3002 RELATED RELATED\u662f\u4e2a\u6bd4\u8f83\u9ebb\u70e6\u7684\u72b6\u6001\u3002\u5f53\u4e00\u4e2a\u8fde\u63a5\u548c\u67d0\u4e2a\u5df2\u5904\u4e8eESTABLISHED\u72b6\u6001\u7684\u8fde\u63a5\u6709\u5173\u7cfb\u65f6\uff0c\u5c31\u88ab\u8ba4\u4e3a\u662fRELATED\u7684\u4e86\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e00\u4e2a\u8fde\u63a5\u8981\u60f3\u662fRELATED\u7684\uff0c\u9996\u5148\u8981\u6709\u4e00\u4e2aESTABLISHED\u7684\u8fde\u63a5\u3002\u8fd9\u4e2aESTABLISHED\u8fde\u63a5\u518d\u4ea7\u751f\u4e00\u4e2a\u4e3b\u8fde\u63a5\u4e4b\u5916\u7684\u8fde\u63a5\uff0c\u8fd9\u4e2a\u65b0\u7684\u8fde\u63a5\u5c31\u662fRELATED\u7684\u4e86\uff0c\u5f53\u7136\u524d\u63d0\u662fconntrack\u6a21\u5757\u8981\u80fd\u7406\u89e3RELATED\u3002ftp\u662f\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\uff0cFTP-data \u8fde\u63a5\u5c31\u662f\u548cFTP-control\u6709RELATED\u7684\u3002\u8fd8\u6709\u5176\u4ed6\u7684\u4f8b\u5b50\uff0c\u6bd4\u5982\uff0c\u901a\u8fc7IRC\u7684DCC\u8fde\u63a5\u3002\u6709\u4e86\u8fd9\u4e2a\u72b6\u6001\uff0cICMP\u5e94\u7b54\u3001FTP\u4f20\u8f93\u3001DCC\u7b49\u624d\u80fd\u7a7f\u8fc7\u9632\u706b\u5899\u6b63\u5e38\u5de5\u4f5c\u3002\u6ce8\u610f\uff0c\u5927\u90e8\u5206\u8fd8\u6709\u4e00\u4e9bUDP\u534f\u8bae\u90fd\u4f9d\u8d56\u8fd9\u4e2a\u673a\u5236\u3002\u8fd9\u4e9b\u534f\u8bae\u662f\u5f88\u590d\u6742\u7684\uff0c\u5b83\u4eec\u628a\u8fde\u63a5\u4fe1\u606f\u653e\u5728\u6570\u636e\u5305\u91cc\uff0c\u5e76\u4e14\u8981\u6c42\u8fd9\u4e9b\u4fe1\u606f\u80fd\u88ab\u6b63\u786e\u7406\u89e3\u3002 INVALID INVALID\u610f\u5473\u7740\u8fd9\u4e2a\u62a5\u6587\u4e0d\u80fd\u88ab\u8bc6\u522b\u6216\u8005\u5b83\u6ca1\u6709\u4efb\u4f55\u72b6\u6001\u3002\u5bfc\u81f4\u8fd9\u4e2a\u7684\u539f\u56e0\u53ef\u80fd\u6709\u5f88\u591a\u79cd\uff0c\u4f8b\u5982\u5185\u5b58\u4e0d\u8db3\u6216\u548c\u8fd4\u56de\u7684ICMP\u6ca1\u6709\u5339\u914d\u4e0a\u4efb\u4f55\u8fde\u63a5\u3002\u4e00\u822c\u800c\u8a00\uff0c\u5728\u8fd9\u79cd\u72b6\u6001\u4e0b\u4e22\u5305\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002 UNTRACKED UNTRACKED\u72b6\u6001\uff0c\u7b80\u5355\u7684\u8bf4\uff0c\u62a5\u6587\u5728raw\u8868\u91cc\u9762\u88abNPTRACK target\u8fdb\u884c\u4e86\u6807\u8bb0\uff0c\u7136\u540e\u8fd9\u4e2a\u62a5\u6587\u5728\u8fde\u63a5\u8ddf\u8e2a\u8868\u91cc\u9762\u7684\u72b6\u6001\u5c31\u662fUNTRACKED\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4\u6240\u6709RELATED\u7684\u94fe\u63a5\u90fd\u770b\u4e0d\u5230\uff0c\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\u6211\u4eec\u9700\u8981\u4ed4\u7ec6\u8003\u8651\uff0c\u4f8b\u5982\u76f8\u5173\u7684ICMP\u62a5\u6587\u9700\u8981\u7279\u6b8a\u5904\u7406\u3002","title":"\u56db\u4e2a\u8fde\u63a5\u72b6\u6001"},{"location":"Other/iptables/#9","text":"ACCEPT DROP REJECT JUMP RETURN SNAT DNAT REDIRECT TOS TTL","title":"9\u4e2a\u52a8\u4f5c"},{"location":"Other/json/","text":"JSON\u603b\u7ed3 what JSON \u6307\u7684\u662f JavaScript \u5bf9\u8c61\u8868\u793a\u6cd5( j ava s cript O bject N otation) JSON \u662f\u8f7b\u91cf\u7ea7\u7684\u6587\u672c\u6570\u636e\u4ea4\u6362\u683c\u5f0f JSON \u6587\u4ef6\u7684\u6587\u4ef6\u7c7b\u578b\u662f\".json\" JSON \u6587\u672c\u7684 MIME \u7c7b\u578b\u662f\"application/json\" JSON \u540d\u79f0/\u503c\u5bf9 \u540d\u79f0/\u503c\u5bf9\u5305\u62ec\u5b57\u6bb5\u540d\u79f0\uff08\u5728\u53cc\u5f15\u53f7\u4e2d\uff09\uff0c\u540e\u9762\u5199\u4e00\u4e2a\u5192\u53f7\uff0c\u7136\u540e\u662f\u503c\uff1a \"name\" : \"convex\" JSON \u503c \u6570\u5b57\uff08\u6574\u6570\u6216\u6d6e\u70b9\u6570\uff09 \u5b57\u7b26\u4e32\uff08\u5728\u53cc\u5f15\u53f7\u4e2d\uff09 \u903b\u8f91\u503c\uff08true \u6216 false\uff09 \u6570\u7ec4\uff08\u5728\u4e2d\u62ec\u53f7\u4e2d\uff09 \u6570\u7ec4\u53ef\u5305\u542b\u591a\u4e2a\u5bf9\u8c61 \u5bf9\u8c61\uff08\u5728\u5927\u62ec\u53f7\u4e2d\uff09 \u5bf9\u8c61\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u540d\u79f0/\u503c\u5bf9 null","title":"Json"},{"location":"Other/json/#json","text":"","title":"JSON\u603b\u7ed3"},{"location":"Other/json/#what","text":"JSON \u6307\u7684\u662f JavaScript \u5bf9\u8c61\u8868\u793a\u6cd5( j ava s cript O bject N otation) JSON \u662f\u8f7b\u91cf\u7ea7\u7684\u6587\u672c\u6570\u636e\u4ea4\u6362\u683c\u5f0f JSON \u6587\u4ef6\u7684\u6587\u4ef6\u7c7b\u578b\u662f\".json\" JSON \u6587\u672c\u7684 MIME \u7c7b\u578b\u662f\"application/json\"","title":"what"},{"location":"Other/json/#json_1","text":"\u540d\u79f0/\u503c\u5bf9\u5305\u62ec\u5b57\u6bb5\u540d\u79f0\uff08\u5728\u53cc\u5f15\u53f7\u4e2d\uff09\uff0c\u540e\u9762\u5199\u4e00\u4e2a\u5192\u53f7\uff0c\u7136\u540e\u662f\u503c\uff1a \"name\" : \"convex\"","title":"JSON \u540d\u79f0/\u503c\u5bf9"},{"location":"Other/json/#json_2","text":"\u6570\u5b57\uff08\u6574\u6570\u6216\u6d6e\u70b9\u6570\uff09 \u5b57\u7b26\u4e32\uff08\u5728\u53cc\u5f15\u53f7\u4e2d\uff09 \u903b\u8f91\u503c\uff08true \u6216 false\uff09 \u6570\u7ec4\uff08\u5728\u4e2d\u62ec\u53f7\u4e2d\uff09 \u6570\u7ec4\u53ef\u5305\u542b\u591a\u4e2a\u5bf9\u8c61 \u5bf9\u8c61\uff08\u5728\u5927\u62ec\u53f7\u4e2d\uff09 \u5bf9\u8c61\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u540d\u79f0/\u503c\u5bf9 null","title":"JSON \u503c"},{"location":"Other/tcpdump/","text":"tcpdump - dump traffic on a network \u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\uff0c\u9ed8\u8ba4\u76d1\u542c\u7aef\u53e3\u53f7\u6700\u5c0f\u7684\u63a5\u53e3(\u9664\u7684loopback) root@ConvexLens:/tmp# ip l 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 2: enp3s0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP mode DEFAULT group default qlen 1000 link/ether 54:ee:75:aa:eb:d0 brd ff:ff:ff:ff:ff:ff 3: wlp2s0: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/ether 68:07:15:4a:d1:b6 brd ff:ff:ff:ff:ff:ff 4: vmnet1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UNKNOWN mode DEFAULT group default qlen 1000 link/ether 00:50:56:c0:00:01 brd ff:ff:ff:ff:ff:ff 5: vmnet2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UNKNOWN mode DEFAULT group default qlen 1000 link/ether 00:50:56:c0:00:02 brd ff:ff:ff:ff:ff:ff root@ConvexLens:/tmp# tcpdump tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp3s0, link-type EN10MB (Ethernet), capture size 262144 bytes 13:08:49.239656 ARP, Request who-has 10.1.1.204 tell 192.168.6.2, length 46 13:08:49.240655 IP ConvexLens.34303 > 192.168.11.254.domain: 26451+ PTR? 204.1.1.10.in-addr.arpa. (41) 13:08:49.245122 IP 192.168.11.254.domain > ConvexLens.34303: 26451 NXDomain 0/0/0 (41) 13:08:49.246635 IP ConvexLens.34303 > 192.168.11.254.domain: 16442+ PTR? 2.6.168.192.in-addr.arpa. (42) 13:08:49.254166 IP 192.168.11.254.domain > ConvexLens.34303: 16442 NXDomain 0/0/0 (42) 13:08:49.255176 IP ConvexLens.34303 > 192.168.11.254.domain: 27104+ PTR? 254.11.168.192.in-addr.arpa. (45) 13:08:49.263481 IP 192.168.11.254.domain > ConvexLens.34303: 27104 NXDomain 0/0/0 (45) 13:08:49.264418 IP ConvexLens.34303 > 192.168.11.254.domain: 49768+ PTR? 182.6.168.192.in-addr.arpa. (44) 13:08:49.337858 ARP, Request who-has 10.1.1.204 tell 192.168.6.2, length 46 13:08:49.370700 ARP, Request who-has 10.1.1.203 tell 192.168.6.2, length 46 13:08:49.371111 IP ConvexLens.34303 > 192.168.11.254.domain: 31212+ PTR? 203.1.1.10.in-addr.arpa. (41) \u4e0d\u8fdb\u884c\u57df\u540d\u53cd\u5411\u89e3\u6790 root@ConvexLens:/tmp# tcpdump -n tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp3s0, link-type EN10MB (Ethernet), capture size 262144 bytes 15:24:09.783230 ARP, Request who-has 10.1.1.204 tell 192.168.6.2, length 46 15:24:09.822255 ARP, Request who-has 10.1.1.203 tell 192.168.6.2, length 46 15:24:09.841595 IP 192.168.6.114.137 > 192.168.6.255.137: NBT UDP PACKET(137): QUERY; REQUEST; BROADCAST 15:24:09.907127 ARP, Request who-has 10.1.1.204 tell 192.168.6.2, length 46 15:24:09.942500 ARP, Request who-has 10.1.1.203 tell 192.168.6.2, length 46 15:24:10.003005 ARP, Request who-has 10.1.1.204 tell 192.168.6.2, length 46 15:24:10.042211 ARP, Request who-has 10.1.1.203 tell 192.168.6.2, length 46 15:24:10.067331 ARP, Request who-has 192.168.6.250 tell 192.168.6.146, length 46 15:24:10.119452 ARP, Request who-has 10.1.1.204 tell 192.168.6.2, length 46 15:24:10.162284 ARP, Request who-has 10.1.1.203 tell 192.168.6.2, length 46 \u8f93\u51fa\u8be6\u7ec6\u4fe1\u606f root@ConvexLens:/tmp# tcpdump -n -vvv tcpdump: listening on enp3s0, link-type EN10MB (Ethernet), capture size 262144 bytes 15:24:52.832911 ARP, Ethernet (len 6), IPv4 (len 4), Request who-has 10.1.1.204 tell 192.168.6.2, length 46 15:24:52.872734 ARP, Ethernet (len 6), IPv4 (len 4), Request who-has 10.1.1.203 tell 192.168.6.2, length 46 15:24:52.949794 ARP, Ethernet (len 6), IPv4 (len 4), Request who-has 10.1.1.204 tell 192.168.6.2, length 46 15:24:52.994125 ARP, Ethernet (len 6), IPv4 (len 4), Request who-has 10.1.1.203 tell 192.168.6.2, length 46 15:24:53.035647 IP (tos 0x0, ttl 1, id 9860, offset 0, flags [none], proto UDP (17), length 202) 192.168.6.31.64412 > 239.255.255.250.1900: [udp sum ok] UDP, length 174 15:24:53.732099 IP (tos 0x0, ttl 128, id 25173, offset 0, flags [none], proto UDP (17), length 214) 192.168.6.26.138 > 192.168.6.255.138: [udp sum ok] >>> NBT UDP PACKET(138) Res=0x110E ID=0x9E49 IP=192 (0xc0).168 (0xa8).6 (0x6).26 (0x1a) Port=138 (0x8a) Length=172 (0xac) Res2=0x0 SourceName=ZGC-01609071634 NameType=0x00 (Workstation) DestName=WORKGROUP NameType=0x1D (Master Browser) SMB PACKET: SMBtrans (REQUEST) SMB Command = 0x25 Error class = 0x0 Error code = 0 (0x0) Flags1 = 0x0 Flags2 = 0x0 Tree ID = 0 (0x0) Proc ID = 0 (0x0) UID = 0 (0x0) MID = 0 (0x0) Word Count = 17 (0x11) TotParamCnt=0 (0x0) TotDataCnt=18 (0x12) MaxParmCnt=0 (0x0) MaxDataCnt=0 (0x0) MaxSCnt=0 (0x0) TransFlags=0x0 Res1=0x3E8 Res2=0x0 Res3=0x0 ParamCnt=0 (0x0) ParamOff=0 (0x0) DataCnt=18 (0x12) DataOff=86 (0x56) SUCnt=3 (0x3) Data: (6 bytes) [000] 01 00 01 00 02 00 \\0x01\\0x00\\0x01\\0x00\\0x02\\0x00 smb_bcc=35 Name=\\MAILSLOT\\BROWSE BROWSE PACKET BROWSE PACKET: Type=0x2 (AnnouncementRequest) Flags=0x0 ReplySystemName=ZGC-01609071634 \u8fc7\u6ee4\u51fa\u6307\u5b9a\u4e3b\u673a root@ConvexLens:/tmp# tcpdump -n host 14.215.177.37 tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp3s0, link-type EN10MB (Ethernet), capture size 262144 bytes 15:27:01.542585 IP 192.168.6.182 > 14.215.177.37: ICMP echo request, id 24355, seq 21, length 64 15:27:01.547915 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 21, length 64 15:27:02.544348 IP 192.168.6.182 > 14.215.177.37: ICMP echo request, id 24355, seq 22, length 64 15:27:02.550032 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 22, length 64 15:27:03.546482 IP 192.168.6.182 > 14.215.177.37: ICMP echo request, id 24355, seq 23, length 64 15:27:03.550470 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 23, length 64 15:27:04.547915 IP 192.168.6.182 > 14.215.177.37: ICMP echo request, id 24355, seq 24, length 64 15:27:04.553313 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 24, length 64 15:27:05.549677 IP 192.168.6.182 > 14.215.177.37: ICMP echo request, id 24355, seq 25, length 64 15:27:05.555606 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 25, length 64 ^C 10 packets captured 10 packets received by filter 0 packets dropped by kernel \u8fc7\u6ee4\u51fa\u6307\u5b9a\u6e90\u4e3b\u673a root@ConvexLens:/tmp# tcpdump -n src host 14.215.177.37 tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp3s0, link-type EN10MB (Ethernet), capture size 262144 bytes 15:30:39.876442 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 239, length 64 15:30:40.880966 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 240, length 64 15:30:41.881024 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 241, length 64 15:30:42.882384 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 242, length 64 15:30:43.883563 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 243, length 64 ^C 5 packets captured 5 packets received by filter 0 packets dropped by kernel \u8fc7\u6ee4\u51fa\u6307\u5b9a\u76ee\u7684\u4e3b\u673a root@ConvexLens:/tmp# tcpdump -n dst host 14.215.177.37 tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp3s0, link-type EN10MB (Ethernet), capture size 262144 bytes 15:31:59.992532 IP 192.168.6.182 > 14.215.177.37: ICMP echo request, id 24355, seq 319, length 64 15:32:00.994024 IP 192.168.6.182 > 14.215.177.37: ICMP echo request, id 24355, seq 320, length 64 15:32:01.995293 IP 192.168.6.182 > 14.215.177.37: ICMP echo request, id 24355, seq 321, length 64 ^C 3 packets captured 3 packets received by filter 0 packets dropped by kernel \u8fc7\u6ee4\u51fa\u6307\u5b9a\u7aef\u53e3 root@ConvexLens:/tmp# tcpdump -n port 23 tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp3s0, link-type EN10MB (Ethernet), capture size 262144 bytes 15:41:16.968623 IP 192.168.6.182.55966 > 192.168.6.254.23: Flags [P.], seq 3658809552:3658809553, ack 942081465, win 29200, length 1 15:41:16.971060 IP 192.168.6.254.23 > 192.168.6.182.55966: Flags [P.], seq 1:13, ack 1, win 4068, length 12 15:41:17.007575 IP 192.168.6.182.55966 > 192.168.6.254.23: Flags [.], ack 13, win 29200, length 0 15:41:17.668639 IP 192.168.6.182.55966 > 192.168.6.254.23: Flags [P.], seq 1:2, ack 13, win 29200, length 1 15:41:17.671380 IP 192.168.6.254.23 > 192.168.6.182.55966: Flags [P.], seq 13:25, ack 2, win 4067, length 12 15:41:17.671434 IP 192.168.6.182.55966 > 192.168.6.254.23: Flags [.], ack 25, win 29200, length 0 15:41:17.929838 IP 192.168.6.182.55966 > 192.168.6.254.23: Flags [P.], seq 2:3, ack 25, win 29200, length 1 15:41:17.934175 IP 192.168.6.254.23 > 192.168.6.182.55966: Flags [P.], seq 25:44, ack 3, win 4066, length 19 15:41:17.934250 IP 192.168.6.182.55966 > 192.168.6.254.23: Flags [.], ack 44, win 29200, length 0 15:41:20.036016 IP 192.168.6.254.23 > 192.168.6.182.55966: Flags [FP.], seq 44, ack 3, win 4066, length 0 15:41:20.036142 IP 192.168.6.182.55966 > 192.168.6.254.23: Flags [F.], seq 3, ack 45, win 29200, length 0 15:41:20.036926 IP 192.168.6.254.23 > 192.168.6.182.55966: Flags [.], ack 4, win 4066, length 0 ^C 12 packets captured 12 packets received by filter 0 packets dropped by kernel ----------------------------------------------------------------------------------- root@ConvexLens:/tmp# tcpdump -n port 23 and port 56088 tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp3s0, link-type EN10MB (Ethernet), capture size 262144 bytes 15:45:32.211289 IP 192.168.6.182.56088 > 192.168.6.254.23: Flags [P.], seq 3885715605:3885715607, ack 1705423385, win 29200, length 2 15:45:32.213153 IP 192.168.6.254.23 > 192.168.6.182.56088: Flags [P.], seq 1:13, ack 2, win 4067, length 12 15:45:32.213218 IP 192.168.6.182.56088 > 192.168.6.254.23: Flags [.], ack 13, win 29200, length 0 ^C 3 packets captured 3 packets received by filter 0 packets dropped by kernel","title":"Tcpdump"},{"location":"Other/tcpdump/#tcpdump-dump-traffic-on-a-network","text":"","title":"tcpdump - dump traffic on a network"},{"location":"Other/tcpdump/#loopback","text":"root@ConvexLens:/tmp# ip l 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 2: enp3s0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP mode DEFAULT group default qlen 1000 link/ether 54:ee:75:aa:eb:d0 brd ff:ff:ff:ff:ff:ff 3: wlp2s0: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/ether 68:07:15:4a:d1:b6 brd ff:ff:ff:ff:ff:ff 4: vmnet1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UNKNOWN mode DEFAULT group default qlen 1000 link/ether 00:50:56:c0:00:01 brd ff:ff:ff:ff:ff:ff 5: vmnet2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UNKNOWN mode DEFAULT group default qlen 1000 link/ether 00:50:56:c0:00:02 brd ff:ff:ff:ff:ff:ff root@ConvexLens:/tmp# tcpdump tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp3s0, link-type EN10MB (Ethernet), capture size 262144 bytes 13:08:49.239656 ARP, Request who-has 10.1.1.204 tell 192.168.6.2, length 46 13:08:49.240655 IP ConvexLens.34303 > 192.168.11.254.domain: 26451+ PTR? 204.1.1.10.in-addr.arpa. (41) 13:08:49.245122 IP 192.168.11.254.domain > ConvexLens.34303: 26451 NXDomain 0/0/0 (41) 13:08:49.246635 IP ConvexLens.34303 > 192.168.11.254.domain: 16442+ PTR? 2.6.168.192.in-addr.arpa. (42) 13:08:49.254166 IP 192.168.11.254.domain > ConvexLens.34303: 16442 NXDomain 0/0/0 (42) 13:08:49.255176 IP ConvexLens.34303 > 192.168.11.254.domain: 27104+ PTR? 254.11.168.192.in-addr.arpa. (45) 13:08:49.263481 IP 192.168.11.254.domain > ConvexLens.34303: 27104 NXDomain 0/0/0 (45) 13:08:49.264418 IP ConvexLens.34303 > 192.168.11.254.domain: 49768+ PTR? 182.6.168.192.in-addr.arpa. (44) 13:08:49.337858 ARP, Request who-has 10.1.1.204 tell 192.168.6.2, length 46 13:08:49.370700 ARP, Request who-has 10.1.1.203 tell 192.168.6.2, length 46 13:08:49.371111 IP ConvexLens.34303 > 192.168.11.254.domain: 31212+ PTR? 203.1.1.10.in-addr.arpa. (41)","title":"\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\uff0c\u9ed8\u8ba4\u76d1\u542c\u7aef\u53e3\u53f7\u6700\u5c0f\u7684\u63a5\u53e3(\u9664\u7684loopback)"},{"location":"Other/tcpdump/#_1","text":"root@ConvexLens:/tmp# tcpdump -n tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp3s0, link-type EN10MB (Ethernet), capture size 262144 bytes 15:24:09.783230 ARP, Request who-has 10.1.1.204 tell 192.168.6.2, length 46 15:24:09.822255 ARP, Request who-has 10.1.1.203 tell 192.168.6.2, length 46 15:24:09.841595 IP 192.168.6.114.137 > 192.168.6.255.137: NBT UDP PACKET(137): QUERY; REQUEST; BROADCAST 15:24:09.907127 ARP, Request who-has 10.1.1.204 tell 192.168.6.2, length 46 15:24:09.942500 ARP, Request who-has 10.1.1.203 tell 192.168.6.2, length 46 15:24:10.003005 ARP, Request who-has 10.1.1.204 tell 192.168.6.2, length 46 15:24:10.042211 ARP, Request who-has 10.1.1.203 tell 192.168.6.2, length 46 15:24:10.067331 ARP, Request who-has 192.168.6.250 tell 192.168.6.146, length 46 15:24:10.119452 ARP, Request who-has 10.1.1.204 tell 192.168.6.2, length 46 15:24:10.162284 ARP, Request who-has 10.1.1.203 tell 192.168.6.2, length 46","title":"\u4e0d\u8fdb\u884c\u57df\u540d\u53cd\u5411\u89e3\u6790"},{"location":"Other/tcpdump/#_2","text":"root@ConvexLens:/tmp# tcpdump -n -vvv tcpdump: listening on enp3s0, link-type EN10MB (Ethernet), capture size 262144 bytes 15:24:52.832911 ARP, Ethernet (len 6), IPv4 (len 4), Request who-has 10.1.1.204 tell 192.168.6.2, length 46 15:24:52.872734 ARP, Ethernet (len 6), IPv4 (len 4), Request who-has 10.1.1.203 tell 192.168.6.2, length 46 15:24:52.949794 ARP, Ethernet (len 6), IPv4 (len 4), Request who-has 10.1.1.204 tell 192.168.6.2, length 46 15:24:52.994125 ARP, Ethernet (len 6), IPv4 (len 4), Request who-has 10.1.1.203 tell 192.168.6.2, length 46 15:24:53.035647 IP (tos 0x0, ttl 1, id 9860, offset 0, flags [none], proto UDP (17), length 202) 192.168.6.31.64412 > 239.255.255.250.1900: [udp sum ok] UDP, length 174 15:24:53.732099 IP (tos 0x0, ttl 128, id 25173, offset 0, flags [none], proto UDP (17), length 214) 192.168.6.26.138 > 192.168.6.255.138: [udp sum ok] >>> NBT UDP PACKET(138) Res=0x110E ID=0x9E49 IP=192 (0xc0).168 (0xa8).6 (0x6).26 (0x1a) Port=138 (0x8a) Length=172 (0xac) Res2=0x0 SourceName=ZGC-01609071634 NameType=0x00 (Workstation) DestName=WORKGROUP NameType=0x1D (Master Browser) SMB PACKET: SMBtrans (REQUEST) SMB Command = 0x25 Error class = 0x0 Error code = 0 (0x0) Flags1 = 0x0 Flags2 = 0x0 Tree ID = 0 (0x0) Proc ID = 0 (0x0) UID = 0 (0x0) MID = 0 (0x0) Word Count = 17 (0x11) TotParamCnt=0 (0x0) TotDataCnt=18 (0x12) MaxParmCnt=0 (0x0) MaxDataCnt=0 (0x0) MaxSCnt=0 (0x0) TransFlags=0x0 Res1=0x3E8 Res2=0x0 Res3=0x0 ParamCnt=0 (0x0) ParamOff=0 (0x0) DataCnt=18 (0x12) DataOff=86 (0x56) SUCnt=3 (0x3) Data: (6 bytes) [000] 01 00 01 00 02 00 \\0x01\\0x00\\0x01\\0x00\\0x02\\0x00 smb_bcc=35 Name=\\MAILSLOT\\BROWSE BROWSE PACKET BROWSE PACKET: Type=0x2 (AnnouncementRequest) Flags=0x0 ReplySystemName=ZGC-01609071634","title":"\u8f93\u51fa\u8be6\u7ec6\u4fe1\u606f"},{"location":"Other/tcpdump/#_3","text":"root@ConvexLens:/tmp# tcpdump -n host 14.215.177.37 tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp3s0, link-type EN10MB (Ethernet), capture size 262144 bytes 15:27:01.542585 IP 192.168.6.182 > 14.215.177.37: ICMP echo request, id 24355, seq 21, length 64 15:27:01.547915 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 21, length 64 15:27:02.544348 IP 192.168.6.182 > 14.215.177.37: ICMP echo request, id 24355, seq 22, length 64 15:27:02.550032 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 22, length 64 15:27:03.546482 IP 192.168.6.182 > 14.215.177.37: ICMP echo request, id 24355, seq 23, length 64 15:27:03.550470 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 23, length 64 15:27:04.547915 IP 192.168.6.182 > 14.215.177.37: ICMP echo request, id 24355, seq 24, length 64 15:27:04.553313 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 24, length 64 15:27:05.549677 IP 192.168.6.182 > 14.215.177.37: ICMP echo request, id 24355, seq 25, length 64 15:27:05.555606 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 25, length 64 ^C 10 packets captured 10 packets received by filter 0 packets dropped by kernel","title":"\u8fc7\u6ee4\u51fa\u6307\u5b9a\u4e3b\u673a"},{"location":"Other/tcpdump/#_4","text":"root@ConvexLens:/tmp# tcpdump -n src host 14.215.177.37 tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp3s0, link-type EN10MB (Ethernet), capture size 262144 bytes 15:30:39.876442 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 239, length 64 15:30:40.880966 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 240, length 64 15:30:41.881024 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 241, length 64 15:30:42.882384 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 242, length 64 15:30:43.883563 IP 14.215.177.37 > 192.168.6.182: ICMP echo reply, id 24355, seq 243, length 64 ^C 5 packets captured 5 packets received by filter 0 packets dropped by kernel","title":"\u8fc7\u6ee4\u51fa\u6307\u5b9a\u6e90\u4e3b\u673a"},{"location":"Other/tcpdump/#_5","text":"root@ConvexLens:/tmp# tcpdump -n dst host 14.215.177.37 tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp3s0, link-type EN10MB (Ethernet), capture size 262144 bytes 15:31:59.992532 IP 192.168.6.182 > 14.215.177.37: ICMP echo request, id 24355, seq 319, length 64 15:32:00.994024 IP 192.168.6.182 > 14.215.177.37: ICMP echo request, id 24355, seq 320, length 64 15:32:01.995293 IP 192.168.6.182 > 14.215.177.37: ICMP echo request, id 24355, seq 321, length 64 ^C 3 packets captured 3 packets received by filter 0 packets dropped by kernel","title":"\u8fc7\u6ee4\u51fa\u6307\u5b9a\u76ee\u7684\u4e3b\u673a"},{"location":"Other/tcpdump/#_6","text":"root@ConvexLens:/tmp# tcpdump -n port 23 tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp3s0, link-type EN10MB (Ethernet), capture size 262144 bytes 15:41:16.968623 IP 192.168.6.182.55966 > 192.168.6.254.23: Flags [P.], seq 3658809552:3658809553, ack 942081465, win 29200, length 1 15:41:16.971060 IP 192.168.6.254.23 > 192.168.6.182.55966: Flags [P.], seq 1:13, ack 1, win 4068, length 12 15:41:17.007575 IP 192.168.6.182.55966 > 192.168.6.254.23: Flags [.], ack 13, win 29200, length 0 15:41:17.668639 IP 192.168.6.182.55966 > 192.168.6.254.23: Flags [P.], seq 1:2, ack 13, win 29200, length 1 15:41:17.671380 IP 192.168.6.254.23 > 192.168.6.182.55966: Flags [P.], seq 13:25, ack 2, win 4067, length 12 15:41:17.671434 IP 192.168.6.182.55966 > 192.168.6.254.23: Flags [.], ack 25, win 29200, length 0 15:41:17.929838 IP 192.168.6.182.55966 > 192.168.6.254.23: Flags [P.], seq 2:3, ack 25, win 29200, length 1 15:41:17.934175 IP 192.168.6.254.23 > 192.168.6.182.55966: Flags [P.], seq 25:44, ack 3, win 4066, length 19 15:41:17.934250 IP 192.168.6.182.55966 > 192.168.6.254.23: Flags [.], ack 44, win 29200, length 0 15:41:20.036016 IP 192.168.6.254.23 > 192.168.6.182.55966: Flags [FP.], seq 44, ack 3, win 4066, length 0 15:41:20.036142 IP 192.168.6.182.55966 > 192.168.6.254.23: Flags [F.], seq 3, ack 45, win 29200, length 0 15:41:20.036926 IP 192.168.6.254.23 > 192.168.6.182.55966: Flags [.], ack 4, win 4066, length 0 ^C 12 packets captured 12 packets received by filter 0 packets dropped by kernel ----------------------------------------------------------------------------------- root@ConvexLens:/tmp# tcpdump -n port 23 and port 56088 tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp3s0, link-type EN10MB (Ethernet), capture size 262144 bytes 15:45:32.211289 IP 192.168.6.182.56088 > 192.168.6.254.23: Flags [P.], seq 3885715605:3885715607, ack 1705423385, win 29200, length 2 15:45:32.213153 IP 192.168.6.254.23 > 192.168.6.182.56088: Flags [P.], seq 1:13, ack 2, win 4067, length 12 15:45:32.213218 IP 192.168.6.182.56088 > 192.168.6.254.23: Flags [.], ack 13, win 29200, length 0 ^C 3 packets captured 3 packets received by filter 0 packets dropped by kernel","title":"\u8fc7\u6ee4\u51fa\u6307\u5b9a\u7aef\u53e3"},{"location":"python/Untitled/","text":"","title":"Untitled"},{"location":"python/generator/","text":"\u751f\u6210\u5668(generator) \u5b9a\u4e49 \u751f\u6210\u5668 \u662f\u4e00\u79cd\u4f7f\u7528\u666e\u901a\u51fd\u6570\u8bed\u6cd5\u5b9a\u4e49\u7684\u8fed\u4ee3\u5668 \u4f7f\u7528 \u5305\u542byield\u8bed\u53e5\u7684\u51fd\u6570 \u751f\u6210\u5668\u63a8\u5bfc \u7279\u5f81 \u6bcf\u6b21\u6267\u884cyield\u540e\uff0c\u5c31\u4f1a\u6253\u4e0a\u65ad\u70b9\u5e76\u8fd4\u56de\u540e\u9762\u7684\u503c \u8c03\u7528 for \u8bed\u53e5 next\u51fd\u6570 send\u65b9\u6cd5 next\u4e0esend\u7684\u533a\u522b \u4e24\u8005\u90fd\u53ef\u4ee5\u8fed\u4ee3\u751f\u6210\u5668\uff0c\u7ee7\u7eed\u65ad\u70b9\u3002\u4f46next\u4e0d\u80fd\u4f20\u53c2\uff0csend\u53ef\u4ee5\uff0c\u5e76\u5c06\u53c2\u6570\u4f5c\u4e3a\u8868\u8fbe\u5f0f\u7ed3\u679c\uff08next\u6b64\u65f6\u8868\u8fbe\u5f0f\u7ed3\u679c\u4e3aNone\uff09","title":"Generator"},{"location":"python/generator/#generator","text":"","title":"\u751f\u6210\u5668(generator)"},{"location":"python/generator/#_1","text":"\u751f\u6210\u5668 \u662f\u4e00\u79cd\u4f7f\u7528\u666e\u901a\u51fd\u6570\u8bed\u6cd5\u5b9a\u4e49\u7684\u8fed\u4ee3\u5668","title":"\u5b9a\u4e49"},{"location":"python/generator/#_2","text":"\u5305\u542byield\u8bed\u53e5\u7684\u51fd\u6570 \u751f\u6210\u5668\u63a8\u5bfc","title":"\u4f7f\u7528"},{"location":"python/generator/#_3","text":"\u6bcf\u6b21\u6267\u884cyield\u540e\uff0c\u5c31\u4f1a\u6253\u4e0a\u65ad\u70b9\u5e76\u8fd4\u56de\u540e\u9762\u7684\u503c","title":"\u7279\u5f81"},{"location":"python/generator/#_4","text":"for \u8bed\u53e5 next\u51fd\u6570 send\u65b9\u6cd5","title":"\u8c03\u7528"},{"location":"python/generator/#nextsend","text":"\u4e24\u8005\u90fd\u53ef\u4ee5\u8fed\u4ee3\u751f\u6210\u5668\uff0c\u7ee7\u7eed\u65ad\u70b9\u3002\u4f46next\u4e0d\u80fd\u4f20\u53c2\uff0csend\u53ef\u4ee5\uff0c\u5e76\u5c06\u53c2\u6570\u4f5c\u4e3a\u8868\u8fbe\u5f0f\u7ed3\u679c\uff08next\u6b64\u65f6\u8868\u8fbe\u5f0f\u7ed3\u679c\u4e3aNone\uff09","title":"next\u4e0esend\u7684\u533a\u522b"},{"location":"python/lambda/","text":"\u5173\u952e\u5b57 lambda \u8868\u793a\u533f\u540d\u51fd\u6570 #lambda x: x * x \u7b49\u4ef7\u4e8e\uff1a def f(x): return x * x \u533f\u540d\u51fd\u6570\u6709\u4e2a\u9650\u5236\uff0c\u5c31\u662f\u53ea\u80fd\u6709\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u4e0d\u7528\u5199 return \uff0c\u8fd4\u56de\u503c\u5c31\u662f\u8be5\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c \u597d\u5904\u662f\u56e0\u4e3a\u51fd\u6570\u6ca1\u6709\u540d\u5b57\uff0c\u4e0d\u5fc5\u62c5\u5fc3\u51fd\u6570\u540d\u51b2\u7a81 >>> f = lambda x: x * x >>> f <function <lambda> at 0x101c6ef28> >>> f(5) 25 def build(x, y): return lambda: x * x + y * y","title":"Lambda"},{"location":"python/Django/models/","text":"class Question(models.Model): question_text = models.CharField(max_length = 200) pub_date = models.DateTimeField('date published') def __str__(self): return self.question_text def was_published_recently(self): now = timezone.now() return now - datetime.timedelta(days=1) <= self.pub_date <= now was_published_recently.admin_order_field = 'pub_date' was_published_recently.boolean = True was_published_recently.short_description = 'Published recently?' \u5bf9\u5e94\u6570\u636e\u5e93\u7684\u4e00\u5f20\u8868\uff1a mysql> DESC polls_question; +---------------+--------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +---------------+--------------+------+-----+---------+----------------+ | id | int(11) | NO | PRI | NULL | auto_increment | | question_text | varchar(200) | NO | | NULL | | | pub_date | datetime(6) | NO | | NULL | | +---------------+--------------+------+-----+---------+----------------+ 3 rows in set (0.01 sec) class Choice(models.Model): question = models.ForeignKey(Question, on_delete = models.CASCADE) choice_text = models.CharField(max_length = 200) votes = models.IntegerField(default=0) def __str__(self): return self.choice_text mysql> DESC polls_choice; +-------------+--------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +-------------+--------------+------+-----+---------+----------------+ | id | int(11) | NO | PRI | NULL | auto_increment | | choice_text | varchar(200) | NO | | NULL | | | votes | int(11) | NO | | NULL | | | question_id | int(11) | NO | MUL | NULL | | +-------------+--------------+------+-----+---------+----------------+ 4 rows in set (0.00 sec)","title":"Models"},{"location":"python/Django/urlpatterns/","text":"from django.contrib import admin from django.urls import include, path urlpatterns = [ path('polls/', include('polls.urls')), path('admin/', admin.site.urls), ] \u51fd\u6570 include() \u5141\u8bb8\u5f15\u7528\u5176\u5b83 URLconfs\u3002\u6bcf\u5f53 Django \u9047\u5230 :func\uff1a~django.urls.include \u65f6\uff0c\u5b83\u4f1a\u622a\u65ad\u4e0e\u6b64\u9879\u5339\u914d\u7684 URL \u7684\u90e8\u5206\uff0c\u5e76\u5c06\u5269\u4f59\u7684\u5b57\u7b26\u4e32\u53d1\u9001\u5230 URLconf \u4ee5\u4f9b\u8fdb\u4e00\u6b65\u5904\u7406\u3002 \u51fd\u6570 path() \u5177\u6709\u56db\u4e2a\u53c2\u6570\uff0c\u4e24\u4e2a\u5fc5\u987b\u53c2\u6570\uff1a route \u548c view \uff0c\u4e24\u4e2a\u53ef\u9009\u53c2\u6570\uff1a kwargs \u548c name \u3002 route route \u662f\u4e00\u4e2a\u5339\u914d URL \u7684\u51c6\u5219\uff08\u7c7b\u4f3c\u6b63\u5219\u8868\u8fbe\u5f0f\uff09\u3002\u5f53 Django \u54cd\u5e94\u4e00\u4e2a\u8bf7\u6c42\u65f6\uff0c\u5b83\u4f1a\u4ece urlpatterns \u7684\u7b2c\u4e00\u9879\u5f00\u59cb\uff0c\u6309\u987a\u5e8f\u4f9d\u6b21\u5339\u914d\u5217\u8868\u4e2d\u7684\u9879\uff0c\u76f4\u5230\u627e\u5230\u5339\u914d\u7684\u9879\u3002 \u8fd9\u4e9b\u51c6\u5219\u4e0d\u4f1a\u5339\u914d GET \u548c POST \u53c2\u6570\u6216\u57df\u540d\u3002\u4f8b\u5982\uff0cURLconf \u5728\u5904\u7406\u8bf7\u6c42 https://www.example.com/myapp/ \u65f6\uff0c\u5b83\u4f1a\u5c1d\u8bd5\u5339\u914d myapp/ \u3002\u5904\u7406\u8bf7\u6c42 https://www.example.com/myapp/?page=3 \u65f6\uff0c\u4e5f\u53ea\u4f1a\u5c1d\u8bd5\u5339\u914d myapp/\u3002 view \u5f53 Django \u627e\u5230\u4e86\u4e00\u4e2a\u5339\u914d\u7684\u51c6\u5219\uff0c\u5c31\u4f1a\u8c03\u7528\u8fd9\u4e2a\u7279\u5b9a\u7684\u89c6\u56fe\u51fd\u6570\uff0c\u5e76\u4f20\u5165\u4e00\u4e2a HttpRequest \u5bf9\u8c61\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u88ab\u201c\u6355\u83b7\u201d\u7684\u53c2\u6570\u4ee5\u5173\u952e\u5b57\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u5165\u3002 kwargs \u4efb\u610f\u4e2a\u5173\u952e\u5b57\u53c2\u6570\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u5178\u4f20\u9012\u7ed9\u76ee\u6807\u89c6\u56fe\u51fd\u6570\u3002 name \u4e3a\u4f60\u7684 URL \u53d6\u540d\u80fd\u4f7f\u4f60\u5728 Django \u7684\u4efb\u610f\u5730\u65b9\u552f\u4e00\u5730\u5f15\u7528\u5b83\uff0c\u5c24\u5176\u662f\u5728\u6a21\u677f\u4e2d\u3002\u8fd9\u4e2a\u6709\u7528\u7684\u7279\u6027\u5141\u8bb8\u4f60\u53ea\u6539\u4e00\u4e2a\u6587\u4ef6\u5c31\u80fd\u5168\u5c40\u5730\u4fee\u6539\u67d0\u4e2a URL \u6a21\u5f0f\u3002","title":"Urlpatterns"},{"location":"python/issue/\u4e00\u6b21\u65b9\u6cd5\u7684\u9519\u8bef\u4f7f\u7528/","text":">>> x = {'username': 'admin', 'machines': ['foo', 'bar', 'baz']} >>> y = x.copy >>> y['username'] = 'mlh' Traceback (most recent call last): File \"<stdin>\", line 1, in <module> TypeError: 'builtin_function_or_method' object does not support item assignment >>> y['username'] Traceback (most recent call last): File \"<stdin>\", line 1, in <module> TypeError: 'builtin_function_or_method' object is not subscriptable >>> x['username'] 'admin' >>> y <built-in method copy of dict object at 0x7fe1f75e4360> >>> x.copy <built-in method copy of dict object at 0x7fe1f75e4360> >>> y() {'username': 'admin', 'machines': ['foo', 'bar', 'baz']} \u5728\u4f7f\u7528\u5b57\u5178\u65b9\u6cd5copy\u65f6\uff0c\u672a\u4f7f\u7528()\uff1a y = x.copy \uff0c\u9020\u6210 y \u4e0e x.copy \u7684\u65b9\u6cd5\u5173\u8054\uff0c\u800c\u975e\u6267\u884c\u65b9\u6cd5\u540e\u7684\u8fd4\u56de\u503c \u6ce8\u610f\uff0c\u65b9\u6cd5\u3001\u51fd\u6570\u7684\u6807\u8bc6\u7b26\u540e\u6ca1\u6709()\u65f6\uff0c\u5176\u610f\u5473\u7740\u65b9\u6cd5\u6216\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u7684\u4f4d\u7f6e\uff0c\u53ea\u6709\u540e\u9762\u5b58\u5728()\uff0c\u624d\u4f1a\u6267\u884c\u65b9\u6cd5\u6216\u51fd\u6570\u3002","title":"\u4e00\u6b21\u65b9\u6cd5\u7684\u9519\u8bef\u4f7f\u7528"},{"location":"python/issue/\u5b57\u7b26\u4e32sort\u65e0\u8fd4\u56de\u503c/","text":">>> def search(sequence, lower = 0, upper = None): ... if upper == None: ... upper = len(sequence) - 1 ... sequence = sequence.copy().sort() ... if lower == upper: ... print(sequence[lower]) ... else: ... middle = (lower + upper) // 2 ... greater = input('greater {}?(y/N) '.format(sequence[middle])).lower() ... if greater == 'y': ... search(sequence, middle + 1, upper) ... elif (greater == 'n') or (greater == ''): ... search(sequence, lower, middle) ... >>> >>> seq = [34, 64, 8, 123, 4, 100, 95] >>> search(seq) Traceback (most recent call last): File \"<stdin>\", line 1, in <module> File \"<stdin>\", line 9, in search TypeError: 'NoneType' object is not subscriptable \u5728\u4f7f\u7528\u5b57\u7b26\u4e32\u65b9\u6cd5sort\u65f6\uff0c\u672a\u6ce8\u610f\u5176\u65e0\u8fd4\u56de\u503c\uff0c\u5f15\u8d77\u53d8\u91cf sqeuence \u503c\u4e3a None \u3002\u5728\u6267\u884c\u51fd\u6570search\u7684\u7b2c9\u884c\u65f6(\u884c\u6570\u4ece\u51fd\u6570\u7684\u5b9a\u4e49def\u5f00\u59cb\u6570)\uff0c\u5f15\u53d1TyperError\u3002\u6545\u5c06\u51fd\u6570\u4fee\u6539\u4e3a\uff1a def search(sequence, lower = 0, upper = None): if upper == None: sequence = sorted(sequence.copy()) upper = len(sequence) - 1 if lower == upper: print(sequence[lower]) else: middle = (lower + upper) // 2 greater = input('greater {}?(y/N) '.format(sequence[middle])).lower() if greater == 'y': search(sequence, middle + 1, upper) elif (greater == 'n') or (greater == ''): search(sequence, lower, middle)","title":"\u5b57\u7b26\u4e32sort\u65e0\u8fd4\u56de\u503c"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e00\u7ae0/","text":"\u7b2c\u4e00\u7ae0 python\u662f\u4e00\u79cd\u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u5176\u4e00\u884c\u4e00\u884c\u5904\u7406\u8bed\u53e5 \u6574\u9664\u8fd0\u7b97 // python x % y = x - ((x // y) * y) \u5bf9\u4e8e\u6574\u9664\u8fd0\u7b97\uff0c\u91cd\u70b9\u662f\u5b83\u5411\u4e0b\u5706\u6574\u3002 -10 // 3 = -4 \u4e58\u65b9\u8fd0\u7b97\u7684\u4f18\u5148\u7ea7\u6bd4\u6c42\u8d1f(\u5355\u76ee\u51cf) \u9ad8 \u6574\u578b\u6570\u503c\u7684\u8868\u8fbe\uff1a \u5341\u516d\u8fdb\u5236\uff1a 0xAF \u516b\u8fdb\u5236\uff1a 010 \u4e8c\u8fdb\u5236\uff1a 0b1011010010 \u5341\u8fdb\u5236\uff1a123 \u4f7f\u7528python\u53d8\u91cf\u524d\u5fc5\u987b\u7ed9\u5b83\u8d4b\u503c\uff0c\u56e0\u4e3apython\u53d8\u91cf\u6ca1\u6709\u9ed8\u8ba4\u503c \u8868\u8fbe\u5f0f\u662f\u4e00\u4e9b\u4e1c\u897f\uff0c\u800c\u8bed\u53e5\u505a\u4e00\u4e9b\u4e8b\u60c5\u3002\u6240\u6709\u8bed\u53e5\u7684\u4e00\u4e2a\u6839\u672c\u7279\u5f81\uff1a\u6267\u884c\u4fee\u6539\u64cd\u4f5c\u3002 \u9274\u4e8e\u51fd\u6570\u8c03\u7528\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u56e0\u6b64\u5b83\u4eec\u4e5f\u662f\u8868\u8fbe\u5f0f \u53ef\u5c06\u6a21\u5757\u89c6\u4e3a\u6269\u5c55\uff0c\u901a\u8fc7\u5c06\u5176\u5bfc\u5165\u53ef\u4ee5\u6269\u5c55python\u529f\u80fd\uff1a import \u901a\u8fc7 module.function \u7684\u65b9\u5f0f\u4f7f\u7528\u6a21\u5757\u4e2d\u7684\u51fd\u6570 \u53ef\u4ee5\u901a\u8fc7 from module import function \u5bfc\u5165\u51fd\u6570\uff0c\u5728\u8c03\u7528\u65f6\u65e0\u9700\u6307\u5b9a\u6a21\u5757\u524d\u7f00 \u53ef\u4ee5\u901a\u8fc7\u53d8\u91cf\u6765\u5f15\u7528\u51fd\u6570 foo = math.sqrt , foo(4) = 2.0 PS\uff1a foo\u6307\u5411math.sqrt\u51fd\u6570\u5185\u5b58\u5730\u5740\uff0c\u8ddf()\u540e\uff0c\u4e3a\u6267\u884c\u8be5\u6bb5\u51fd\u6570\u4ee3\u7801 \u5728\u4ee3\u7801\u4e2d\uff0c # \u540e\u9762\u5230\u884c\u5c3e\u7684\u6240\u6709\u5185\u5bb9\u90fd\u5c06\u88ab\u5ffd\u7565 \u5b57\u7b26\u4e32\u7c7b\u578b \u4f7f\u7528 \u5355\u5f15\u53f7 \u6216 \u53cc\u5f15\u53f7 \u65e0\u5dee\u522b \u5728\u5b57\u7b26\u4e32\u7c7b\u578b\u4e2d\u53ef\u4ee5\u901a\u8fc7 \u8f6c\u4e49\u5b57\u7b26\\ \u8868\u793a\u7269\u6b8a\u5b57\u7b26 \u4f7f\u7528 str \u80fd\u4ee5\u5408\u7406\u7684\u65b9\u5f0f\u5c06\u503c\u8f6c\u6362\u4e3a\u7528\u6237\u80fd\u591f\u770b\u61c2\u7684\u5b57\u7b26\u4e32\uff0c\u4f7f\u7528 repr \u901a\u5e38\u4f1a\u83b7\u5f97\u503c\u7684\u5408\u6cd5python\u8868\u8fbe\u5f0f \u957f\u5b57\u7b26\u4e32\u901a\u8fc7\u4e09\u5f15\u53f7 \u2018\u2019\u2018 \u6216 \u201c\u201d\u201c \u8868\u793a\uff0c\u5176\u53ef\u4ee5\u901a\u8fc7\u591a\u884c\u6765\u8868\u793a\u5b57\u7b26\u4e32\u3002\u5373\u65e0\u9700\u901a\u8fc7 \\ \u8f6c\u4e49\u56de\u8f66 \u539f\u59cb\u5b57\u7b26\u4e32\u7528\u524d\u7f00 r \u8868\u793a\u3002 PS\uff1a \u5176\u4e0e\u51fd\u6570 repr \u4e0d\u901a\u4e4b\u5904\u5728\u4e8e\uff0c\u524d\u8005\u662f\u76f4\u63a5\u7684\u8868\u8fbe\u65b9\u5f0f\uff0c\u540e\u8005\u662f\u8c03\u7528\u51fd\u6570\u540e\u7684\u8fd4\u56de\u503c \u5b57\u7b26\u4e32\u7684\u7684\u8868\u8fbe\uff1a \u57fa\u672c\u8868\u8fbe\u65b9\u5f0f\uff1a\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u62ec\u8d77 \u957f\u5b57\u7b26\u4e32\uff1a\u4e09\u5f15\u53f7\u62ec\u8d77 \u539f\u59cb\u5b57\u7b26\u4e32\uff1a\u589e\u52a0\u524d\u7f00 r \u53ef\u4ee5\u901a\u8fc7 \\u \uff0c \\U , \\N{name} \u7684\u65b9\u5f0f\u6307\u5b9aUnicode\u5b57\u7b26\u96c6 ```python \"\\u00C6\" '\u00c6' \"\\U0001F60A\" '\ud83d\ude0a' \"This is a cat: \\N{Cat}\" 'This is a cat: \ud83d\udc08' ``` \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u524d\u7f00 b \uff0c\u4ee5bytes\u7684\u65b9\u5f0f\u8868\u8fbe\u5b57\u7b26\u4e32 ```python b'Hello, World!' #\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7ASCII\u5b57\u7b26\u8868\u793a b'Hello, World!' b'H\\xc3\\xa611\\xc3\\xa5, w\\xc3\\xb8rld!' #\u4e5f\u53ef\u4ee5\u901a\u8fc7 \\x + 16\u8fdb\u5236 \u8868\u793a b'H\\xc3\\xa611\\xc3\\xa5, w\\xc3\\xb8rld!' b'H\\xc3\\xa611\\xc3\\xa5, w\\xc3\\xb8rld!'.decode(\"utf-8\") #\u53ea\u4f1a\u4f7f\u7528\u4e86decode\u65b9\u6cd5\u540e\uff0c\u624d\u4f1a\u4ee5\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u8868\u8fbe 'H\u00e611\u00e5, w\u00f8rld!' b'Hello, World!'.decode() #\u9ed8\u8ba4\u4ee5utf-8\u89e3\u7801 'Hello, World!' b'H\\xc3\\xa611\\xc3\\xa5, w\\xc3\\xb8rld!'.decode() #\u9ed8\u8ba4\u4ee5utf-8\u89e3\u7801 'H\u00e611\u00e5, w\u00f8rld!' b'H\\xc3a611c3a5, w\\xc3\\xb8rld!'.decode() #\u56e0utf-8\u4e3a\u975e\u5b9a\u957f\u7684\u7f16\u7801\uff0c\u5fc5\u987b\u7528\\x\u7684\u65b9\u5f0f\u5206\u9694\u6bcf\u4e2a\u5b57\u7b26 Traceback (most recent call last): File \" \", line 1, in UnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 1: invalid continuation byte ```","title":"\u7b2c\u4e00\u7ae0"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e00\u7ae0/#_1","text":"python\u662f\u4e00\u79cd\u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u5176\u4e00\u884c\u4e00\u884c\u5904\u7406\u8bed\u53e5 \u6574\u9664\u8fd0\u7b97 // python x % y = x - ((x // y) * y) \u5bf9\u4e8e\u6574\u9664\u8fd0\u7b97\uff0c\u91cd\u70b9\u662f\u5b83\u5411\u4e0b\u5706\u6574\u3002 -10 // 3 = -4 \u4e58\u65b9\u8fd0\u7b97\u7684\u4f18\u5148\u7ea7\u6bd4\u6c42\u8d1f(\u5355\u76ee\u51cf) \u9ad8 \u6574\u578b\u6570\u503c\u7684\u8868\u8fbe\uff1a \u5341\u516d\u8fdb\u5236\uff1a 0xAF \u516b\u8fdb\u5236\uff1a 010 \u4e8c\u8fdb\u5236\uff1a 0b1011010010 \u5341\u8fdb\u5236\uff1a123 \u4f7f\u7528python\u53d8\u91cf\u524d\u5fc5\u987b\u7ed9\u5b83\u8d4b\u503c\uff0c\u56e0\u4e3apython\u53d8\u91cf\u6ca1\u6709\u9ed8\u8ba4\u503c \u8868\u8fbe\u5f0f\u662f\u4e00\u4e9b\u4e1c\u897f\uff0c\u800c\u8bed\u53e5\u505a\u4e00\u4e9b\u4e8b\u60c5\u3002\u6240\u6709\u8bed\u53e5\u7684\u4e00\u4e2a\u6839\u672c\u7279\u5f81\uff1a\u6267\u884c\u4fee\u6539\u64cd\u4f5c\u3002 \u9274\u4e8e\u51fd\u6570\u8c03\u7528\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u56e0\u6b64\u5b83\u4eec\u4e5f\u662f\u8868\u8fbe\u5f0f \u53ef\u5c06\u6a21\u5757\u89c6\u4e3a\u6269\u5c55\uff0c\u901a\u8fc7\u5c06\u5176\u5bfc\u5165\u53ef\u4ee5\u6269\u5c55python\u529f\u80fd\uff1a import \u901a\u8fc7 module.function \u7684\u65b9\u5f0f\u4f7f\u7528\u6a21\u5757\u4e2d\u7684\u51fd\u6570 \u53ef\u4ee5\u901a\u8fc7 from module import function \u5bfc\u5165\u51fd\u6570\uff0c\u5728\u8c03\u7528\u65f6\u65e0\u9700\u6307\u5b9a\u6a21\u5757\u524d\u7f00 \u53ef\u4ee5\u901a\u8fc7\u53d8\u91cf\u6765\u5f15\u7528\u51fd\u6570 foo = math.sqrt , foo(4) = 2.0 PS\uff1a foo\u6307\u5411math.sqrt\u51fd\u6570\u5185\u5b58\u5730\u5740\uff0c\u8ddf()\u540e\uff0c\u4e3a\u6267\u884c\u8be5\u6bb5\u51fd\u6570\u4ee3\u7801 \u5728\u4ee3\u7801\u4e2d\uff0c # \u540e\u9762\u5230\u884c\u5c3e\u7684\u6240\u6709\u5185\u5bb9\u90fd\u5c06\u88ab\u5ffd\u7565 \u5b57\u7b26\u4e32\u7c7b\u578b \u4f7f\u7528 \u5355\u5f15\u53f7 \u6216 \u53cc\u5f15\u53f7 \u65e0\u5dee\u522b \u5728\u5b57\u7b26\u4e32\u7c7b\u578b\u4e2d\u53ef\u4ee5\u901a\u8fc7 \u8f6c\u4e49\u5b57\u7b26\\ \u8868\u793a\u7269\u6b8a\u5b57\u7b26 \u4f7f\u7528 str \u80fd\u4ee5\u5408\u7406\u7684\u65b9\u5f0f\u5c06\u503c\u8f6c\u6362\u4e3a\u7528\u6237\u80fd\u591f\u770b\u61c2\u7684\u5b57\u7b26\u4e32\uff0c\u4f7f\u7528 repr \u901a\u5e38\u4f1a\u83b7\u5f97\u503c\u7684\u5408\u6cd5python\u8868\u8fbe\u5f0f \u957f\u5b57\u7b26\u4e32\u901a\u8fc7\u4e09\u5f15\u53f7 \u2018\u2019\u2018 \u6216 \u201c\u201d\u201c \u8868\u793a\uff0c\u5176\u53ef\u4ee5\u901a\u8fc7\u591a\u884c\u6765\u8868\u793a\u5b57\u7b26\u4e32\u3002\u5373\u65e0\u9700\u901a\u8fc7 \\ \u8f6c\u4e49\u56de\u8f66 \u539f\u59cb\u5b57\u7b26\u4e32\u7528\u524d\u7f00 r \u8868\u793a\u3002 PS\uff1a \u5176\u4e0e\u51fd\u6570 repr \u4e0d\u901a\u4e4b\u5904\u5728\u4e8e\uff0c\u524d\u8005\u662f\u76f4\u63a5\u7684\u8868\u8fbe\u65b9\u5f0f\uff0c\u540e\u8005\u662f\u8c03\u7528\u51fd\u6570\u540e\u7684\u8fd4\u56de\u503c \u5b57\u7b26\u4e32\u7684\u7684\u8868\u8fbe\uff1a \u57fa\u672c\u8868\u8fbe\u65b9\u5f0f\uff1a\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u62ec\u8d77 \u957f\u5b57\u7b26\u4e32\uff1a\u4e09\u5f15\u53f7\u62ec\u8d77 \u539f\u59cb\u5b57\u7b26\u4e32\uff1a\u589e\u52a0\u524d\u7f00 r \u53ef\u4ee5\u901a\u8fc7 \\u \uff0c \\U , \\N{name} \u7684\u65b9\u5f0f\u6307\u5b9aUnicode\u5b57\u7b26\u96c6 ```python \"\\u00C6\" '\u00c6' \"\\U0001F60A\" '\ud83d\ude0a' \"This is a cat: \\N{Cat}\" 'This is a cat: \ud83d\udc08' ``` \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u524d\u7f00 b \uff0c\u4ee5bytes\u7684\u65b9\u5f0f\u8868\u8fbe\u5b57\u7b26\u4e32 ```python b'Hello, World!' #\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7ASCII\u5b57\u7b26\u8868\u793a b'Hello, World!' b'H\\xc3\\xa611\\xc3\\xa5, w\\xc3\\xb8rld!' #\u4e5f\u53ef\u4ee5\u901a\u8fc7 \\x + 16\u8fdb\u5236 \u8868\u793a b'H\\xc3\\xa611\\xc3\\xa5, w\\xc3\\xb8rld!' b'H\\xc3\\xa611\\xc3\\xa5, w\\xc3\\xb8rld!'.decode(\"utf-8\") #\u53ea\u4f1a\u4f7f\u7528\u4e86decode\u65b9\u6cd5\u540e\uff0c\u624d\u4f1a\u4ee5\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u8868\u8fbe 'H\u00e611\u00e5, w\u00f8rld!' b'Hello, World!'.decode() #\u9ed8\u8ba4\u4ee5utf-8\u89e3\u7801 'Hello, World!' b'H\\xc3\\xa611\\xc3\\xa5, w\\xc3\\xb8rld!'.decode() #\u9ed8\u8ba4\u4ee5utf-8\u89e3\u7801 'H\u00e611\u00e5, w\u00f8rld!' b'H\\xc3a611c3a5, w\\xc3\\xb8rld!'.decode() #\u56e0utf-8\u4e3a\u975e\u5b9a\u957f\u7684\u7f16\u7801\uff0c\u5fc5\u987b\u7528\\x\u7684\u65b9\u5f0f\u5206\u9694\u6bcf\u4e2a\u5b57\u7b26 Traceback (most recent call last): File \" \", line 1, in UnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 1: invalid continuation byte ```","title":"\u7b2c\u4e00\u7ae0"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e03\u7ae0 \u7c7b\u4e0e\u5bf9\u8c61/","text":"\u9762\u524d\u5bf9\u8c61\u7f16\u7a0b\u4e2d\uff0c\u672f\u8bed \u5bf9\u8c61 \u5927\u81f4\u610f\u5473\u7740\u4e00\u7cfb\u5217\u6570\u636e(\u5c5e\u6027)\u4ee5\u53ca\u4e00\u5957\u8bbf\u95ee\u548c\u64cd\u4f5c\u8fd9\u4e9b\u6570\u636e\u7684\u65b9\u6cd5 \u4f7f\u7528\u5bf9\u8c61\u7684\u6700\u91cd\u8981\u7684\u597d\u5904\uff1a \u591a\u6001\uff1a\u53ef\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u800c\u8fd9\u4e9b\u64cd\u4f5c\u5c31\u50cf\u201c\u88ab\u65bd\u4e86\u9b54\u6cd5\u201d\u4e00\u6837\u80fd\u591f\u6b63\u5e38\u8fd0\u884c \u5c01\u95ed\uff1a\u5bf9\u5916\u90e8\u9690\u85cf\u6709\u5173\u5bf9\u8c61\u5de5\u4f5c\u539f\u7406\u7684\u7ec6\u8282 \u7ee7\u627f\uff1a\u53ef\u57fa\u4e8e\u901a\u7528\u7c7b\u521b\u5efa\u51fa\u4e13\u7528\u7c7b \u5728Python3\u4e2d\uff0c\u4e0d\u518d\u533a\u5206\u7c7b\u4e0e\u7c7b\u578b #\u5728Python\u4e2d\uff0c\u7ea6\u5b9a\u4f7f\u7528\u5355\u6570\u5e76\u5c06\u9996\u5b57\u6bcd\u5927\u5199\u4f5c\u4e3a\u7c7b\u7684\u540d\u8bcd #class\u8bed\u53e5\u521b\u5efa\u72ec\u7acb\u7684\u547d\u4ee4\u7a7a\u95f4\uff0c\u7528\u4e8e\u5728\u5176\u4e2d\u5b9a\u4e49\u51fd\u6570 #\u53c2\u6570self\u6307\u5411\u5bf9\u8c61\u672c\u8eab\uff0c\u8fd9\u662f\u65b9\u6cd5\u4e0e\u51fd\u6570\u7684\u533a\u522b\u3002 #\u65b9\u6cd5\uff08\u66f4\u51c6\u786e\u5730\u8bf4\u662f\u5173\u8054\u7684\u65b9\u6cd5\uff0c\u5b58\u5728\u4e0d\u5173\u8054\u7684\u65b9\u6cd5\uff09\u5c06\u5176\u7b2c\u4e00\u4e2a\u53c2\u6570\u5173\u8054\u5230\u5b83\u6240\u5c5e\u7684\u5b9e\u4f8b\uff0c\u56e0\u6b64\u65e0\u9700\u63d0\u4f9b\u8fd9\u4e2a\u53c2\u6570\u3002 #\u6ce8\u610f\uff0c\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u53ef\u4ee5\u4e0d\u662fself\uff0c\u53ef\u4ee5\u662f\u4efb\u610f\u503c\uff0c\u53ea\u662f\u4e60\u60ef\u4e0a\u4f7f\u7528self class Person: def set_name(self, name): self.name = name def get_name(self): return self.name def greet(self): print(\"Hello, world! I'm {}.\".format(self.name)) class Screen: def width_getter(self): return self._width def width_setter(self, value): self._width = value width = property(width_getter, width_setter) @property def height(self): return self._height @height.setter def height(self, value): self._height = value @property def resolution(self): return self._width * self._height \u9690\u85cf\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u4e0d\u88ab\u5916\u90e8\u76f4\u63a5\u8bbf\u95ee\u662f\u4e2a\u597d\u7684\u65b9\u5f0f\uff0c\u4f46Python\u4e0d\u652f\u6301\u9690\u85cf\u5c5e\u6027\uff0c\u53ea\u80fd\u91c7\u7528\u5c0f\u6280\u5de7\u8fbe\u5230\u7c7b\u4f3c\u7684\u6548\u679c\uff0c\u5c06\u5c5e\u6027\u6216\u65b9\u6cd5\u6210\u4e3a\u79c1\u6709\u3002 class Secretive: def __inaccessible(self): #\u5728\u65b9\u6cd5\u6216\u5c5e\u6027\u7684\u540d\u79f0\u524d\u9762\u52a0\u4e0a\u4e24\u6761\u4e0b\u5212\u7ebf print(\"Bet you can't see me ...\") def accessible(self): print(\"The secret message is:\") self.__inaccessible() >>> s = Secretive() >>> s.__inaccessible() Traceback (most recent call last): File \"<stdin>\", line 1, in <module> AttributeError: 'Secretive' object has no attribute '__inaccessible' >>> s.accessible() The secret message is: Bet you can't see me ... >>> s._Secretive__inaccessible() #\u5b9e\u9645\u4e0a\uff0c\u5728\u5916\u90e8\u73af\u5883\u4e2d\uff0c\u5e76\u6ca1\u6709\u9690\u85cf\uff0c\u53ea\u662f\u8981\u5728\u5f00\u5934\u52a0\u4e0a\u4e00\u6761\u4e0b\u5212\u7ebf\u548c\u7c7b\u540d Bet you can't see me ... #\u5982\u679c\u4e0d\u5e0c\u671b\u540d\u79f0\u88ab\u4fee\u6539\uff0c\u53c8\u60f3\u53d1\u51fa\u4e0d\u8981\u4ece\u5916\u90e8\u4fee\u6539\u5c5e\u6027\u6216\u65b9\u6cd5\u7684\u4fe1\u53f7\uff0c\u53ef\u7528\u4e00\u4e2a\u4e0b\u5212\u7ebf\u6253\u5934 #\u8fd9\u53ea\u662f\u4e00\u79cd\u7ea6\u5b9a\uff0c\u4f46\u4e5f\u6709\u4e9b\u4f5c\u7528\uff0c\u4f8b\u5982from module import * \u4e0d\u4f1a\u5bfc\u5165\u4ee5\u4e00\u4e2a\u4e0b\u5212\u7ebf\u6253\u5934\u7684\u540d\u79f0 #\u5728class\u8bed\u53e5\u4e2d\u5b9a\u4e49\u7684\u4ee3\u7801\u90fd\u662f\u5728\u4e00\u4e2a\u7279\u6b8a\u7684\u547d\u4ee4\u7a7a\u95f4\uff08\u7c7b\u7684\u547d\u4ee4\u7a7a\u95f4\uff09\u5185\u6267\u884c\u7684\uff0c\u800c\u7c7b\u7684\u6240\u6709\u6210\u5458\u90fd\u53ef\u8bbf\u95ee\u8fd9\u4e2a\u547d\u4ee4\u7a7a\u95f4 #\u5b9e\u9645\u5728\u5b9a\u4e49\u7c7b\u65f6\uff0c\u6267\u884c\u4e86\u5b9a\u4e49\u7684\u4ee3\u7801 >>> class C: ... print('Class C being defind...') ... Class C being defind... class MemberCounter: members = 0 def init(self): MemberCounter.members += 1 >>> m1 = MemberCounter() >>> m1 <__main__.MemberCounter object at 0x7f7eac676080> >>> m1.init() >>> MemberCounter.members 1 >>> m2 = MemberCounter() >>> m2 <__main__.MemberCounter object at 0x7f7eac676208> >>> m2.init() >>> MemberCounter.members 2 #\u662f\u5426\u53ef\u8ba4\u4e3a\u7c7bMemberCounter\u7684\u5b9a\u4e49\uff0c\u5b9e\u9645\u5728\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u4e2d\u521b\u5efa\u4e86\u5b50\u547d\u540d\u7a7a\u95f4\uff0c\u5e76\u6267\u884c\u4e86\u5728\u5176\u4e2d\u6267\u884c\u7684\u5b9a\u4e49\u7684\u4ee3\u7801 #\u662f\u5426\u53ef\u8ba4\u4e3a\u7c7b\u7684\u5b9e\u4f8b\u5173\u8054\u7684\u53d8\u91cf\uff0c\u5b9e\u9645\u8be5\u53d8\u91cf\u5c5e\u4e8e\u5168\u5c40\u547d\u540d\u7a7a\u95f4 #\u53ef\u4ee5\u901a\u8fc7\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u8fd9\u4e2a\u5728\u7c7b\u4f5c\u7528\u57df\u5185\u7684\u53d8\u91cf >>> m1.members 2 >>> m2.members 2 #\u5728\u5b9e\u4f8b\u4e2d\u672a\u4f7f\u7528\u5355\u72ec\u8d4b\u503c\u8be5\u53d8\u91cf\u524d\uff0c\u5176\u9ed8\u8ba4\u5728\u7c7b\u547d\u540d\u7a7a\u95f4\u4e2d\u67e5\u627e >>> m1.members = 'Two' >>> m1.members 'Two' >>> m2.members 2","title":"\u7b2c\u4e03\u7ae0 \u7c7b\u4e0e\u5bf9\u8c61"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e09\u7ae0 \u4f7f\u7528\u5b57\u7b26\u4e32/","text":"\u6240\u6709\u6807\u51c6\u5e8f\u5217\u64cd\u4f5c\uff08\u7d22\u5f15\u3001\u5207\u7247\u3001\u4e58\u6cd5\u3001\u6210\u5458\u8d44\u683c\u68c0\u67e5\u3001\u957f\u5ea6\u3001\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff09\u90fd\u9002\u5408\u4e8e\u5b57\u7b26\u4e32\uff0c\u4f46\u522b\u5fd8\u4e86\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u56e0\u6b64\u6240\u6709\u7684\u5143\u7d20\u8d4b\u503c\u548c\u5207\u7247\u8d4b\u503c\u90fd\u662f\u975e\u6cd5\u7684 \u8bbe\u7f6e\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\uff1a \u4f7f\u7528\u5b57\u7b26\u4e32\u683c\u5f0f\u8bbe\u7f6e\u8fd0\u7b97\u7b26\u2014\u2014\u767e\u5206\u53f7\uff1a \u5728%\u5de6\u8fb9\u6307\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u683c\u5f0f\u5b57\u7b26\u4e32\uff09\uff0c\u5e76\u5728\u53f3\u8fb9\u6307\u5b9a\u8981\u8bbe\u7f6e\u5176\u683c\u5f0f\u7684\u503c\uff08\u53ef\u4f7f\u7528\u5355\u4e2a\u503c\uff0c\u5982\u5b57\u7b26\u4e32\u6216\u6570\u5b57\uff0c\u66f4\u5e38\u89c1\u7684\u662f\u4f7f\u7528\u5143\u7ec4\uff09 ```python format = \"Hello, %s. %s enough for ya?\" #%s\u79f0\u4e3a\u8f6c\u6362\u8bf4\u660e\u7b26\uff0c\u6307\u51fa\u4e86\u8981\u5c06\u503c\u63d2\u5165\u4ec0\u4e48\u5730\u65b9\u3002s\u610f\u5473\u7740\u5c06\u503c\u89c6\u4e3a\u5b57\u7b26\u4e32\u8fdb\u884c\u683c\u5f0f\u8bbe\u7f6e format 'Hello, %s. %s enough for ya?' value = ('world', 'Hot') format % value 'Hello, world. Hot enough for ya?' ``` \u6a21\u677f\u5b57\u7b26\u4e32 ```python from string import Template tmp1 = Template(\"Hello, $who! $what enough for ya?\") tmp1.substitute(who=\"Mars\",what=\"Dusty\") 'Hello, Mars! Dusty enough for ya?' tmp1.substitute(who=\"Convex\",what=\"book\") 'Hello, Convex! book enough for ya?' ``` \u5b57\u7b26\u4e32\u65b9\u6cd5format ```python #\u6bcf\u4e2a\u66ff\u6362\u5b57\u6bb5\u90fd\u7528\u82b1\u62ec\u53f7\u62ec\u8d77\uff0c\u5176\u4e2d\u53ef\u80fd\u5305\u542b\u540d\u79f0\uff0c\u8fd8\u53ef\u80fd\u5305\u542b\u6709\u5173\u5982\u4f55\u5bf9\u76f8\u5e94\u7684\u503c\u8fdb\u884c\u8f6c\u6362\u548c\u683c\u5f0f\u8bbe\u7f6e\u7684\u4fe1\u606f #\u66ff\u6362\u5b57\u6bb5\u6ca1\u6709\u540d\u79f0 \"{}, {} and {}\".format(\"first\", \"second\", \"third\") 'first, second and third' #\u66ff\u6362\u5b57\u6bb5\u91c7\u7528\u7d22\u5f15 \"{0}, {1} and {2}\".format(\"first\", \"second\", \"third\") 'first, second and third' \"{2}, {0} and {1}\".format(\"first\", \"second\", \"third\") 'third, first and second' #\u66ff\u6362\u5b57\u6bb5\u91c7\u7528\u540d\u79f0 \"{name} is approximately {value:.2f}.\".format(value = pi, name = \"\u03c0\") #\u6307\u5b9a\u4e86\u683c\u5f0f\u53ca\u7c7b\u578b '\u03c0 is approximately 3.14.' \"{name} is approximately {value}.\".format(value = pi, name = \"\u03c0\") #\u4e0d\u6307\u5b9a\u65f6\u7c7b\u578b\u65f6\uff0c\u81ea\u9002\u5e94 '\u03c0 is approximately 3.141592653589793.' #\u5982\u679c\u53d8\u91cf\u4e0e\u66ff\u6362\u5b57\u6bb5\u540c\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528\u7b80\u5199\u65b9\u5f0f from math import e f\"Euler's constant is roughly {e}.\" \"Euler's constant is roughly 2.718281828459045.\" ``` \u5b57\u7b26\u4e32\u65b9\u6cd5 center ```python #\u65b9\u6cd5center\u901a\u8fc7\u5728\u4e24\u8fb9\u6dfb\u52a0\u586b\u5145\u5b57\u7b26\uff08\u9ed8\u8ba4\u4e3a\u7a7a\u683c\uff09\u8ba9\u5b57\u7b26\u4e32\u5c45\u4e2d \"The Middle by Jimmy Eat World.\".center(39) ' The Middle by Jimmy Eat World. ' \"The Middle by Jimmy Eat World.\".center(39,\" \") ' * The Middle by Jimmy Eat World. *' ```","title":"\u7b2c\u4e09\u7ae0 \u4f7f\u7528\u5b57\u7b26\u4e32"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e09\u7ae0 \u4f7f\u7528\u5b57\u7b26\u4e32/#_1","text":"\u4f7f\u7528\u5b57\u7b26\u4e32\u683c\u5f0f\u8bbe\u7f6e\u8fd0\u7b97\u7b26\u2014\u2014\u767e\u5206\u53f7\uff1a \u5728%\u5de6\u8fb9\u6307\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u683c\u5f0f\u5b57\u7b26\u4e32\uff09\uff0c\u5e76\u5728\u53f3\u8fb9\u6307\u5b9a\u8981\u8bbe\u7f6e\u5176\u683c\u5f0f\u7684\u503c\uff08\u53ef\u4f7f\u7528\u5355\u4e2a\u503c\uff0c\u5982\u5b57\u7b26\u4e32\u6216\u6570\u5b57\uff0c\u66f4\u5e38\u89c1\u7684\u662f\u4f7f\u7528\u5143\u7ec4\uff09 ```python format = \"Hello, %s. %s enough for ya?\" #%s\u79f0\u4e3a\u8f6c\u6362\u8bf4\u660e\u7b26\uff0c\u6307\u51fa\u4e86\u8981\u5c06\u503c\u63d2\u5165\u4ec0\u4e48\u5730\u65b9\u3002s\u610f\u5473\u7740\u5c06\u503c\u89c6\u4e3a\u5b57\u7b26\u4e32\u8fdb\u884c\u683c\u5f0f\u8bbe\u7f6e format 'Hello, %s. %s enough for ya?' value = ('world', 'Hot') format % value 'Hello, world. Hot enough for ya?' ``` \u6a21\u677f\u5b57\u7b26\u4e32 ```python from string import Template tmp1 = Template(\"Hello, $who! $what enough for ya?\") tmp1.substitute(who=\"Mars\",what=\"Dusty\") 'Hello, Mars! Dusty enough for ya?' tmp1.substitute(who=\"Convex\",what=\"book\") 'Hello, Convex! book enough for ya?' ``` \u5b57\u7b26\u4e32\u65b9\u6cd5format ```python #\u6bcf\u4e2a\u66ff\u6362\u5b57\u6bb5\u90fd\u7528\u82b1\u62ec\u53f7\u62ec\u8d77\uff0c\u5176\u4e2d\u53ef\u80fd\u5305\u542b\u540d\u79f0\uff0c\u8fd8\u53ef\u80fd\u5305\u542b\u6709\u5173\u5982\u4f55\u5bf9\u76f8\u5e94\u7684\u503c\u8fdb\u884c\u8f6c\u6362\u548c\u683c\u5f0f\u8bbe\u7f6e\u7684\u4fe1\u606f #\u66ff\u6362\u5b57\u6bb5\u6ca1\u6709\u540d\u79f0 \"{}, {} and {}\".format(\"first\", \"second\", \"third\") 'first, second and third' #\u66ff\u6362\u5b57\u6bb5\u91c7\u7528\u7d22\u5f15 \"{0}, {1} and {2}\".format(\"first\", \"second\", \"third\") 'first, second and third' \"{2}, {0} and {1}\".format(\"first\", \"second\", \"third\") 'third, first and second' #\u66ff\u6362\u5b57\u6bb5\u91c7\u7528\u540d\u79f0 \"{name} is approximately {value:.2f}.\".format(value = pi, name = \"\u03c0\") #\u6307\u5b9a\u4e86\u683c\u5f0f\u53ca\u7c7b\u578b '\u03c0 is approximately 3.14.' \"{name} is approximately {value}.\".format(value = pi, name = \"\u03c0\") #\u4e0d\u6307\u5b9a\u65f6\u7c7b\u578b\u65f6\uff0c\u81ea\u9002\u5e94 '\u03c0 is approximately 3.141592653589793.' #\u5982\u679c\u53d8\u91cf\u4e0e\u66ff\u6362\u5b57\u6bb5\u540c\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528\u7b80\u5199\u65b9\u5f0f from math import e f\"Euler's constant is roughly {e}.\" \"Euler's constant is roughly 2.718281828459045.\" ```","title":"\u8bbe\u7f6e\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\uff1a"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e09\u7ae0 \u4f7f\u7528\u5b57\u7b26\u4e32/#_2","text":"center ```python #\u65b9\u6cd5center\u901a\u8fc7\u5728\u4e24\u8fb9\u6dfb\u52a0\u586b\u5145\u5b57\u7b26\uff08\u9ed8\u8ba4\u4e3a\u7a7a\u683c\uff09\u8ba9\u5b57\u7b26\u4e32\u5c45\u4e2d \"The Middle by Jimmy Eat World.\".center(39) ' The Middle by Jimmy Eat World. ' \"The Middle by Jimmy Eat World.\".center(39,\" \") ' * The Middle by Jimmy Eat World. *' ```","title":"\u5b57\u7b26\u4e32\u65b9\u6cd5"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e5d\u7ae0/","text":">>> def repeater(value): ... while True: ... new = 12 ... new = (yield value) ... print(new) ... #\u5b9a\u4e49\u7684\u51fd\u6570\u5e76\u975e\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\u6216\u8fed\u4ee3\u5668\uff0c\u5176\u4ecd\u4e3a\u51fd\u6570 >>> isinstance(repeater, Iterable) False >>> isinstance(repeater, Iterator) False >>> repeater <function repeater at 0x7f3e71af0ae8> #\u901a\u8fc7\u5305\u542byield\u8bed\u53e5\u7684\u51fd\u6570\u521b\u5efa\u5bf9\u8c61\u540e\uff0c\u624d\u53ef\u4ee5\u79f0\u4e3a\u751f\u6210\u5668\u3001\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3001\u8fed\u4ee3\u5668 >>> r = repeater(42) #\u521b\u5efa\u4e00\u4e2a\u751f\u6210\u5668 >>> r <generator object repeater at 0x7f3e71af7de0> >>> isinstance(r, Iterable) True >>> isinstance(r, Iterator) True #\u5bf9\u4e8e\u8fed\u4ee3\u5668\u53ef\u4ee5\u4f7f\u7528next\u51fd\u6570\uff0c\u8fd9\u662f\u8fed\u4ee3\u5668\u7684\u7279\u70b9 >>> next(r) #\u6267\u884c\u5230new = (yield value)\u8bed\u53e5\uff0c\u6b64\u65f6yield\u4e3a\u8868\u8fbe\u5f0f\uff0c\u5411\u5916\u90e8return value\u3002\u6ce8\u610f\uff0c\u6b64\u65f6\u5e76\u672a\u8fd4\u56de\u8868\u8fbe\u5f0f\u7ed3\u679c\u4e14\u672a\u6267\u884c\u8d4b\u503c\u8bed\u53e5 42 >>> next(r) #\u7ee7\u7eed\u6267\u884cnext\u51fd\u6570\uff0c\u56e0\u4e3a\u662fnext\u8c03\u7528\u8fed\u4ee3\u5668r\uff0c\u6545\u8868\u8fbe\u5f0f\u7ed3\u679c\u4e3aNone\u3002\u5e76\u5c06\u8868\u8fbe\u5f0f\u7ed3\u679c\u8d4b\u503c\u7ed9\u53d8\u91cfnew,\u5e76\u9047\u5230new = (yield value)\u518d\u6b21\u6682\u505c None 42 >>> r.send('18') #\u6267\u884csend\u65b9\u6cd5\uff0c\u6545\u8868\u8fbe\u5f0f\u7ed3\u679c\u4e3a\u65b9\u6cd5\u7684\u53c2\u657018\uff0c\u5e76\u5c06\u8868\u8fbe\u5f0f\u7ed3\u679c\u8d4b\u503c\u7ed9\u53d8\u91cfnew,\u5e76\u9047\u5230new = (yield value)\u518d\u6b21\u6682\u505c 18 42 >>> next(r) None 42 #\u521b\u5efa\u65b0\u7684\u8fed\u4ee3\u5668\uff0c\u5e76\u8d4b\u503c\u7ed9r >>> r = repeater(42) >>> r.send(18) #\u9996\u6b21\u6267\u884c\u8fed\u4ee3\uff0c\u4e0d\u5141\u8bb8\u4f7f\u7528send\u65b9\u6cd5 Traceback (most recent call last): File \"<stdin>\", line 1, in <module> TypeError: can't send non-None value to a just-started generator >>> next(r) 42 >>> r.send(18) 18 42","title":"\u7b2c\u4e5d\u7ae0"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e8c\u7ae0 \u5217\u8868\u548c\u5143\u7ec4/","text":"\u5e8f\u5217 \u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u7f16\u53f7\uff0c\u5373\u5176\u4f4d\u7f6e\u6216\u7d22\u5f15\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u4e3a0\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u4e3a1\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002 \u5e38\u89c1\u7684\u5e8f\u5217\uff1a \u5217\u8868 \u5143\u7ec4 \u5b57\u7b26\u4e32 \u5217\u8868\u548c\u5143\u7ec4\u7684\u533a\u522b\u5728\u4e8e\uff0c\u5217\u8868\u53ef\u4ee5\u4fee\u6539\uff0c\u5143\u7ec4\u7981\u6b62\u4fee\u6539\uff08\u6ce8\u610f\uff0c\u5143\u7ec4\u6570\u503c\u81ea\u8eab\u4e0d\u53ef\u4fee\u6539\uff0c\u4f46\u5143\u7ec4\u53d8\u91cf\u53ef\u4fee\u6539\uff0c\u5373\u91cd\u65b0\u6307\u5411\u65b0\u5143\u7ec4\uff09 \u901a\u7528\u7684\u5e8f\u5217\u64cd\u4f5c \u4ee5\u4e0b\u64cd\u4f5c\u53ef\u4f5c\u7528\u4e8e\u5e8f\u5217\uff0c\u5373\u5217\u8868\u3001\u5143\u7ec4\u3001\u5b57\u7b26\u4e32\u7b49\u517c\u53ef \u7d22\u5f15 ```python #\u7d22\u5f15\u662f\u7528\u6765\u8bbf\u95ee\u5e8f\u5217\u7684\u5355\u4e2a\u5143\u7d20 greeting = 'Hello' greeting[0] 'H' greeting[-1] #\u53ef\u4ee5\u4f7f\u7528\u8d1f\u6570\u4ece\u6700\u540e\u8ba1\u6570\uff0c-1 \u8868\u793a\u6700\u540e\u4e00\u4e2a\u5143\u7d20 'o' 'Hello'[1] #\u7d22\u5f15\u53ef\u4ee5\u76f4\u63a5\u4f5c\u7528\u4e8e\u5e8f\u5217\u5b57\u9762\u91cf 'e' fourth = input('Year: ')[3] #\u4e5f\u53ef\u4ee5\u4f5c\u7528\u4e8e\u51fd\u6570\u7684\u5e8f\u5217\u8fd4\u56de\u503c Year: 2005 fourth '5' input('Year: ')[3] #\u4e5f\u53ef\u4ee5\u4f5c\u7528\u4e8e\u51fd\u6570\u7684\u5e8f\u5217\u8fd4\u56de\u503c Year: 2005 '5' #\u6ce8\u610f\uff0c\u201c\u8bbf\u95ee\u201d\u5e76\u4e0d\u4ec5\u662f\u201c\u8fd4\u56de\u201d\uff0c\u4e0b\u4f8b\u8bc1\u660e\uff1a lst = [1, 2, 3] lst[0] = 0 lst [0, 2, 3] #\u5b57\u7b26\u4e32\u5e76\u4e0d\u80fd\u4fee\u6539\u67d0\u4e2a\u5143\u7d20 greeting[0] = 'P' Traceback (most recent call last): File \" \", line 1, in TypeError: 'str' object does not support item assignment ``` \u5207\u7247 ```python #\u5207\u7247\u53ef\u4ee5\u8bbf\u95ee\u7279\u5b9a\u8303\u56f4\u5185\u7684\u5143\u7d20 numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] numbers[3:6] [4, 5, 6] numbers[0:1] #\u7b2c\u4e00\u4e2a\u7d22\u5f15\u662f\u5305\u542b\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7f16\u53f7\uff0c\u4f46\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u662f\u5207\u7247\u540e\u4f59\u4e0b\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7f16\u53f7 [1] #\u5207\u7247\u7684\u7b80\u5199 numbers[7:10] #\u8d85\u51fa\u8fb9\u754c\u540e\uff0c\u4e0d\u663e\u793a\u8fb9\u754c\u5916\u7684\u5143\u7d20 [8, 9, 10] numbers[-3:0] #\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u5e76\u4e0d\u5728\u7b2c\u4e00\u4e2a\u7684\u6b65\u957f\u65b9\u5411\u4e0a\u65f6\uff0c\u5176\u8fd4\u56de\u503c\u4e3a\u7a7a [] numbers[-3:] #\u4e0d\u6307\u660e\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u65f6\uff0c\u5176\u4e3a\u6b65\u957f\u65b9\u5411\u4e0a\u7684\u79bb\u7b2c\u4e00\u4e2a\u7d22\u5f15\u6700\u8fdc\u7684\u5143\u7d20 [8, 9, 10] numbers[:3] #\u4e0d\u6307\u660e\u7b2c\u4e00\u4e2a\u7d22\u5f15\u65f6\uff0c\u5176\u4e3a\u6b65\u957f\u76f8\u53cd\u65b9\u5411\u4e0a\u7684\u79bb\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u6700\u8fdc\u7684\u5143\u7d20 [1, 2, 3] numbers[:] #\u4e0d\u6307\u660e\u7b2c\u4e00\u3001\u7b2c\u4e8c\u7d22\u5f15\u65f6\uff0c\u5176\u6839\u636e\u6b65\u957f\u65b9\u5411\u81ea\u52a8\u53d6\u5934\u3001\u5c3e [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] #\u6b65\u957f numbers[3:6:3] #\u6b65\u957f\u7f3a\u7701\u4e3a1\uff0c\u6b64\u5904\u6307\u660e\u4e3a3 [4] numbers[8:3:-1] #\u6b65\u957f\u662f\u4e2a\u77e2\u91cf\uff0c\u8d1f\u6570\u65f6\u8868\u793a\u65b9\u5411\u4e3a\u7531\u53f3\u5230\u5de6 [9, 8, 7, 6, 5] numbers[3:8:0] #\u6b65\u957f\u4e0d\u80fd\u4e3a0 Traceback (most recent call last): File \" \", line 1, in ValueError: slice step cannot be zero ``` \u5e8f\u5217\u76f8\u52a0 ```python #\u5e8f\u5217\u76f8\u52a0\u53ea\u662f\u8fd4\u56de\u7ed3\u679c\uff0c\u5e76\u672a\u4fee\u6539\u539f\u5e8f\u5217 [1, 2, 3] + [4, 5, 6] [1, 2, 3, 4, 5, 6] 'Hello,' + 'world!' 'Hello,world!' #\u4e00\u822c\u800c\u8a00\uff0c\u4e0d\u80fd\u62fc\u63a5\u4e0d\u540c\u7c7b\u578b\u7684\u5e8f\u5217 [1, 2, 3] + 'world!' Traceback (most recent call last): File \" \", line 1, in TypeError: can only concatenate list (not \"str\") to list ``` \u4e58\u6cd5 ```python 'python' * 5 'pythonpythonpythonpythonpython' [42] * 10 [42, 42, 42, 42, 42, 42, 42, 42, 42, 42] n = None #None\u662fpython\u4e2d\u4e00\u4e2a\u7279\u6b8a\u7684\u6570\u503c\uff0c\u5176\u8868\u793a\u4e3a\u7a7a sequence = [None] * 10 sequence [None, None, None, None, None, None, None, None, None, None] seq = [n] seq [None] ``` \u6210\u5458\u8d44\u683c ```python #\u8981\u68c0\u67e5\u7279\u5b9a\u7684\u503c\u662f\u5426\u5305\u542b\u5728\u5e8f\u5217\u4e2d\uff0c\u53ef\u4f7f\u7528\u8fd0\u7b97\u7b26in\uff0c\u7ed3\u679c\u4e3a\u5e03\u5c14\u578b\u3002\u5305\u542b\u8fd4\u56deTrue\uff0c\u4e0d\u5305\u542b\u8fd4\u56deFalse permissions = 'rw' 'w' in permissions True 'x' in permissions False #\u4e00\u822c\u5219\u8a00\uff0c\u8fd0\u7b97\u7b26in\u68c0\u67e5\u6307\u5b9a\u7684\u5bf9\u8c61\u662f\u5426\u662f\u5e8f\u5217\uff08\u6216\u5176\u5b83\u96c6\u5408\uff09\u7684\u6210\u5458\uff08\u5373\u5176\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff09 #\u4f46\u5bf9\u4e8e\u5b57\u7b26\u4e32\u6765\u8bf4\uff0c\u53ef\u4ee5\u68c0\u67e5\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u4e32 subject = '$$$ Get rich now!!! $$$' '$$$' in subject True #\u6ce8\u610f\uff0c\u6240\u4ee5\u6210\u5458\u662f\u6307\u5bf9\u8c61\u7684\u76f4\u63a5\u5b50\u5143\u7d20\uff0c\u5e76\u4e0d\u5305\u62ec\u5b50\u5143\u7d20\u7684\u5143\u7d20\u6216\u66f4\u6df1\u7684\u5143\u7d20 lst = [[1,2], [3,4]] 1 in lst False [1,2] in lst True ``` \u957f\u5ea6\u3001\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c ```python #\u53ef\u4ee5\u7528\u51fd\u6570\u8fd4\u56de\u5e8f\u5217\u7684\u957f\u5ea6\u3001\u6700\u5c0f\u503c\u3001\u6700\u5927\u503c numbers = [100, 34, 678] len(numbers) 3 max(numbers) 678 min(numbers) 34 #max, min \u51fd\u6570\u540c\u6837\u53ef\u4ee5\u5bf9\u6bd4\u591a\u4e2a\u5b9e\u6570 max(2,3) 3 min(9, 3, 2, 5) 2 len(1, 2, 3) Traceback (most recent call last): File \" \", line 1, in TypeError: len() takes exactly one argument (3 given) ``` \u5217\u8868 \u7c7b list #\u53ef\u5c06\u4efb\u4f55\u5e8f\u4f55\uff08\u800c\u4e0d\u4ec5\u4ec5\u662f\u5b57\u7b26\u4e32\uff09\u4f5c\u4e3a list \u7684\u53c2\u6570 >>> list('Hello') ['H', 'e', 'l', 'l', 'o'] \u57fa\u7840\u7684\u5217\u8868\u64cd\u4f5c \u9664\u4e86\u901a\u7528\u7684\u5e8f\u5217\u64cd\u4f5c\u5916\uff0c\u5bf9\u4e8e\u5217\u8868\uff0c\u8fd8\u6709\u4e00\u4e9b\u5176\u5b83\u7684\u64cd\u4f5c\uff0c\u4e3b\u8981\u56f4\u7ed5\u5217\u8868\u662f\u53ef\u4fee\u6539\u7684 \u7ed9\u5143\u7d20\u8d4b\u503c ```python x = [1, 1, 1] x[1] = 2 x [1, 2, 1] ``` \u5220\u9664\u5143\u7d20 ```python names = ['Alice', 'Beth', 'Cecil', 'Dee-Dee', 'Earl'] del names[2] names ['Alice', 'Beth', 'Dee-Dee', 'Earl'] len(names) 4 ``` \u7ed9\u5207\u7247\u8d4b\u503c ```python #\u666e\u901a\u7528\u6cd5 name = list('Perl') name ['P', 'e', 'r', 'l'] name[2:] = list('ar') name ['P', 'e', 'a', 'r'] #\u5207\u7247\u957f\u5ea6\u5c0f\u4e8e\u8d4b\u503c\u957f\u5ea6\uff0c\u81ea\u52a8\u6269\u5145 name = list('Perl') name[1:] = list('ython') name ['P', 'y', 't', 'h', 'o', 'n'] #\u5207\u7247\u957f\u5ea6\u5927\u4e8e\u8d4b\u503c\u957f\u5ea6\uff0c\u81ea\u52a8\u7f29\u51cf numbers[1:4] [2, 3, 4] numbers[1:4] = list('he') numbers [1, 'h', 'e', 5] #\u5207\u7247\u4e3a\u7a7a\uff0c\u76f8\u5f53\u4e8e\u63d2\u5165 numbers = [1, 5] numbers[1:1] = [2, 3, 4] numbers [1, 2, 3, 4, 5] #\u8d4b\u503c\u7a7a\uff0c\u76f8\u5f53\u4e8e\u5220\u9664 numbers = [1, 2, 3, 4, 5] numbers[1:4] = [] numbers [1, 5] #\u53ef\u4ee5\u8ba4\u4e3a\u5bf9\u5207\u7247\u7684\u533a\u57df\u8fdb\u884c\u66ff\u6362\uff0c\u65e0\u9700\u8003\u8651\u957f\u5ea6\u4e0d\u4e00\u81f4\uff0c\u4f1a\u81ea\u9002\u5e94 ``` \u5217\u8868\u65b9\u6cd5 append ```python #\u65b9\u6cd5append\u7528\u4e8e\u5c06\u4e00\u4e2a\u5bf9\u8c61\u9644\u52a0\u5230\u5217\u8868\u7684\u672b\u5c3e lst = [1, 2, 3] lst.append(4) lst [1, 2, 3, 4] ``` clear ```python #\u6e05\u7a7a\u5217\u8868\u5185\u5bb9 lst = [1, 2, 3] lst.clear() lst [] ``` copy ```python #\u5c06\u67d0\u4e2a\u53d8\u91cf\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b9e\u9645\u662f\u8d4b\u503c\u6307\u9488 a = [1, 2, 3] b = a b[1] = 4 a [1, 4, 3] #\u901a\u8fc7\u65b9\u5f0fcopy\u53ef\u8fd4\u56de\u5217\u8868\u5bf9\u8c61\u7684\u503c a = [1, 2, 3] b = a.copy() b[1] = 4 a [1, 2, 3] ``` count ```python ['to', 'be', 'or', 'not', 'to', 'be'].count('to') 2 ``` extend ```python #\u65b9\u6cd5extend\u53ef\u4ee5\u540c\u65f6\u5c06\u591a\u4e2a\u503c\u9644\u52a0\u5230\u5217\u8868\u672b\u5c3e a = [1, 2, 3] b = [4, 5, 6] a.extend(b) a [1, 2, 3, 4, 5, 6] #\u53ef\u4ee5\u9644\u52a0\u5b57\u7b26\u4e32\uff1b\u5373\u5c06\u9644\u52a0\u503c\u8f6c\u6362\u6210\u5217\u8868\u540e\u9644\u52a0 c = 'abc' a.extend(c) a [1, 2, 3, 4, 5, 6, 'a', 'b', 'c'] ``` index ```python #\u65b9\u6cd5index\u5728\u5217\u8868\u4e2d\u67e5\u627e\u6307\u5b9a\u503c\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15 knights = ['We', 'are', 'the', 'knights', 'who', 'say', 'ni'] knights.index('who') 4 knights.index('herring') Traceback (most recent call last): File \" \", line 1, in ValueError: 'herring' is not in list ``` insert ```python #\u65b9\u6cd5insert\u7528\u4e8e\u5c06\u4e00\u4e2a\u5bf9\u8c61\u63d2\u5165\u5217\u8868 numbers = [1, 2, 3, 4, 5, 6, 7] numbers.insert(3,'four') numbers [1, 2, 3, 'four', 4, 5, 6, 7] ``` pop ```python x = [1, 2, 3] x.pop() #pop\u662f\u552f\u4e00\u5373\u4fee\u6539\u5217\u8868\u53c8\u8fd4\u56de\u4e00\u4e2a\u975eNone\u503c\u7684\u5217\u8868\u65b9\u6cd5 3 x [1, 2] x.pop(0) #\u53ef\u4ee5\u6307\u5b9apop\u51fa\u54ea\u4e2a\u5143\u7d20 1 x [2] ``` remove ```python #\u65b9\u6cd5remove\u53ef\u4ee5\u79fb\u9664\u6307\u5b9a\u503c\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 x = ['to', 'be', 'or', 'not', 'to', 'be'] x.remove('be') x ['to', 'or', 'not', 'to', 'be'] #\u65e0\u6cd5\u5220\u9664\u5217\u8868\u4e2d\u4e0d\u5b58\u5728\u7684\u6307\u5b9a\u503c\u5143\u7d20 x.remove('bee') Traceback (most recent call last): File \" \", line 1, in ValueError: list.remove(x): x not in list ``` reverse ```python \u65b9\u6cd5reverse\u6309\u76f8\u53cd\u7684\u987a\u5e8f\u6392\u5217\u5217\u8868\u4e2d\u7684\u5143\u7d20 x = [1, 2, 3] x.reverse() x [3, 2, 1] \u53ef\u4ee5\u901a\u8fc7reversed\u51fd\u6570\u53ea\u8fd4\u56de\u9006\u5e8f\u540e\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u4fee\u6539\u539f\u5217\u8868 ``` sort ```python \u65b9\u6cd5sort\u7528\u4e8e\u5bf9\u5217\u8868\u5c31\u5730\u6392\u5e8f x = [4, 6, 2, 1, 7, 9] x.sort() x [1, 2, 4, 6, 7, 9] \u975e\u5e38\u5bb9\u6613\u72af\u7684\u9519\u8bef\uff0c\u6ca1\u6709\u8003\u8651\u5230\u65b9\u6cd5sort\u6ca1\u6709\u8fd4\u56de\u503c x = [4, 6, 2, 1, 7, 9] y = x.sort() print(y) None \u53ef\u4ee5\u901a\u8fc7sorted\u51fd\u6570\u53ea\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u4fee\u6539\u539f\u5217\u8868 ``` \u9ad8\u7ea7\u6392\u5e8f ```python \u65b9\u6cd5sort\u63a5\u53d7\u4e24\u4e2a\u53ef\u9009\u53c2\u6570\uff1akey\u548creverse key\u8bbe\u7f6e\u4e00\u4e2a\u6392\u5e8f\u7684\u51fd\u6570\uff0c\u4f46\u4e0d\u4f1a\u76f4\u63a5\u901a\u8fc7\u8be5\u51fd\u6570\u5224\u65ad\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u6bd4\u53e6\u4e00\u4e2a\u5143\u7d20\u5c0f\uff0c\u800c\u662f\u4f7f\u7528\u5b83\u6765\u4e3a\u6bcf\u4e2a\u5143\u7d20\u521b\u5efa\u4e00\u4e2a\u952e\uff0c\u518d\u6839\u636e\u8fd9\u4e9b\u952e\u5bf9\u5143\u7d20\u8fdb\u884c\u6392\u5e8f x = ['aardvark', 'abalone', 'acme', 'add', 'aerate'] x.sort() x ['aardvark', 'abalone', 'acme', 'add', 'aerate'] x.sort(key=len) x ['add', 'acme', 'aerate', 'abalone', 'aardvark'] reverse\u6307\u5b9a\u4e00\u4e2a\u771f\u503c(True\u6216False)\uff0c\u4ee5\u6307\u51fa\u662f\u5426\u8981\u6309\u76f8\u53cd\u7684\u987a\u5e8f\u5bf9\u5217\u8868\u8fdb\u884c\u6392\u5e8f x = [4, 6, 2, 1, 7, 9] x.sort(reverse=True) x [9, 7, 6, 4, 2, 1] ``` \u5143\u7ec4\uff1a\u4e0d\u53ef\u4fee\u6539\u7684\u5e8f\u5217 #\u53ea\u8981\u5c06\u4e00\u4e9b\u503c\u7528\u9017\u53f7\u5206\u9694\uff0c\u5c31\u80fd\u81ea\u52a8\u521b\u5efa\u51fa\u4e00\u4e2a\u5143\u7ec4 >>> 1, 2, 3 (1, 2, 3) >>> (1, 2, 3) (1, 2, 3) >>> () () >>> 42 42 >>> 42, (42,) >>> (42,) (42,) #\u62ec\u53f7\u5e76\u4e0d\u662f\u5143\u7ec4\u7684\u5fc5\u8981\u7279\u5f81\uff0c\u9017\u53f7\u624d\u662f\u3002\u6240\u4ee5\u4e0b\u5217\u8868\u8fbe\u5f0f\u53ea\u662f\u521b\u5efa\u4e00\u4e2a\u6574\u578b >>> (42) 42 #\u540c\u6837\u53ef\u4ee5\u4f7f\u7528\u7c7btuple\u5c06\u5e8f\u5217\u8f6c\u6362\u6210\u5143\u7ec4 >>> x = tuple('hello') >>> x ('h', 'e', 'l', 'l', 'o') #\u5e8f\u5217\u7684\u901a\u7528\u64cd\u4f5c\u540c\u6837\u9002\u7528\u4e8e\u5143\u7ec4 >>> x * 5 ('h', 'e', 'l', 'l', 'o', 'h', 'e', 'l', 'l', 'o', 'h', 'e', 'l', 'l', 'o', 'h', 'e', 'l', 'l', 'o', 'h', 'e', 'l', 'l', 'o')","title":"\u7b2c\u4e8c\u7ae0 \u5217\u8868\u548c\u5143\u7ec4"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e8c\u7ae0 \u5217\u8868\u548c\u5143\u7ec4/#_1","text":"\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u7f16\u53f7\uff0c\u5373\u5176\u4f4d\u7f6e\u6216\u7d22\u5f15\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u4e3a0\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u4e3a1\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002 \u5e38\u89c1\u7684\u5e8f\u5217\uff1a \u5217\u8868 \u5143\u7ec4 \u5b57\u7b26\u4e32 \u5217\u8868\u548c\u5143\u7ec4\u7684\u533a\u522b\u5728\u4e8e\uff0c\u5217\u8868\u53ef\u4ee5\u4fee\u6539\uff0c\u5143\u7ec4\u7981\u6b62\u4fee\u6539\uff08\u6ce8\u610f\uff0c\u5143\u7ec4\u6570\u503c\u81ea\u8eab\u4e0d\u53ef\u4fee\u6539\uff0c\u4f46\u5143\u7ec4\u53d8\u91cf\u53ef\u4fee\u6539\uff0c\u5373\u91cd\u65b0\u6307\u5411\u65b0\u5143\u7ec4\uff09","title":"\u5e8f\u5217"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e8c\u7ae0 \u5217\u8868\u548c\u5143\u7ec4/#_2","text":"\u4ee5\u4e0b\u64cd\u4f5c\u53ef\u4f5c\u7528\u4e8e\u5e8f\u5217\uff0c\u5373\u5217\u8868\u3001\u5143\u7ec4\u3001\u5b57\u7b26\u4e32\u7b49\u517c\u53ef \u7d22\u5f15 ```python #\u7d22\u5f15\u662f\u7528\u6765\u8bbf\u95ee\u5e8f\u5217\u7684\u5355\u4e2a\u5143\u7d20 greeting = 'Hello' greeting[0] 'H' greeting[-1] #\u53ef\u4ee5\u4f7f\u7528\u8d1f\u6570\u4ece\u6700\u540e\u8ba1\u6570\uff0c-1 \u8868\u793a\u6700\u540e\u4e00\u4e2a\u5143\u7d20 'o' 'Hello'[1] #\u7d22\u5f15\u53ef\u4ee5\u76f4\u63a5\u4f5c\u7528\u4e8e\u5e8f\u5217\u5b57\u9762\u91cf 'e' fourth = input('Year: ')[3] #\u4e5f\u53ef\u4ee5\u4f5c\u7528\u4e8e\u51fd\u6570\u7684\u5e8f\u5217\u8fd4\u56de\u503c Year: 2005 fourth '5' input('Year: ')[3] #\u4e5f\u53ef\u4ee5\u4f5c\u7528\u4e8e\u51fd\u6570\u7684\u5e8f\u5217\u8fd4\u56de\u503c Year: 2005 '5' #\u6ce8\u610f\uff0c\u201c\u8bbf\u95ee\u201d\u5e76\u4e0d\u4ec5\u662f\u201c\u8fd4\u56de\u201d\uff0c\u4e0b\u4f8b\u8bc1\u660e\uff1a lst = [1, 2, 3] lst[0] = 0 lst [0, 2, 3] #\u5b57\u7b26\u4e32\u5e76\u4e0d\u80fd\u4fee\u6539\u67d0\u4e2a\u5143\u7d20 greeting[0] = 'P' Traceback (most recent call last): File \" \", line 1, in TypeError: 'str' object does not support item assignment ``` \u5207\u7247 ```python #\u5207\u7247\u53ef\u4ee5\u8bbf\u95ee\u7279\u5b9a\u8303\u56f4\u5185\u7684\u5143\u7d20 numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] numbers[3:6] [4, 5, 6] numbers[0:1] #\u7b2c\u4e00\u4e2a\u7d22\u5f15\u662f\u5305\u542b\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7f16\u53f7\uff0c\u4f46\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u662f\u5207\u7247\u540e\u4f59\u4e0b\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7f16\u53f7 [1] #\u5207\u7247\u7684\u7b80\u5199 numbers[7:10] #\u8d85\u51fa\u8fb9\u754c\u540e\uff0c\u4e0d\u663e\u793a\u8fb9\u754c\u5916\u7684\u5143\u7d20 [8, 9, 10] numbers[-3:0] #\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u5e76\u4e0d\u5728\u7b2c\u4e00\u4e2a\u7684\u6b65\u957f\u65b9\u5411\u4e0a\u65f6\uff0c\u5176\u8fd4\u56de\u503c\u4e3a\u7a7a [] numbers[-3:] #\u4e0d\u6307\u660e\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u65f6\uff0c\u5176\u4e3a\u6b65\u957f\u65b9\u5411\u4e0a\u7684\u79bb\u7b2c\u4e00\u4e2a\u7d22\u5f15\u6700\u8fdc\u7684\u5143\u7d20 [8, 9, 10] numbers[:3] #\u4e0d\u6307\u660e\u7b2c\u4e00\u4e2a\u7d22\u5f15\u65f6\uff0c\u5176\u4e3a\u6b65\u957f\u76f8\u53cd\u65b9\u5411\u4e0a\u7684\u79bb\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u6700\u8fdc\u7684\u5143\u7d20 [1, 2, 3] numbers[:] #\u4e0d\u6307\u660e\u7b2c\u4e00\u3001\u7b2c\u4e8c\u7d22\u5f15\u65f6\uff0c\u5176\u6839\u636e\u6b65\u957f\u65b9\u5411\u81ea\u52a8\u53d6\u5934\u3001\u5c3e [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] #\u6b65\u957f numbers[3:6:3] #\u6b65\u957f\u7f3a\u7701\u4e3a1\uff0c\u6b64\u5904\u6307\u660e\u4e3a3 [4] numbers[8:3:-1] #\u6b65\u957f\u662f\u4e2a\u77e2\u91cf\uff0c\u8d1f\u6570\u65f6\u8868\u793a\u65b9\u5411\u4e3a\u7531\u53f3\u5230\u5de6 [9, 8, 7, 6, 5] numbers[3:8:0] #\u6b65\u957f\u4e0d\u80fd\u4e3a0 Traceback (most recent call last): File \" \", line 1, in ValueError: slice step cannot be zero ``` \u5e8f\u5217\u76f8\u52a0 ```python #\u5e8f\u5217\u76f8\u52a0\u53ea\u662f\u8fd4\u56de\u7ed3\u679c\uff0c\u5e76\u672a\u4fee\u6539\u539f\u5e8f\u5217 [1, 2, 3] + [4, 5, 6] [1, 2, 3, 4, 5, 6] 'Hello,' + 'world!' 'Hello,world!' #\u4e00\u822c\u800c\u8a00\uff0c\u4e0d\u80fd\u62fc\u63a5\u4e0d\u540c\u7c7b\u578b\u7684\u5e8f\u5217 [1, 2, 3] + 'world!' Traceback (most recent call last): File \" \", line 1, in TypeError: can only concatenate list (not \"str\") to list ``` \u4e58\u6cd5 ```python 'python' * 5 'pythonpythonpythonpythonpython' [42] * 10 [42, 42, 42, 42, 42, 42, 42, 42, 42, 42] n = None #None\u662fpython\u4e2d\u4e00\u4e2a\u7279\u6b8a\u7684\u6570\u503c\uff0c\u5176\u8868\u793a\u4e3a\u7a7a sequence = [None] * 10 sequence [None, None, None, None, None, None, None, None, None, None] seq = [n] seq [None] ``` \u6210\u5458\u8d44\u683c ```python #\u8981\u68c0\u67e5\u7279\u5b9a\u7684\u503c\u662f\u5426\u5305\u542b\u5728\u5e8f\u5217\u4e2d\uff0c\u53ef\u4f7f\u7528\u8fd0\u7b97\u7b26in\uff0c\u7ed3\u679c\u4e3a\u5e03\u5c14\u578b\u3002\u5305\u542b\u8fd4\u56deTrue\uff0c\u4e0d\u5305\u542b\u8fd4\u56deFalse permissions = 'rw' 'w' in permissions True 'x' in permissions False #\u4e00\u822c\u5219\u8a00\uff0c\u8fd0\u7b97\u7b26in\u68c0\u67e5\u6307\u5b9a\u7684\u5bf9\u8c61\u662f\u5426\u662f\u5e8f\u5217\uff08\u6216\u5176\u5b83\u96c6\u5408\uff09\u7684\u6210\u5458\uff08\u5373\u5176\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff09 #\u4f46\u5bf9\u4e8e\u5b57\u7b26\u4e32\u6765\u8bf4\uff0c\u53ef\u4ee5\u68c0\u67e5\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u4e32 subject = '$$$ Get rich now!!! $$$' '$$$' in subject True #\u6ce8\u610f\uff0c\u6240\u4ee5\u6210\u5458\u662f\u6307\u5bf9\u8c61\u7684\u76f4\u63a5\u5b50\u5143\u7d20\uff0c\u5e76\u4e0d\u5305\u62ec\u5b50\u5143\u7d20\u7684\u5143\u7d20\u6216\u66f4\u6df1\u7684\u5143\u7d20 lst = [[1,2], [3,4]] 1 in lst False [1,2] in lst True ``` \u957f\u5ea6\u3001\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c ```python #\u53ef\u4ee5\u7528\u51fd\u6570\u8fd4\u56de\u5e8f\u5217\u7684\u957f\u5ea6\u3001\u6700\u5c0f\u503c\u3001\u6700\u5927\u503c numbers = [100, 34, 678] len(numbers) 3 max(numbers) 678 min(numbers) 34 #max, min \u51fd\u6570\u540c\u6837\u53ef\u4ee5\u5bf9\u6bd4\u591a\u4e2a\u5b9e\u6570 max(2,3) 3 min(9, 3, 2, 5) 2 len(1, 2, 3) Traceback (most recent call last): File \" \", line 1, in TypeError: len() takes exactly one argument (3 given) ```","title":"\u901a\u7528\u7684\u5e8f\u5217\u64cd\u4f5c"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e8c\u7ae0 \u5217\u8868\u548c\u5143\u7ec4/#_3","text":"","title":"\u5217\u8868"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e8c\u7ae0 \u5217\u8868\u548c\u5143\u7ec4/#list","text":"#\u53ef\u5c06\u4efb\u4f55\u5e8f\u4f55\uff08\u800c\u4e0d\u4ec5\u4ec5\u662f\u5b57\u7b26\u4e32\uff09\u4f5c\u4e3a list \u7684\u53c2\u6570 >>> list('Hello') ['H', 'e', 'l', 'l', 'o']","title":"\u7c7b list"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e8c\u7ae0 \u5217\u8868\u548c\u5143\u7ec4/#_4","text":"\u9664\u4e86\u901a\u7528\u7684\u5e8f\u5217\u64cd\u4f5c\u5916\uff0c\u5bf9\u4e8e\u5217\u8868\uff0c\u8fd8\u6709\u4e00\u4e9b\u5176\u5b83\u7684\u64cd\u4f5c\uff0c\u4e3b\u8981\u56f4\u7ed5\u5217\u8868\u662f\u53ef\u4fee\u6539\u7684 \u7ed9\u5143\u7d20\u8d4b\u503c ```python x = [1, 1, 1] x[1] = 2 x [1, 2, 1] ``` \u5220\u9664\u5143\u7d20 ```python names = ['Alice', 'Beth', 'Cecil', 'Dee-Dee', 'Earl'] del names[2] names ['Alice', 'Beth', 'Dee-Dee', 'Earl'] len(names) 4 ``` \u7ed9\u5207\u7247\u8d4b\u503c ```python #\u666e\u901a\u7528\u6cd5 name = list('Perl') name ['P', 'e', 'r', 'l'] name[2:] = list('ar') name ['P', 'e', 'a', 'r'] #\u5207\u7247\u957f\u5ea6\u5c0f\u4e8e\u8d4b\u503c\u957f\u5ea6\uff0c\u81ea\u52a8\u6269\u5145 name = list('Perl') name[1:] = list('ython') name ['P', 'y', 't', 'h', 'o', 'n'] #\u5207\u7247\u957f\u5ea6\u5927\u4e8e\u8d4b\u503c\u957f\u5ea6\uff0c\u81ea\u52a8\u7f29\u51cf numbers[1:4] [2, 3, 4] numbers[1:4] = list('he') numbers [1, 'h', 'e', 5] #\u5207\u7247\u4e3a\u7a7a\uff0c\u76f8\u5f53\u4e8e\u63d2\u5165 numbers = [1, 5] numbers[1:1] = [2, 3, 4] numbers [1, 2, 3, 4, 5] #\u8d4b\u503c\u7a7a\uff0c\u76f8\u5f53\u4e8e\u5220\u9664 numbers = [1, 2, 3, 4, 5] numbers[1:4] = [] numbers [1, 5] #\u53ef\u4ee5\u8ba4\u4e3a\u5bf9\u5207\u7247\u7684\u533a\u57df\u8fdb\u884c\u66ff\u6362\uff0c\u65e0\u9700\u8003\u8651\u957f\u5ea6\u4e0d\u4e00\u81f4\uff0c\u4f1a\u81ea\u9002\u5e94 ```","title":"\u57fa\u7840\u7684\u5217\u8868\u64cd\u4f5c"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e8c\u7ae0 \u5217\u8868\u548c\u5143\u7ec4/#_5","text":"append ```python #\u65b9\u6cd5append\u7528\u4e8e\u5c06\u4e00\u4e2a\u5bf9\u8c61\u9644\u52a0\u5230\u5217\u8868\u7684\u672b\u5c3e lst = [1, 2, 3] lst.append(4) lst [1, 2, 3, 4] ``` clear ```python #\u6e05\u7a7a\u5217\u8868\u5185\u5bb9 lst = [1, 2, 3] lst.clear() lst [] ``` copy ```python #\u5c06\u67d0\u4e2a\u53d8\u91cf\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b9e\u9645\u662f\u8d4b\u503c\u6307\u9488 a = [1, 2, 3] b = a b[1] = 4 a [1, 4, 3] #\u901a\u8fc7\u65b9\u5f0fcopy\u53ef\u8fd4\u56de\u5217\u8868\u5bf9\u8c61\u7684\u503c a = [1, 2, 3] b = a.copy() b[1] = 4 a [1, 2, 3] ``` count ```python ['to', 'be', 'or', 'not', 'to', 'be'].count('to') 2 ``` extend ```python #\u65b9\u6cd5extend\u53ef\u4ee5\u540c\u65f6\u5c06\u591a\u4e2a\u503c\u9644\u52a0\u5230\u5217\u8868\u672b\u5c3e a = [1, 2, 3] b = [4, 5, 6] a.extend(b) a [1, 2, 3, 4, 5, 6] #\u53ef\u4ee5\u9644\u52a0\u5b57\u7b26\u4e32\uff1b\u5373\u5c06\u9644\u52a0\u503c\u8f6c\u6362\u6210\u5217\u8868\u540e\u9644\u52a0 c = 'abc' a.extend(c) a [1, 2, 3, 4, 5, 6, 'a', 'b', 'c'] ``` index ```python #\u65b9\u6cd5index\u5728\u5217\u8868\u4e2d\u67e5\u627e\u6307\u5b9a\u503c\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15 knights = ['We', 'are', 'the', 'knights', 'who', 'say', 'ni'] knights.index('who') 4 knights.index('herring') Traceback (most recent call last): File \" \", line 1, in ValueError: 'herring' is not in list ``` insert ```python #\u65b9\u6cd5insert\u7528\u4e8e\u5c06\u4e00\u4e2a\u5bf9\u8c61\u63d2\u5165\u5217\u8868 numbers = [1, 2, 3, 4, 5, 6, 7] numbers.insert(3,'four') numbers [1, 2, 3, 'four', 4, 5, 6, 7] ``` pop ```python x = [1, 2, 3] x.pop() #pop\u662f\u552f\u4e00\u5373\u4fee\u6539\u5217\u8868\u53c8\u8fd4\u56de\u4e00\u4e2a\u975eNone\u503c\u7684\u5217\u8868\u65b9\u6cd5 3 x [1, 2] x.pop(0) #\u53ef\u4ee5\u6307\u5b9apop\u51fa\u54ea\u4e2a\u5143\u7d20 1 x [2] ``` remove ```python #\u65b9\u6cd5remove\u53ef\u4ee5\u79fb\u9664\u6307\u5b9a\u503c\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 x = ['to', 'be', 'or', 'not', 'to', 'be'] x.remove('be') x ['to', 'or', 'not', 'to', 'be'] #\u65e0\u6cd5\u5220\u9664\u5217\u8868\u4e2d\u4e0d\u5b58\u5728\u7684\u6307\u5b9a\u503c\u5143\u7d20 x.remove('bee') Traceback (most recent call last): File \" \", line 1, in ValueError: list.remove(x): x not in list ``` reverse ```python","title":"\u5217\u8868\u65b9\u6cd5"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e8c\u7ae0 \u5217\u8868\u548c\u5143\u7ec4/#reverse","text":"x = [1, 2, 3] x.reverse() x [3, 2, 1]","title":"\u65b9\u6cd5reverse\u6309\u76f8\u53cd\u7684\u987a\u5e8f\u6392\u5217\u5217\u8868\u4e2d\u7684\u5143\u7d20"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e8c\u7ae0 \u5217\u8868\u548c\u5143\u7ec4/#reversed","text":"``` sort ```python","title":"\u53ef\u4ee5\u901a\u8fc7reversed\u51fd\u6570\u53ea\u8fd4\u56de\u9006\u5e8f\u540e\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u4fee\u6539\u539f\u5217\u8868"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e8c\u7ae0 \u5217\u8868\u548c\u5143\u7ec4/#sort","text":"x = [4, 6, 2, 1, 7, 9] x.sort() x [1, 2, 4, 6, 7, 9]","title":"\u65b9\u6cd5sort\u7528\u4e8e\u5bf9\u5217\u8868\u5c31\u5730\u6392\u5e8f"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e8c\u7ae0 \u5217\u8868\u548c\u5143\u7ec4/#sort_1","text":"x = [4, 6, 2, 1, 7, 9] y = x.sort() print(y) None","title":"\u975e\u5e38\u5bb9\u6613\u72af\u7684\u9519\u8bef\uff0c\u6ca1\u6709\u8003\u8651\u5230\u65b9\u6cd5sort\u6ca1\u6709\u8fd4\u56de\u503c"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e8c\u7ae0 \u5217\u8868\u548c\u5143\u7ec4/#sorted","text":"``` \u9ad8\u7ea7\u6392\u5e8f ```python","title":"\u53ef\u4ee5\u901a\u8fc7sorted\u51fd\u6570\u53ea\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u4fee\u6539\u539f\u5217\u8868"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e8c\u7ae0 \u5217\u8868\u548c\u5143\u7ec4/#sortkeyreverse","text":"","title":"\u65b9\u6cd5sort\u63a5\u53d7\u4e24\u4e2a\u53ef\u9009\u53c2\u6570\uff1akey\u548creverse"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e8c\u7ae0 \u5217\u8868\u548c\u5143\u7ec4/#key","text":"x = ['aardvark', 'abalone', 'acme', 'add', 'aerate'] x.sort() x ['aardvark', 'abalone', 'acme', 'add', 'aerate'] x.sort(key=len) x ['add', 'acme', 'aerate', 'abalone', 'aardvark']","title":"key\u8bbe\u7f6e\u4e00\u4e2a\u6392\u5e8f\u7684\u51fd\u6570\uff0c\u4f46\u4e0d\u4f1a\u76f4\u63a5\u901a\u8fc7\u8be5\u51fd\u6570\u5224\u65ad\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u6bd4\u53e6\u4e00\u4e2a\u5143\u7d20\u5c0f\uff0c\u800c\u662f\u4f7f\u7528\u5b83\u6765\u4e3a\u6bcf\u4e2a\u5143\u7d20\u521b\u5efa\u4e00\u4e2a\u952e\uff0c\u518d\u6839\u636e\u8fd9\u4e9b\u952e\u5bf9\u5143\u7d20\u8fdb\u884c\u6392\u5e8f"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e8c\u7ae0 \u5217\u8868\u548c\u5143\u7ec4/#reversetruefalse","text":"x = [4, 6, 2, 1, 7, 9] x.sort(reverse=True) x [9, 7, 6, 4, 2, 1] ```","title":"reverse\u6307\u5b9a\u4e00\u4e2a\u771f\u503c(True\u6216False)\uff0c\u4ee5\u6307\u51fa\u662f\u5426\u8981\u6309\u76f8\u53cd\u7684\u987a\u5e8f\u5bf9\u5217\u8868\u8fdb\u884c\u6392\u5e8f"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e8c\u7ae0 \u5217\u8868\u548c\u5143\u7ec4/#_6","text":"#\u53ea\u8981\u5c06\u4e00\u4e9b\u503c\u7528\u9017\u53f7\u5206\u9694\uff0c\u5c31\u80fd\u81ea\u52a8\u521b\u5efa\u51fa\u4e00\u4e2a\u5143\u7ec4 >>> 1, 2, 3 (1, 2, 3) >>> (1, 2, 3) (1, 2, 3) >>> () () >>> 42 42 >>> 42, (42,) >>> (42,) (42,) #\u62ec\u53f7\u5e76\u4e0d\u662f\u5143\u7ec4\u7684\u5fc5\u8981\u7279\u5f81\uff0c\u9017\u53f7\u624d\u662f\u3002\u6240\u4ee5\u4e0b\u5217\u8868\u8fbe\u5f0f\u53ea\u662f\u521b\u5efa\u4e00\u4e2a\u6574\u578b >>> (42) 42 #\u540c\u6837\u53ef\u4ee5\u4f7f\u7528\u7c7btuple\u5c06\u5e8f\u5217\u8f6c\u6362\u6210\u5143\u7ec4 >>> x = tuple('hello') >>> x ('h', 'e', 'l', 'l', 'o') #\u5e8f\u5217\u7684\u901a\u7528\u64cd\u4f5c\u540c\u6837\u9002\u7528\u4e8e\u5143\u7ec4 >>> x * 5 ('h', 'e', 'l', 'l', 'o', 'h', 'e', 'l', 'l', 'o', 'h', 'e', 'l', 'l', 'o', 'h', 'e', 'l', 'l', 'o', 'h', 'e', 'l', 'l', 'o')","title":"\u5143\u7ec4\uff1a\u4e0d\u53ef\u4fee\u6539\u7684\u5e8f\u5217"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/","text":"print \u548c import \u6253\u5370\u591a\u4e2a\u53c2\u6570 print \u53ef\u7528\u4e8e\u6253\u5370\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u8981\u4e48\u662f\u5b57\u7b26\u4e32\uff0c\u8981\u4e48\u5c06\u81ea\u52a8\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 >>> print('Age', 42) Age 42 >>> >>> name = 'Gumby' >>> salutation = 'Mr.' >>> greeting = 'Hello,' >>> print(greeting, salutation, name) Hello, Mr. Gumby >>> greeting = 'Hello' >>> print(greeting + ',', salutation, name) #\u5f53\u53d8\u91cf\u4e0d\u5305\u542b','\u65f6\uff0c\u91c7\u7528 + \u8fd0\u7b97\u7b26\u76f8\u8fde Hello, Mr. Gumby #\u53ef\u81ea\u5b9a\u4e49\u5206\u9694\u7b26\uff0c\u7f3a\u7701\u4e3a\u7a7a\u683c >>> print('I', 'wish', 'to', 'register', 'a', 'complaint') I wish to register a complaint >>> print('I', 'wish', 'to', 'register', 'a', 'complaint', sep = '_') I_wish_to_register_a_complaint #\u53ef\u81ea\u5b9a\u4e49\u7ed3\u675f\u5b57\u7b26\u4e32\uff0c\u7f3a\u7701\u4e3a\u6362\u884c\u7b26 >>> print('Hello,'); print('world!') Hello, world! >>> print('Hello,', end = ''); print('world!') Hello,world! \u5bfc\u5165\u65f6\u91cd\u547d\u540d import somemodule from somemodule import somefunction from somemodule import somefunction, anotherfunction, yetanotherfunction from somemodule import * #\u53ef\u4ee5\u5bf9\u5bfc\u5165\u6a21\u5757\u8fdb\u884c\u91cd\u547d\u540d\u3001\u4e5f\u53ef\u4ee5\u5bf9\u5bfc\u5165\u51fd\u6570 >>> import math as foobar >>> foobar.sqrt(4) 2.0 >>> from math import sqrt as foobar >>> foobar(4) 2.0 #\u4e00\u4e2a\u6a21\u5757\u53ef\u4ee5\u4f4d\u4e8e\u53e6\u4e00\u4e2a\u6a21\u5757\u4e2d \u8d4b\u503c\u9b54\u6cd5 \u5e8f\u5217\u89e3\u5305 #\u5e8f\u5217\u89e3\u5305(\u6216\u53ef\u8fed\u4ee3\u5bf9\u8c61\u89e3\u5305): \u5c06\u4e00\u4e2a\u5e8f\u5217\uff08\u6216\u4efb\u4f55\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff09\u89e3\u5305\uff0c\u5e76\u5c06\u5f97\u5230\u7684\u503c\u5b58\u50a8\u5230\u4e00\u7cfb\u5217\u53d8\u91cf\u4e2d >>> x, y, z = 1, 2, 3 #\u6ce8\u610f\uff0c\u53f3\u4fa7\u662f\u5143\u7ec4 >>> print(x, y, z) 1 2 3 >>> >>> x, y = y, x >>> print(x, y, z) 2 1 3 #\u8981\u89e3\u5305\u7684\u5e8f\u5217\u5305\u542b\u7684\u5143\u7d20\u4e2a\u6570\u5fc5\u987b\u4e0e\u5728\u7b49\u53f7\u5de6\u8fb9\u5217\u51fa\u7684\u76ee\u6807\u4e2a\u6570\u76f8\u540c\uff0c\u5426\u5219python\u5c06\u5f15\u53d1\u5f02\u5e38 >>> x, y, z = 1, 2 Traceback (most recent call last): File \"<stdin>\", line 1, in <module> ValueError: not enough values to unpack (expected 3, got 2) >>> x, y, z = 1, 2, 3, 4 Traceback (most recent call last): File \"<stdin>\", line 1, in <module> ValueError: too many values to unpack (expected 3) #\u53ef\u4f7f\u7528\u661f\u53f7\u8fd0\u7b97\u7b26(*)\u6765\u6536\u96c6\u591a\u4f59\u7684\u503c\uff0c\u8fd9\u6837\u65e0\u9700\u786e\u4fdd\u548c\u53d8\u91cf\u7684\u4e2a\u6570\u76f8\u540c >>> a, b, *rest = [1, 2, 3,4] >>> rest [3, 4] >>> >>> name = 'Albus Percival Wulfric Brian Dumbledore' >>> first, *middle, last = name.split() >>> middle ['Percival', 'Wulfric', 'Brian'] #\u6ce8\u610f\uff0c\u5e26\u661f\u53f7\u7684\u53d8\u91cf\u6700\u7ec8\u5305\u542b\u7684\u603b\u662f\u4e00\u4e2a\u5217\u8868 >>> a, *b, c = 'abc' >>> a, b, c ('a', ['b'], 'c') \u5f85\u8865\u5145\uff1a\u94fe\u5f0f\u8d4b\u503c\u3001\u589e\u5f3a\u8d4b\u503c \u4ee3\u7801\u5757 \u4ee3\u7801\u5757\u662f\u4e00\u7ec4\u8bed\u53e5\uff0c\u901a\u8fc7 \u7f29\u8fdb \u4ee3\u7801\uff08\u5373\u5728\u524d\u9762\u52a0\u7a7a\u683c\uff09\u6765\u521b\u5efa\u3002\u5728\u540c\u4e00\u4e2a\u4ee3\u7801\u5757\u4e2d\uff0c\u5404\u884c\u4ee3\u7801\u7684\u7f29\u8fdb\u91cf\u5fc5\u987b\u76f8\u540c \u5728Python\u4e2d\uff0c\u4f7f\u7528 \u5192\u53f7(:) \u6307\u51fa\u63a5\u4e0b\u6765\u662f\u4e00\u4e2a\u4ee3\u7801\u5757\uff0c\u5e76\u5c06\u8be5\u4ee3\u7801\u5757\u4e2d\u7684\u6bcf\u884c\u4ee3\u7801\u90fd\u7f29\u8fdb\u76f8\u540c\u7684\u7a0b\u5ea6 \u6761\u4ef6\u548c\u6761\u4ef6\u8bed\u95ee \u771f\u503c\uff08\u5e03\u5c14\u503c\uff09 \u6807\u51c6\u503cFalse\u548cNone\u3001\u5404\u79cd\u7c7b\u578b\uff08\u5305\u62ec\u6d6e\u70b9\u6570\u3001\u590d\u6570\u7b49\uff09\u7684\u6570\u503c0\u3001\u7a7a\u5e8f\u5217\uff08\u5982\u7a7a\u5b57\u7b26\u4e32\u3001\u7a7a\u5143\u7ec4\u548c\u7a7a\u5217\u8868\uff09\u4ee5\u53ca\u7a7a\u6620\u5c04\uff08\u5982\u7a7a\u5b57\u5178\uff09\u90fd\u88ab\u89c6\u4e3a\u5047\uff0c\u800c\u5176\u4ed6\u5404\u79cd\u503c\u88ab\u89c6\u4e3a\u771f\uff0c\u5305\u62ec\u7279\u6b8a\u503cTrue #True \u548c False \u4e0d\u8fc7\u662f 0 \u548c 1 \u7684\u522b\u540d >>> True == 1 True >>> False == 0 True >>> True + False + 42 43 >>> 1 is 1 True >>> True is 1 False >>> False is 0 False \u6709\u6761\u4ef6\u5730\u6267\u884c\uff1aif \u8bed\u53e5 else \u5b50\u53e5 #\u6761\u4ef6\u8868\u8fbe\u5f0f >>> name = 'Gumby' >>> status = 'friend' if name.endswith('Gumby') else 'stranger' >>> status 'friend' >>> name = 'Convex' >>> status = 'friend' if name.endswith('Gumby') else 'stranger'' >>> status 'stranger' elif\u5b50\u53e5 \u77ed\u8def\u903b\u8f91\u548c\u6761\u4ef6\u8868\u8fbe\u5f0f >>> 2 or 3 2 >>> 2 or True 2 >>> 2 and 3 3 >>> 2 and False False >>> name = input('Please enter your name: ') or '<unknown>' Please enter your name: Convex >>> name 'Convex' >>> name = input('Please enter your name: ') or '<unknown>' Please enter your name: >>> name '<unknown>' \u65ad\u8a00\uff1aassert >>> age = 10 >>> assert 0 < age < 100 >>> age = -1 >>> assert 0 < age < 100 Traceback (most recent call last): File \"<stdin>\", line 1, in <module> AssertionError >>> assert 0 < age < 100, 'The age must be realistic' #\u5728\u6761\u4ef6\u540e\u9762\u6dfb\u52a0\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5bf9\u65ad\u8a00\u505a\u51fa\u8bf4\u660e Traceback (most recent call last): File \"<stdin>\", line 1, in <module> AssertionError: The age must be realistic \u5faa\u73af while\u5faa\u73af >>> x = 1 >>> while x <= 100: ... print(x) ... x += 1 ... 1 2 3 ... #\u7701\u75654-99 100 for\u5faa\u73af >>> words = ['this', 'is', 'an', 'ex', 'parrot'] >>> for word in words: ... print(word) ... this is an ex parrot #\u521b\u5efa\u8303\u56f4\u7684\u5185\u7f6e\u51fd\u6570 >>> range(0,10) range(0, 10) >>> list(range(0, 10)) [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] #\u4e0a\u9762while\u4f8b\u5b50\u53ef\u7528for\u5b9e\u73b0\uff0c\u5176\u4ee3\u7801\u8981\u7d27\u51d1\u5f97\u591a for number in range(1, 101): print(number) #\u53ea\u8981\u80fd\u591f\u4f7f\u7528for\u5faa\u73af\uff0c\u5c31\u4e0d\u8981\u4f7f\u7528while\u5faa\u73af \u8fed\u4ee3\u5b57\u5178 #\u904d\u5386\u5b57\u5178\u7684\u5173\u952e\u5b57 >>> d = {'x': 1, 'y': 2, 'z': 3} >>> for key in d: ... print(key, 'corresponds to', d[key]) ... x corresponds to 1 y corresponds to 2 z corresponds to 3 #for\u53ef\u4ee5\u4f7f\u7528\u5e8f\u5217\u89e3\u5305 >>> for key, value in d.items(): ... print(key, 'corresponds to', value) ... x corresponds to 1 y corresponds to 2 z corresponds to 3 #\u5b57\u5178\u7684\u5143\u7d20\u7684\u6392\u5217\u987a\u5e8f\u662f\u4e0d\u786e\u5b9a\u7684\u3002\u8981\u8ba9\u6620\u5c04\u8bb0\u4f4f\u5176\u9879\u7684\u63d2\u5165\u987a\u5e8f\uff0c\u53ef\u4f7f\u7528\u6a21\u5757collections\u4e2d\u7684OrderedDict\u7c7b \u4e00\u4e9b\u8fed\u4ee3\u5de5\u5177 \u5e76\u884c\u8fed\u4ee3 ```python names = ['anne', 'beth', 'george', 'damon'] ages = [12, 45, 32, 102] for i in range(len(names)): ... print(names[i], 'is', ages[i], 'years old') ... anne is 12 years old beth is 45 years old george is 32 years old damon is 102 years old #\u4f7f\u7528\u5185\u7f6e\u51fd\u6570zip\u5b9e\u73b0 names = ['anne', 'beth', 'george', 'damon'] ages = [12, 45, 32, 102] for name, age in zip(names, ages): #\u6ce8\u610f\uff0cfor\u548czip\u4e4b\u524d\u7684\u8868\u8fbe\u5f0f\u662f\u5143\u7ec4 print(name, 'is', age, 'years old') #\u51fd\u6570zip\u53ef\u7528\u4e8e\u201c\u7f1d\u5408\u201d\u4efb\u610f\u6570\u91cf\u7684\u5e8f\u5217\uff0c\u4f46\u5f53\u957f\u5ea6\u4e0d\u540c\u65f6\uff0c\u5c06\u5728\u6700\u77ed\u7684\u5e8f\u5217\u7528\u5b8c\u540e\u505c\u6b62\u201c\u7f1d\u5408\u201d list(zip(range(5), range(100000000))) [(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)] ``` \u8fed\u4ee3\u65f6\u83b7\u53d6\u7d22\u5f15 python #\u53ef\u80fd\u60f3\u66ff\u6362\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868\u4e2d\u6240\u6709\u5305\u542b\u5b50\u4e32'xxx'\u7684\u5b57\u7b26\u4e32 for index, string in enumerate(strings): if 'xxx' in string: strings[index] = '[censored]' \u53cd\u5411\u8fed\u4ee3\u548c\u6392\u5e8f\u540e\u518d\u8fed\u4ee3 ```python sorted([4, 3, 6, 8, 3]) #sorted\u8fd4\u56de\u4e00\u4e2a\u5217\u8868 [3, 3, 4, 6, 8] sorted('Hello, world!') [' ', '!', ',', 'H', 'd', 'e', 'l', 'l', 'l', 'o', 'o', 'r', 'w'] reversed('Hello, world!') #reversed\u8fd4\u56de\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61 list(reversed('Hello, world!')) ['!', 'd', 'l', 'r', 'o', 'w', ' ', ',', 'o', 'l', 'l', 'e', 'H'] ''.join(reversed('Hello, world!')) '!dlrow ,olleH' ``` \u8df3\u51fa\u5faa\u73af break ```python #\u8981\u7ed3\u675f(\u8df3\u51fa)\u5faa\u73af\uff0c\u53ef\u4f7f\u7528break from math import sqrt for n in range(99, 0, -1): #range\u53ef\u4ee5\u6307\u5b9a\u6b65\u957f ... root = sqrt(n) ... if root == int(root): ... print(n) ... break ... 81 ``` continue ```python #\u8bed\u53e5continue\u7ed3\u675f\u5f53\u524d\u8fed\u4ee3\uff0c\u5e76\u8df3\u5230\u4e0b\u4e00\u6b21\u8fed\u4ee3\u5f00\u5934 for x in seq: if condition1: continue if condition2: continue if condition3: continue do_something() do_something_else() do_another_thing() etc() ``` while True/break\u6210\u4f8b python while True: word = input('Please enter a word: ') if not word: break print('The word was ', word) \u5faa\u73af\u4e2d\u7684else\u5b50\u53e5 python #\u5faa\u73af\u4e2d\u7684else\u5b50\u53e5\uff0c\u4ec5\u5728\u6ca1\u6709\u8c03\u7528break\u65f6\u624d\u6267\u884c from math import sqrt for n in range(99, 81, -1): root = sqrt(n) if root == int(root): print(n) break else: print('Didn't find it!') \u7b80\u5355\u63a8\u5bfc \u5217\u8868\u63a8\u5bfc >>> girls = ['alice', 'bernice', 'clarice'] >>> boys = ['chris', 'arnold', 'bob'] >>> [b + '+' + g for b in boys for g in girls if b[0] == g[0]] #\u6ce8\u610f\uff0c\u5f00\u5934\u662f\u8868\u8fbe\u5f0f\uff0c\u5176\u7ed3\u679c\u4f5c\u4e3a\u5217\u8868\u7684\u5143\u7d20 ['chris+clarice', 'arnold+alice', 'bob+bernice'] >>> girls = ['alice', 'bernice', 'clarice'] >>> boys = ['chris', 'arnold', 'bob'] >>> letterGirls = {} >>> for girl in girls: ... letterGirls.setdefault(girl[0], []).append(girl) #\u5b57\u5178\u7684setdefault\u65b9\u6cd5\u8fd4\u56de\u7684\u503c\u5b9e\u9645\u662f\u5b57\u5178\u9879\u7684\u503c\u539f\u672c\uff0c\u800c\u975e\u526f\u672c ... >>> print([b + '+' + g for b in boys for g in letterGirls[b[0]]]) ['chris+clarice', 'arnold+alice', 'bob+bernice'] \u5e76\u6ca1\u6709\u5143\u7ec4\u63a8\u5bfc\uff0c\u4f7f\u7528()\u662f\u521b\u5efa \u751f\u6210\u5668 \u5b57\u5178\u63a8\u5bfc >>> squares = {i: \"{} squared is {}\".format(i, i**2) for i in range(10)} >>> squares[8] '8 squared is 64' pass, del, exec pass \u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u9002\u5408\u7528\u4f5c\u5360\u4f4d\u7b26 del \u53ea\u662f\u5220\u9664\u53d8\u91cf\u6216\u6570\u636e\u7ed3\u6784\u7684\u6210\u5458\uff0c\u4f46\u4e0d\u80fd\u7528\u4e8e\u5220\u9664\u503c\u3002\u751a\u81f3\u5728Python\u4e2d\u6839\u672c\u6ca1\u6709\u529e\u6cd5\u5220\u9664\uff0c\u53ea\u6709\u5728\u6570\u503c\u4e0d\u518d\u4f7f\u7528\u65f6\uff0cPython\u89e3\u91ca\u5668\u4f1a\u7acb\u5373\u5c06\u5176\u5220\u9664 ```python #\u51fd\u6570exec\u5c06\u5b57\u7b26\u4e32\u4f5c\u4e3a\u4ee3\u7801\u6267\u884c exec('print(\"Hello, world!\")') Hello, world! exec(input('command: ')) command: print('Hello') Hello #\u901a\u8fc7\u7ed9exec\u4f20\u9012\u7b2c\u4e8c\u4e2a\u53c2\u6570\u2014\u2014\u5b57\u5178\uff0c\u7528\u4f5c\u4ee3\u7801\u5b57\u7b26\u4e32\u7684\u547d\u540d\u7a7a\u95f4 from math import sqrt scope = {} exec('sqrt = 1', scope) sqrt(4) 2.0 scope['sqrt'] 1 scope.keys() dict_keys([' builtins ', 'sqrt']) #exec\u6267\u884c\u4e00\u7cfb\u5217Python\u8bed\u53e5\uff0c\u800ceval\u8ba1\u7b97\u7528\u5b57\u7b26\u4e32\u8868\u793a\u7684Python\u8868\u8fbe\u5f0f\uff08\u5305\u62ec\u51fd\u6570\uff09\u7684\u503c\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c eval(input(\"Enter an arithmetic expression: \")) Enter an arithmetic expression: 6 + 18 * 2 42 #\u4e3a\u907f\u514deval\u6267\u884c\u51fd\u6570\u5f71\u54cd\u5168\u5c40\u53d8\u91cf\uff0c\u5efa\u8bae\u4e5f\u63d0\u4f9b\u5355\u72ec\u547d\u540d\u5b57\u95f4 ```","title":"\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#print-import","text":"","title":"print \u548c import"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#_1","text":"print \u53ef\u7528\u4e8e\u6253\u5370\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u8981\u4e48\u662f\u5b57\u7b26\u4e32\uff0c\u8981\u4e48\u5c06\u81ea\u52a8\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 >>> print('Age', 42) Age 42 >>> >>> name = 'Gumby' >>> salutation = 'Mr.' >>> greeting = 'Hello,' >>> print(greeting, salutation, name) Hello, Mr. Gumby >>> greeting = 'Hello' >>> print(greeting + ',', salutation, name) #\u5f53\u53d8\u91cf\u4e0d\u5305\u542b','\u65f6\uff0c\u91c7\u7528 + \u8fd0\u7b97\u7b26\u76f8\u8fde Hello, Mr. Gumby #\u53ef\u81ea\u5b9a\u4e49\u5206\u9694\u7b26\uff0c\u7f3a\u7701\u4e3a\u7a7a\u683c >>> print('I', 'wish', 'to', 'register', 'a', 'complaint') I wish to register a complaint >>> print('I', 'wish', 'to', 'register', 'a', 'complaint', sep = '_') I_wish_to_register_a_complaint #\u53ef\u81ea\u5b9a\u4e49\u7ed3\u675f\u5b57\u7b26\u4e32\uff0c\u7f3a\u7701\u4e3a\u6362\u884c\u7b26 >>> print('Hello,'); print('world!') Hello, world! >>> print('Hello,', end = ''); print('world!') Hello,world!","title":"\u6253\u5370\u591a\u4e2a\u53c2\u6570"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#_2","text":"import somemodule from somemodule import somefunction from somemodule import somefunction, anotherfunction, yetanotherfunction from somemodule import * #\u53ef\u4ee5\u5bf9\u5bfc\u5165\u6a21\u5757\u8fdb\u884c\u91cd\u547d\u540d\u3001\u4e5f\u53ef\u4ee5\u5bf9\u5bfc\u5165\u51fd\u6570 >>> import math as foobar >>> foobar.sqrt(4) 2.0 >>> from math import sqrt as foobar >>> foobar(4) 2.0 #\u4e00\u4e2a\u6a21\u5757\u53ef\u4ee5\u4f4d\u4e8e\u53e6\u4e00\u4e2a\u6a21\u5757\u4e2d","title":"\u5bfc\u5165\u65f6\u91cd\u547d\u540d"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#_3","text":"","title":"\u8d4b\u503c\u9b54\u6cd5"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#_4","text":"#\u5e8f\u5217\u89e3\u5305(\u6216\u53ef\u8fed\u4ee3\u5bf9\u8c61\u89e3\u5305): \u5c06\u4e00\u4e2a\u5e8f\u5217\uff08\u6216\u4efb\u4f55\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff09\u89e3\u5305\uff0c\u5e76\u5c06\u5f97\u5230\u7684\u503c\u5b58\u50a8\u5230\u4e00\u7cfb\u5217\u53d8\u91cf\u4e2d >>> x, y, z = 1, 2, 3 #\u6ce8\u610f\uff0c\u53f3\u4fa7\u662f\u5143\u7ec4 >>> print(x, y, z) 1 2 3 >>> >>> x, y = y, x >>> print(x, y, z) 2 1 3 #\u8981\u89e3\u5305\u7684\u5e8f\u5217\u5305\u542b\u7684\u5143\u7d20\u4e2a\u6570\u5fc5\u987b\u4e0e\u5728\u7b49\u53f7\u5de6\u8fb9\u5217\u51fa\u7684\u76ee\u6807\u4e2a\u6570\u76f8\u540c\uff0c\u5426\u5219python\u5c06\u5f15\u53d1\u5f02\u5e38 >>> x, y, z = 1, 2 Traceback (most recent call last): File \"<stdin>\", line 1, in <module> ValueError: not enough values to unpack (expected 3, got 2) >>> x, y, z = 1, 2, 3, 4 Traceback (most recent call last): File \"<stdin>\", line 1, in <module> ValueError: too many values to unpack (expected 3) #\u53ef\u4f7f\u7528\u661f\u53f7\u8fd0\u7b97\u7b26(*)\u6765\u6536\u96c6\u591a\u4f59\u7684\u503c\uff0c\u8fd9\u6837\u65e0\u9700\u786e\u4fdd\u548c\u53d8\u91cf\u7684\u4e2a\u6570\u76f8\u540c >>> a, b, *rest = [1, 2, 3,4] >>> rest [3, 4] >>> >>> name = 'Albus Percival Wulfric Brian Dumbledore' >>> first, *middle, last = name.split() >>> middle ['Percival', 'Wulfric', 'Brian'] #\u6ce8\u610f\uff0c\u5e26\u661f\u53f7\u7684\u53d8\u91cf\u6700\u7ec8\u5305\u542b\u7684\u603b\u662f\u4e00\u4e2a\u5217\u8868 >>> a, *b, c = 'abc' >>> a, b, c ('a', ['b'], 'c') \u5f85\u8865\u5145\uff1a\u94fe\u5f0f\u8d4b\u503c\u3001\u589e\u5f3a\u8d4b\u503c","title":"\u5e8f\u5217\u89e3\u5305"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#_5","text":"\u4ee3\u7801\u5757\u662f\u4e00\u7ec4\u8bed\u53e5\uff0c\u901a\u8fc7 \u7f29\u8fdb \u4ee3\u7801\uff08\u5373\u5728\u524d\u9762\u52a0\u7a7a\u683c\uff09\u6765\u521b\u5efa\u3002\u5728\u540c\u4e00\u4e2a\u4ee3\u7801\u5757\u4e2d\uff0c\u5404\u884c\u4ee3\u7801\u7684\u7f29\u8fdb\u91cf\u5fc5\u987b\u76f8\u540c \u5728Python\u4e2d\uff0c\u4f7f\u7528 \u5192\u53f7(:) \u6307\u51fa\u63a5\u4e0b\u6765\u662f\u4e00\u4e2a\u4ee3\u7801\u5757\uff0c\u5e76\u5c06\u8be5\u4ee3\u7801\u5757\u4e2d\u7684\u6bcf\u884c\u4ee3\u7801\u90fd\u7f29\u8fdb\u76f8\u540c\u7684\u7a0b\u5ea6","title":"\u4ee3\u7801\u5757"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#_6","text":"","title":"\u6761\u4ef6\u548c\u6761\u4ef6\u8bed\u95ee"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#_7","text":"\u6807\u51c6\u503cFalse\u548cNone\u3001\u5404\u79cd\u7c7b\u578b\uff08\u5305\u62ec\u6d6e\u70b9\u6570\u3001\u590d\u6570\u7b49\uff09\u7684\u6570\u503c0\u3001\u7a7a\u5e8f\u5217\uff08\u5982\u7a7a\u5b57\u7b26\u4e32\u3001\u7a7a\u5143\u7ec4\u548c\u7a7a\u5217\u8868\uff09\u4ee5\u53ca\u7a7a\u6620\u5c04\uff08\u5982\u7a7a\u5b57\u5178\uff09\u90fd\u88ab\u89c6\u4e3a\u5047\uff0c\u800c\u5176\u4ed6\u5404\u79cd\u503c\u88ab\u89c6\u4e3a\u771f\uff0c\u5305\u62ec\u7279\u6b8a\u503cTrue #True \u548c False \u4e0d\u8fc7\u662f 0 \u548c 1 \u7684\u522b\u540d >>> True == 1 True >>> False == 0 True >>> True + False + 42 43 >>> 1 is 1 True >>> True is 1 False >>> False is 0 False","title":"\u771f\u503c\uff08\u5e03\u5c14\u503c\uff09"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#if","text":"","title":"\u6709\u6761\u4ef6\u5730\u6267\u884c\uff1aif \u8bed\u53e5"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#else","text":"#\u6761\u4ef6\u8868\u8fbe\u5f0f >>> name = 'Gumby' >>> status = 'friend' if name.endswith('Gumby') else 'stranger' >>> status 'friend' >>> name = 'Convex' >>> status = 'friend' if name.endswith('Gumby') else 'stranger'' >>> status 'stranger'","title":"else \u5b50\u53e5"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#elif","text":"","title":"elif\u5b50\u53e5"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#_8","text":">>> 2 or 3 2 >>> 2 or True 2 >>> 2 and 3 3 >>> 2 and False False >>> name = input('Please enter your name: ') or '<unknown>' Please enter your name: Convex >>> name 'Convex' >>> name = input('Please enter your name: ') or '<unknown>' Please enter your name: >>> name '<unknown>'","title":"\u77ed\u8def\u903b\u8f91\u548c\u6761\u4ef6\u8868\u8fbe\u5f0f"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#assert","text":">>> age = 10 >>> assert 0 < age < 100 >>> age = -1 >>> assert 0 < age < 100 Traceback (most recent call last): File \"<stdin>\", line 1, in <module> AssertionError >>> assert 0 < age < 100, 'The age must be realistic' #\u5728\u6761\u4ef6\u540e\u9762\u6dfb\u52a0\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5bf9\u65ad\u8a00\u505a\u51fa\u8bf4\u660e Traceback (most recent call last): File \"<stdin>\", line 1, in <module> AssertionError: The age must be realistic","title":"\u65ad\u8a00\uff1aassert"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#_9","text":"","title":"\u5faa\u73af"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#while","text":">>> x = 1 >>> while x <= 100: ... print(x) ... x += 1 ... 1 2 3 ... #\u7701\u75654-99 100","title":"while\u5faa\u73af"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#for","text":">>> words = ['this', 'is', 'an', 'ex', 'parrot'] >>> for word in words: ... print(word) ... this is an ex parrot #\u521b\u5efa\u8303\u56f4\u7684\u5185\u7f6e\u51fd\u6570 >>> range(0,10) range(0, 10) >>> list(range(0, 10)) [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] #\u4e0a\u9762while\u4f8b\u5b50\u53ef\u7528for\u5b9e\u73b0\uff0c\u5176\u4ee3\u7801\u8981\u7d27\u51d1\u5f97\u591a for number in range(1, 101): print(number) #\u53ea\u8981\u80fd\u591f\u4f7f\u7528for\u5faa\u73af\uff0c\u5c31\u4e0d\u8981\u4f7f\u7528while\u5faa\u73af","title":"for\u5faa\u73af"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#_10","text":"#\u904d\u5386\u5b57\u5178\u7684\u5173\u952e\u5b57 >>> d = {'x': 1, 'y': 2, 'z': 3} >>> for key in d: ... print(key, 'corresponds to', d[key]) ... x corresponds to 1 y corresponds to 2 z corresponds to 3 #for\u53ef\u4ee5\u4f7f\u7528\u5e8f\u5217\u89e3\u5305 >>> for key, value in d.items(): ... print(key, 'corresponds to', value) ... x corresponds to 1 y corresponds to 2 z corresponds to 3 #\u5b57\u5178\u7684\u5143\u7d20\u7684\u6392\u5217\u987a\u5e8f\u662f\u4e0d\u786e\u5b9a\u7684\u3002\u8981\u8ba9\u6620\u5c04\u8bb0\u4f4f\u5176\u9879\u7684\u63d2\u5165\u987a\u5e8f\uff0c\u53ef\u4f7f\u7528\u6a21\u5757collections\u4e2d\u7684OrderedDict\u7c7b","title":"\u8fed\u4ee3\u5b57\u5178"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#_11","text":"\u5e76\u884c\u8fed\u4ee3 ```python names = ['anne', 'beth', 'george', 'damon'] ages = [12, 45, 32, 102] for i in range(len(names)): ... print(names[i], 'is', ages[i], 'years old') ... anne is 12 years old beth is 45 years old george is 32 years old damon is 102 years old #\u4f7f\u7528\u5185\u7f6e\u51fd\u6570zip\u5b9e\u73b0 names = ['anne', 'beth', 'george', 'damon'] ages = [12, 45, 32, 102] for name, age in zip(names, ages): #\u6ce8\u610f\uff0cfor\u548czip\u4e4b\u524d\u7684\u8868\u8fbe\u5f0f\u662f\u5143\u7ec4 print(name, 'is', age, 'years old') #\u51fd\u6570zip\u53ef\u7528\u4e8e\u201c\u7f1d\u5408\u201d\u4efb\u610f\u6570\u91cf\u7684\u5e8f\u5217\uff0c\u4f46\u5f53\u957f\u5ea6\u4e0d\u540c\u65f6\uff0c\u5c06\u5728\u6700\u77ed\u7684\u5e8f\u5217\u7528\u5b8c\u540e\u505c\u6b62\u201c\u7f1d\u5408\u201d list(zip(range(5), range(100000000))) [(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)] ``` \u8fed\u4ee3\u65f6\u83b7\u53d6\u7d22\u5f15 python #\u53ef\u80fd\u60f3\u66ff\u6362\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868\u4e2d\u6240\u6709\u5305\u542b\u5b50\u4e32'xxx'\u7684\u5b57\u7b26\u4e32 for index, string in enumerate(strings): if 'xxx' in string: strings[index] = '[censored]' \u53cd\u5411\u8fed\u4ee3\u548c\u6392\u5e8f\u540e\u518d\u8fed\u4ee3 ```python sorted([4, 3, 6, 8, 3]) #sorted\u8fd4\u56de\u4e00\u4e2a\u5217\u8868 [3, 3, 4, 6, 8] sorted('Hello, world!') [' ', '!', ',', 'H', 'd', 'e', 'l', 'l', 'l', 'o', 'o', 'r', 'w'] reversed('Hello, world!') #reversed\u8fd4\u56de\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61 list(reversed('Hello, world!')) ['!', 'd', 'l', 'r', 'o', 'w', ' ', ',', 'o', 'l', 'l', 'e', 'H'] ''.join(reversed('Hello, world!')) '!dlrow ,olleH' ```","title":"\u4e00\u4e9b\u8fed\u4ee3\u5de5\u5177"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#_12","text":"break ```python #\u8981\u7ed3\u675f(\u8df3\u51fa)\u5faa\u73af\uff0c\u53ef\u4f7f\u7528break from math import sqrt for n in range(99, 0, -1): #range\u53ef\u4ee5\u6307\u5b9a\u6b65\u957f ... root = sqrt(n) ... if root == int(root): ... print(n) ... break ... 81 ``` continue ```python #\u8bed\u53e5continue\u7ed3\u675f\u5f53\u524d\u8fed\u4ee3\uff0c\u5e76\u8df3\u5230\u4e0b\u4e00\u6b21\u8fed\u4ee3\u5f00\u5934 for x in seq: if condition1: continue if condition2: continue if condition3: continue do_something() do_something_else() do_another_thing() etc() ``` while True/break\u6210\u4f8b python while True: word = input('Please enter a word: ') if not word: break print('The word was ', word) \u5faa\u73af\u4e2d\u7684else\u5b50\u53e5 python #\u5faa\u73af\u4e2d\u7684else\u5b50\u53e5\uff0c\u4ec5\u5728\u6ca1\u6709\u8c03\u7528break\u65f6\u624d\u6267\u884c from math import sqrt for n in range(99, 81, -1): root = sqrt(n) if root == int(root): print(n) break else: print('Didn't find it!')","title":"\u8df3\u51fa\u5faa\u73af"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#_13","text":"","title":"\u7b80\u5355\u63a8\u5bfc"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#_14","text":">>> girls = ['alice', 'bernice', 'clarice'] >>> boys = ['chris', 'arnold', 'bob'] >>> [b + '+' + g for b in boys for g in girls if b[0] == g[0]] #\u6ce8\u610f\uff0c\u5f00\u5934\u662f\u8868\u8fbe\u5f0f\uff0c\u5176\u7ed3\u679c\u4f5c\u4e3a\u5217\u8868\u7684\u5143\u7d20 ['chris+clarice', 'arnold+alice', 'bob+bernice'] >>> girls = ['alice', 'bernice', 'clarice'] >>> boys = ['chris', 'arnold', 'bob'] >>> letterGirls = {} >>> for girl in girls: ... letterGirls.setdefault(girl[0], []).append(girl) #\u5b57\u5178\u7684setdefault\u65b9\u6cd5\u8fd4\u56de\u7684\u503c\u5b9e\u9645\u662f\u5b57\u5178\u9879\u7684\u503c\u539f\u672c\uff0c\u800c\u975e\u526f\u672c ... >>> print([b + '+' + g for b in boys for g in letterGirls[b[0]]]) ['chris+clarice', 'arnold+alice', 'bob+bernice']","title":"\u5217\u8868\u63a8\u5bfc"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#_15","text":"","title":"\u5e76\u6ca1\u6709\u5143\u7ec4\u63a8\u5bfc\uff0c\u4f7f\u7528()\u662f\u521b\u5efa\u751f\u6210\u5668"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#_16","text":">>> squares = {i: \"{} squared is {}\".format(i, i**2) for i in range(10)} >>> squares[8] '8 squared is 64'","title":"\u5b57\u5178\u63a8\u5bfc"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u4e94\u7ae0 \u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u95ee/#pass-del-exec","text":"pass \u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u9002\u5408\u7528\u4f5c\u5360\u4f4d\u7b26 del \u53ea\u662f\u5220\u9664\u53d8\u91cf\u6216\u6570\u636e\u7ed3\u6784\u7684\u6210\u5458\uff0c\u4f46\u4e0d\u80fd\u7528\u4e8e\u5220\u9664\u503c\u3002\u751a\u81f3\u5728Python\u4e2d\u6839\u672c\u6ca1\u6709\u529e\u6cd5\u5220\u9664\uff0c\u53ea\u6709\u5728\u6570\u503c\u4e0d\u518d\u4f7f\u7528\u65f6\uff0cPython\u89e3\u91ca\u5668\u4f1a\u7acb\u5373\u5c06\u5176\u5220\u9664 ```python #\u51fd\u6570exec\u5c06\u5b57\u7b26\u4e32\u4f5c\u4e3a\u4ee3\u7801\u6267\u884c exec('print(\"Hello, world!\")') Hello, world! exec(input('command: ')) command: print('Hello') Hello #\u901a\u8fc7\u7ed9exec\u4f20\u9012\u7b2c\u4e8c\u4e2a\u53c2\u6570\u2014\u2014\u5b57\u5178\uff0c\u7528\u4f5c\u4ee3\u7801\u5b57\u7b26\u4e32\u7684\u547d\u540d\u7a7a\u95f4 from math import sqrt scope = {} exec('sqrt = 1', scope) sqrt(4) 2.0 scope['sqrt'] 1 scope.keys() dict_keys([' builtins ', 'sqrt']) #exec\u6267\u884c\u4e00\u7cfb\u5217Python\u8bed\u53e5\uff0c\u800ceval\u8ba1\u7b97\u7528\u5b57\u7b26\u4e32\u8868\u793a\u7684Python\u8868\u8fbe\u5f0f\uff08\u5305\u62ec\u51fd\u6570\uff09\u7684\u503c\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c eval(input(\"Enter an arithmetic expression: \")) Enter an arithmetic expression: 6 + 18 * 2 42 #\u4e3a\u907f\u514deval\u6267\u884c\u51fd\u6570\u5f71\u54cd\u5168\u5c40\u53d8\u91cf\uff0c\u5efa\u8bae\u4e5f\u63d0\u4f9b\u5355\u72ec\u547d\u540d\u5b57\u95f4 ```","title":"pass, del, exec"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u516b\u7ae0 \u5f02\u5e38/","text":">>> 1/0 Traceback (most recent call last): File \"<stdin>\", line 1, in <module> ZeroDivisionError: division by zero >>> try: ... 1/0 ... except ZeroDivisionError: ... raise ... Traceback (most recent call last): File \"<stdin>\", line 2, in <module> ZeroDivisionError: division by zero >>> try: ... 1/0 ... except ZeroDivisionError: ... raise ValueError ... Traceback (most recent call last): File \"<stdin>\", line 2, in <module> ZeroDivisionError: division by zero During handling of the above exception, another exception occurred: Traceback (most recent call last): File \"<stdin>\", line 4, in <module> ValueError >>> try: ... 1/0 ... except ZeroDivisionError: ... print('Hello') ... Hello >>> try: ... 1/0 ... except ZeroDivisionError: ... print('Hello') ... raise ValueError ... Hello Traceback (most recent call last): File \"<stdin>\", line 2, in <module> ZeroDivisionError: division by zero During handling of the above exception, another exception occurred: Traceback (most recent call last): File \"<stdin>\", line 5, in <module> ValueError >>> try: ... 1/0 ... except ZeroDivisionError: ... raise ValueError from None ... Traceback (most recent call last): File \"<stdin>\", line 4, in <module> ValueError class MuffledCalculator: muffled = False def calc(self, expr): try: return eval(expr) except ZeroDivisionError: if self.muffled: print('Division by zero is illegal') else: raise >>> try: ... x = int(input('Enter the first number: ')) ... y = int(input('Enter the second number: ')) ... print(x / y) ... except (ZeroDivisionError, TypeError) as e: ... print(e) ... Enter the first number: 1 Enter the second number: 0 division by zero","title":"\u7b2c\u516b\u7ae0 \u5f02\u5e38"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u516d\u7ae0 \u51fd\u6570/","text":"\u51fd\u6570\u6267\u884c\u7279\u5b9a\u7684\u64cd\u4f5c\u5e76\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u53ef\u4ee5\u8c03\u7528\u5b83\uff08\u8c03\u7528\u65f6\u53ef\u80fd\u9700\u8981\u63d0\u4f9b\u4e00\u4e9b\u53c2\u6570\u2014\u2014\u653e\u5728\u5706\u62ec\u53f7\u4e2d\u7684\u5185\u5bb9\uff09\u3002 #\u5728def\u8bed\u53e5\u540e\u9762\u4ee5\u53ca\u6a21\u5757\u548c\u7c7b\u7684\u5f00\u5934\uff0c\u6dfb\u52a0\u7684\u5b57\u7b26\u4e32\u79f0\u4e3a\u6587\u6863\u5b57\u7b26\u4e32(docstring) def square(x): 'Calculates the square of the number x.' return x * x >>> square.__doc__ #__doc__\u662f\u51fd\u6570\u7684\u4e00\u4e2a\u5c5e\u6027 'Calculates the square of the number x.' >>> help(square) Help on function square in module __main__: square(x) Calculates the square of the number x. #return\u8bed\u53e5\u540e\u4e0d\u8ddf\u53c2\u6570\uff0c\u5219\u8fd4\u56deNone\u503c def test(): print('This is printed') return print('This is not') >>> x = test() #\u4e0d\u8981\u5fd8\u8bb0\u51fd\u6570\u4e5f\u53ef\u4ee5\u6267\u884c\u5176\u5b83\u8bed\u53e5\uff0c\u800c\u4e0d\u4ec5\u4ec5\u53ea\u662freturn This is printed >>> x #\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e3aNone\uff0c\u4e14\u5728\u6267\u884creturn\u8bed\u53e5\u540e\u7ed3\u675f\uff0c\u7b2c\u4e8c\u4e2aprint\u672a\u88ab\u6267\u884c >>> print(x) None #\u51fd\u6570\u4e2d\u4e0d\u5305\u542breturn\u8bed\u53e5\uff0c\u5219\u5728\u6267\u884c\u5b8c\u51fd\u6570\u540e\u9ed8\u8ba4\u8fd4\u56deNone\u503c >>> def test(): ... print('This is print') ... >>> x = test() This is print >>> print(x) None #\u6ce8\u610f\uff0c\u5982\u679c\u5728if\u4e4b\u7c7b\u7684\u8bed\u53e5\u4e2d\u8fd4\u56de\u503c\uff0c\u52a1\u5fc5\u786e\u4fdd\u5176\u4ed6\u5206\u652f\u4e5f\u8fd4\u56de\u503c\uff0c\u4ee5\u514d\u8c03\u7528\u8005\u671f\u671b\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5e8f\u5217\u65f6\uff08\u5047\u8bbe\uff09\uff0c\u4e0d\u5c0f\u5fc3\u8fd4\u56de\u4e86None #\u5728python\u4e2d\uff0c\u8c03\u7528\u51fd\u6570\u4f20\u9012\u53c2\u6570\uff0c\u5b9e\u9645\u4e0a\u662f\u4f20\u9012\u5b9e\u53c2\u7684\u5185\u5b58\u5730\u5740\u7ed9\u5f62\u53c2\u4f7f\u7528\uff0c\u8fd9\u70b9\u4e0epython\u4e2d\u7684\u8d4b\u503c\u8bed\u53e5\u7c7b\u4f3c\u3002\u6240\u6709\u8981\u6ce8\u610f\uff0c\u51fd\u6570\u5185\u7684\u5c40\u90e8\u53d8\u91cf\u7684\u4fee\u6539\u53ef\u80fd\u4f1a\u5f71\u54cd\u5916\u90e8\u53d8\u91cf\u3002 >>> def change(n): ... n[0] = 'Mr. Gumby' ... ... >>> names = ['Mrs. Entity', 'Mrs. Thing'] >>> change(names) >>> names ['Mr. Gumby', 'Mrs. Thing'] \u51fd\u6570\u53ef\u4ee5\u540c\u65f6\u8fd4\u56de\u591a\u4e2a\u503c\uff0c\u4f46\u5176\u5b9e\u5c31\u662f\u4e00\u4e2atuple def story(**kwds): return 'Once upon a time, there was a ' \\ '{job} called {name}.'.format_map(kwds) def power(x, y, *other): if others: print('Received redundant parameters:', others) return pow(x, y) def interval(start, stop = None, step = 1): 'Imitates range() for step > 0' if stop is None: start, stop = 0, start result = [] i = start while i < stop: result.append(i) i += step return result \u51fd\u6570\u7684\u53c2\u6570\u6709\u4e24\u79cd\uff1a \u4f4d\u7f6e\u53c2\u6570 \u548c \u5173\u952e\u5b57 \u53c2\u6570 \u53ef\u4ee5\u7ed3\u5408\u4f7f\u7528\u4f4d\u7f6e\u53c2\u6570\u548c\u5173\u952e\u5b57\u53c2\u6570\uff0c\u4f46\u5fc5\u987b\u5148\u6307\u5b9a\u6240\u6709\u7684\u4f4d\u7f6e\u53c2\u6570\uff0c\u5426\u5219\u89e3\u91ca\u5668\u5c06\u4e0d\u77e5\u9053\u5b83\u4eec\u662f\u54ea\u4e2a\u53c2\u6570\uff08\u5373\u4e0d\u77e5\u9053\u53c2\u6570\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff09 \u6536\u96c6\u53c2\u6570\uff1a\u5b9a\u4e49\u51fd\u6570\u65f6\uff0c \u6216 * \u58f0\u660e\u5f62\u53c2\u4e3a\u5143\u7ec4\u6216\u5b57\u5178 #\u5206\u914d\u53c2\u6570\uff1a\u8c03\u7528\u51fd\u6570\u65f6\uff0c* \u6216 ** \u5c06\u5b9e\u53c2\u4ece\u5143\u7ec4\u3001\u5b57\u5178\u7ffb\u8bd1\u6210\u4f4d\u7f6e\u6216\u5173\u952e\u5b57\u53c2\u6570 #\u611f\u53d7\u7c7b\u4f3c\u4e8e\u89e3\u5305 def add(x, y): return x + y >>> params = (1, 2) >>> add(*params) 3 def hello(greeting = 'Hello', name = 'world'): print('{}, {}!'.format(greeting, name)) >>> params = {'name': 'Sir Robin', 'greeting': 'Well met'} >>> hello(**params) Well met, Sir Robin! >>> def foo(): ... x = 10 ... print(globals()) ... print(locals()) ... print(vars()) ... >>> y = 10 >>> foo() \u8c03\u7528foo\u65f6\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u4f9bfoo\u4e2d\u7684\u4ee3\u7801\u5757\u4f7f\u7528 {'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, 'foo': <function foo at 0x7f30b1913ae8>, 'y': 10} {'x': 10} {'x': 10} #\u5728\u51fd\u6570\u5185\uff0c\u4f7f\u7528\u5168\u5c40\u53d8\u91cf >>> x = 1 >>> def change_global(): ... global x ... x = x + 1 ... >>> change_global() >>> x 2 #\u5373\u4f7f\u5728\u6267\u884c\u51fd\u6570\u65f6\uff0c\u5728\u51fd\u6570\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u91cf\u4e8b\u5148\u4e0d\u5b58\u5728\uff0c\u4e5f\u80fd\u6b63\u5e38\u5de5\u4f5c >>> def var_global(): ... global y ... y = 10 ... >>> var_global() >>> y 10 #Python\u51fd\u6570\u5728\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u53c2\u6570L\u7684\u503c\u5c31\u88ab\u8ba1\u7b97\u51fa\u6765\u4e86\uff0c\u5373[]\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u53c2\u6570L\u4e5f\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b83\u6307\u5411\u5bf9\u8c61[]\uff0c\u6bcf\u6b21\u8c03\u7528\u8be5\u51fd\u6570\uff0c\u5982\u679c\u6539\u53d8\u4e86L\u7684\u5185\u5bb9\uff0c\u5219\u4e0b\u6b21\u8c03\u7528\u65f6\uff0c\u9ed8\u8ba4\u53c2\u6570\u7684\u5185\u5bb9\u5c31\u53d8\u4e86\uff0c\u4e0d\u518d\u662f\u51fd\u6570\u5b9a\u4e49\u65f6\u7684[]\u4e86\u3002 >>> def add_end(L=[]): ... L.append('END') ... return L ... >>> add_end() ['END'] >>> add_end() ['END', 'END'] >>> add_end() ['END', 'END', 'END'] \u9012\u5f52\u51fd\u6570\u901a\u5e38\u5305\u542b\u4e0b\u5728\u4e24\u90e8\u5206\uff1a \u57fa\u7ebf\u6761\u4ef6\uff08\u9488\u5bf9\u6700\u5c0f\u95ee\u9898\uff09\uff1a\u6ee1\u8db3\u8fd9\u79cd\u6761\u4ef6\u65f6\u51fd\u6570\u5c06\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u503c \u9012\u5f52\u6761\u4ef6\uff1a\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u8c03\u7528\uff0c\u8fd9\u4e9b\u8c03\u7528\u65e8\u5728\u89e3\u51b3\u95ee\u9898\u7684\u4e00\u90e8\u5206","title":"\u7b2c\u516d\u7ae0 \u51fd\u6570"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u56db\u7ae0 \u5b57\u5178/","text":"\u901a\u8fc7\u540d\u79f0\u6765\u8bbf\u95ee\u5176\u5404\u4e2a\u503c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u79f0\u4e3a\u6620\u5c04\u3002\u5b57\u5178\u662fPython\u4e2d\u552f\u4e00\u7684\u5185\u7f6e\u6620\u5c04\u7c7b\u578b\uff0c\u5176\u4e2d\u7684\u503c\u4e0d\u6309\u987a\u5e8f\u6392\u5217\uff0c\u800c\u662f\u5b58\u50a8\u5728\u952e\u4e0b\u3002\u952e\u53ef\u80fd\u662f\u6570\u3001\u5b57\u7b26\u6216\u5143\u7ec4\u3002 \u521b\u5efa\u548c\u4f7f\u7528\u5b57\u5178 #\u5b57\u5178\u7531\u952e\u53ca\u5176\u76f8\u5e94\u7684\u503c\u7ec4\u6210\uff0c\u8fd9\u79cd\u952e-\u503c\u5bf9\u79f0\u4e3a\u9879\uff08item\uff09 #\u6bcf\u4e2a\u952e\u4e0e\u5176\u503c\u4e4b\u95f4\u90fd\u7528\u5192\u53f7(:)\u5206\u9694\uff0c\u9879\u4e4b\u95f4\u7528\u9017\u53f7\u5206\u9694\uff0c\u800c\u6574\u4e2a\u5b57\u5178\u653e\u5728\u82b1\u62ec\u53f7\u5185 #\u7a7a\u5b57\u5178\uff08\u6ca1\u6709\u4efb\u4f55\u9879\uff09\u7528\u4e24\u4e2a\u82b1\u62ec\u53f7\u8868\u793a\uff0c\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u8fd9\u6837\uff1a{} #\u5728\u5b57\u5178\uff08\u4ee5\u53ca\u5176\u4ed6\u6620\u5c04\u7c7b\u578b\uff09\u4e2d\uff0c\u952e\u5fc5\u987b\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u800c\u5b57\u5178\u4e2d\u7684\u503c\u65e0\u9700\u5982\u6b64\u3002 #\u5728\u5b57\u5178\u4e2d\uff0c\u952e\u7684\u7c7b\u578b\u53ef\u4ee5\u662f\u4efb\u4f55\u4e0d\u53ef\u53d8\u7684\u7c7b\u578b\uff1a\u6570\u3001\u5b57\u7b26\u6216\u5143\u7ec4\uff0c\u800c\u4e0d\u80fd\u662f\u5217\u8868\u3002 >>> phonebook = {'Alice':'2341', 'Beth':'9102', 'Cecil':'3258'} >>> phonebook {'Alice': '2341', 'Beth': '9102', 'Cecil': '3258'} >>> phonebook['Beth'] '9102' >>> {} {} \u7c7bdict >>> items = [['name', 'Gumby'], ('age', '42')] >>> d = dict(items) >>> d = dict(name='Gumby', age=42) >>> d {'name': 'Gumby', 'age': 42} #\u6ce8\u610f\u91c7\u7528\u5173\u952e\u5b57\u5b9e\u53c2\u65f6\uff0c\u5173\u952e\u5b57\u4e0d\u80fd\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f >>> d = dict(name='Gumby', 'age'=42) File \"<stdin>\", line 1 SyntaxError: keyword can't be an expression \u57fa\u672c\u7684\u5b57\u5178\u64cd\u4f5c \u5b57\u5178\u7684\u57fa\u672c\u884c\u4e3a\u5728\u5f88\u591a\u65b9\u9762\u90fd\u7c7b\u4f3c\u4e8e\u5e8f\u5217\uff1a len(d) \u8fd4\u56de\u5b57\u5178d\u5305\u542b\u7684\u9879\u6570 d[k]\u8fd4\u56de\u4e0e\u952ek\u76f8\u5173\u8054\u7684\u503c d[k] = v \u5c06\u503cv\u5173\u8054\u5230\u952ek del d[k] \u5220\u9664\u952e\u4e3ak\u7684\u9879 k in d \u68c0\u67e5\u5b57\u5178d\u662f\u5426\u5305\u542b\u952e\u4e3ak\u7684\u9879 \u5c06\u5b57\u7b26\u4e32\u683c\u5f0f\u8bbe\u7f6e\u529f\u80fd\u7528\u4e8e\u5b57\u5178 #\u901a\u8fc7format_mat\u65b9\u6cd5 >>> phonebook {'Alice': '2341', 'Beth': '9102', 'Cecil': '3258'} >>> \"Cecil's phone number is {Cecil}.\".format_map(phonebook) \"Cecil's phone number is 3258.\" \u5b57\u5178\u65b9\u6cd5 clear ```python d = {} d['name'] = 'Gumby' d['age'] = 42 d {'name': 'Gumby', 'age': 42} returned_value = d.clear() #clear\u65b9\u6cd5\u5e76\u4e0d\u4f1a\u8fd4\u56de\u4efb\u4f55\u503c d {} returned_value print(returned_value) None x = {} y = x x['key'] = 'value' y {'key': 'value'} x = {} #\u8be5\u8bed\u53e5\u5e76\u6ca1\u6709\u6e05\u7a7a\u5b57\u5178\u53d8\u91cfy\uff0c\u5176\u53ea\u662f\u5c06\u53d8\u91cfx\u5173\u8054\u5230\u65b0\u7684\u5b57\u5178\u6570\u503c\u4e0a\uff0cy\u4ecd\u5173\u8054\u539f\u5b57\u5178\u6570\u503c y {'key': 'value'} #\u8be5\u9700\u6c42\u53ef\u4ee5\u91c7\u7528\u4e0b\u8ff0\u65b9\u6cd5 x = y x {'key': 'value'} x.clear() y {} ``` copy ```python #\u65b9\u6cd5copy\u8fd4\u56de\u4e00\u4e2a\u65b0\u5b57\u5178\uff0c\u5176\u5305\u542b\u7684\u952e-\u503c\u5bf9\u4e0e\u539f\u6765\u7684\u5b57\u5178\u76f8\u540c\uff08\u8fd9\u70b9\u4e0e\u5217\u8868\u7684\u65b9\u6cd5\u4e00\u81f4\uff09 #\u6267\u884c\u7684\u662f\u6d45\u590d\u5236\uff0c\u56e0\u4e3a\u503c\u662f\u539f\u4ef6\uff0c\u4e5f\u975e\u526f\u672c\uff08\u8fd9\u70b9\u4e0e\u5217\u8868\u7684\u65b9\u6cd5\u4e0d\u540c\uff09 x = {'username': 'admin', 'machines': ['foo', 'bar', 'baz']} y = x.copy() y {'username': 'admin', 'machines': ['foo', 'bar', 'baz']} y is x False y == x True y['username'] = 'mlh' y['machines'].remove('bar') y {'username': 'mlh', 'machines': ['foo', 'baz']} x {'username': 'admin', 'machines': ['foo', 'baz']} y['machines'] is x['machines'] True #\u6df1\u590d\u5236 from copy import deepcopy d = {} d['name'] = ['Alfred', 'Bertrand'] c = d.copy() dc = deepcopy(d) d['name'].append('Clive') c {'name': ['Alfred', 'Bertrand', 'Clive']} dc {'name': ['Alfred', 'Bertrand']} ```","title":"\u7b2c\u56db\u7ae0 \u5b57\u5178"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u56db\u7ae0 \u5b57\u5178/#_1","text":"#\u5b57\u5178\u7531\u952e\u53ca\u5176\u76f8\u5e94\u7684\u503c\u7ec4\u6210\uff0c\u8fd9\u79cd\u952e-\u503c\u5bf9\u79f0\u4e3a\u9879\uff08item\uff09 #\u6bcf\u4e2a\u952e\u4e0e\u5176\u503c\u4e4b\u95f4\u90fd\u7528\u5192\u53f7(:)\u5206\u9694\uff0c\u9879\u4e4b\u95f4\u7528\u9017\u53f7\u5206\u9694\uff0c\u800c\u6574\u4e2a\u5b57\u5178\u653e\u5728\u82b1\u62ec\u53f7\u5185 #\u7a7a\u5b57\u5178\uff08\u6ca1\u6709\u4efb\u4f55\u9879\uff09\u7528\u4e24\u4e2a\u82b1\u62ec\u53f7\u8868\u793a\uff0c\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u8fd9\u6837\uff1a{} #\u5728\u5b57\u5178\uff08\u4ee5\u53ca\u5176\u4ed6\u6620\u5c04\u7c7b\u578b\uff09\u4e2d\uff0c\u952e\u5fc5\u987b\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u800c\u5b57\u5178\u4e2d\u7684\u503c\u65e0\u9700\u5982\u6b64\u3002 #\u5728\u5b57\u5178\u4e2d\uff0c\u952e\u7684\u7c7b\u578b\u53ef\u4ee5\u662f\u4efb\u4f55\u4e0d\u53ef\u53d8\u7684\u7c7b\u578b\uff1a\u6570\u3001\u5b57\u7b26\u6216\u5143\u7ec4\uff0c\u800c\u4e0d\u80fd\u662f\u5217\u8868\u3002 >>> phonebook = {'Alice':'2341', 'Beth':'9102', 'Cecil':'3258'} >>> phonebook {'Alice': '2341', 'Beth': '9102', 'Cecil': '3258'} >>> phonebook['Beth'] '9102' >>> {} {}","title":"\u521b\u5efa\u548c\u4f7f\u7528\u5b57\u5178"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u56db\u7ae0 \u5b57\u5178/#dict","text":">>> items = [['name', 'Gumby'], ('age', '42')] >>> d = dict(items) >>> d = dict(name='Gumby', age=42) >>> d {'name': 'Gumby', 'age': 42} #\u6ce8\u610f\u91c7\u7528\u5173\u952e\u5b57\u5b9e\u53c2\u65f6\uff0c\u5173\u952e\u5b57\u4e0d\u80fd\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f >>> d = dict(name='Gumby', 'age'=42) File \"<stdin>\", line 1 SyntaxError: keyword can't be an expression","title":"\u7c7bdict"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u56db\u7ae0 \u5b57\u5178/#_2","text":"","title":"\u57fa\u672c\u7684\u5b57\u5178\u64cd\u4f5c"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u56db\u7ae0 \u5b57\u5178/#_3","text":"len(d) \u8fd4\u56de\u5b57\u5178d\u5305\u542b\u7684\u9879\u6570 d[k]\u8fd4\u56de\u4e0e\u952ek\u76f8\u5173\u8054\u7684\u503c d[k] = v \u5c06\u503cv\u5173\u8054\u5230\u952ek del d[k] \u5220\u9664\u952e\u4e3ak\u7684\u9879 k in d \u68c0\u67e5\u5b57\u5178d\u662f\u5426\u5305\u542b\u952e\u4e3ak\u7684\u9879","title":"\u5b57\u5178\u7684\u57fa\u672c\u884c\u4e3a\u5728\u5f88\u591a\u65b9\u9762\u90fd\u7c7b\u4f3c\u4e8e\u5e8f\u5217\uff1a"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u56db\u7ae0 \u5b57\u5178/#_4","text":"#\u901a\u8fc7format_mat\u65b9\u6cd5 >>> phonebook {'Alice': '2341', 'Beth': '9102', 'Cecil': '3258'} >>> \"Cecil's phone number is {Cecil}.\".format_map(phonebook) \"Cecil's phone number is 3258.\"","title":"\u5c06\u5b57\u7b26\u4e32\u683c\u5f0f\u8bbe\u7f6e\u529f\u80fd\u7528\u4e8e\u5b57\u5178"},{"location":"python/python\u57fa\u7840\u6559\u7a0b/\u7b2c\u56db\u7ae0 \u5b57\u5178/#_5","text":"clear ```python d = {} d['name'] = 'Gumby' d['age'] = 42 d {'name': 'Gumby', 'age': 42} returned_value = d.clear() #clear\u65b9\u6cd5\u5e76\u4e0d\u4f1a\u8fd4\u56de\u4efb\u4f55\u503c d {} returned_value print(returned_value) None x = {} y = x x['key'] = 'value' y {'key': 'value'} x = {} #\u8be5\u8bed\u53e5\u5e76\u6ca1\u6709\u6e05\u7a7a\u5b57\u5178\u53d8\u91cfy\uff0c\u5176\u53ea\u662f\u5c06\u53d8\u91cfx\u5173\u8054\u5230\u65b0\u7684\u5b57\u5178\u6570\u503c\u4e0a\uff0cy\u4ecd\u5173\u8054\u539f\u5b57\u5178\u6570\u503c y {'key': 'value'} #\u8be5\u9700\u6c42\u53ef\u4ee5\u91c7\u7528\u4e0b\u8ff0\u65b9\u6cd5 x = y x {'key': 'value'} x.clear() y {} ``` copy ```python #\u65b9\u6cd5copy\u8fd4\u56de\u4e00\u4e2a\u65b0\u5b57\u5178\uff0c\u5176\u5305\u542b\u7684\u952e-\u503c\u5bf9\u4e0e\u539f\u6765\u7684\u5b57\u5178\u76f8\u540c\uff08\u8fd9\u70b9\u4e0e\u5217\u8868\u7684\u65b9\u6cd5\u4e00\u81f4\uff09 #\u6267\u884c\u7684\u662f\u6d45\u590d\u5236\uff0c\u56e0\u4e3a\u503c\u662f\u539f\u4ef6\uff0c\u4e5f\u975e\u526f\u672c\uff08\u8fd9\u70b9\u4e0e\u5217\u8868\u7684\u65b9\u6cd5\u4e0d\u540c\uff09 x = {'username': 'admin', 'machines': ['foo', 'bar', 'baz']} y = x.copy() y {'username': 'admin', 'machines': ['foo', 'bar', 'baz']} y is x False y == x True y['username'] = 'mlh' y['machines'].remove('bar') y {'username': 'mlh', 'machines': ['foo', 'baz']} x {'username': 'admin', 'machines': ['foo', 'baz']} y['machines'] is x['machines'] True #\u6df1\u590d\u5236 from copy import deepcopy d = {} d['name'] = ['Alfred', 'Bertrand'] c = d.copy() dc = deepcopy(d) d['name'].append('Clive') c {'name': ['Alfred', 'Bertrand', 'Clive']} dc {'name': ['Alfred', 'Bertrand']} ```","title":"\u5b57\u5178\u65b9\u6cd5"}]}